{"abi":[{"type":"constructor","inputs":[{"name":"_registryCoordinator","type":"address","internalType":"contract ISlashingRegistryCoordinator"},{"name":"_delegationManager","type":"address","internalType":"contract IDelegationManager"},{"name":"_avsDirectory","type":"address","internalType":"contract IAVSDirectory"},{"name":"_allocationManager","type":"address","internalType":"contract IAllocationManager"}],"stateMutability":"nonpayable"},{"type":"function","name":"MAX_WEIGHING_FUNCTION_LENGTH","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"WEIGHTING_DIVISOR","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addStrategies","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"allocationManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAllocationManager"}],"stateMutability":"view"},{"type":"function","name":"applyDelta","inputs":[{"name":"value","type":"uint96","internalType":"uint96"},{"name":"delta","type":"int256","internalType":"int256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"pure"},{"type":"function","name":"avsDirectory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAVSDirectory"}],"stateMutability":"view"},{"type":"function","name":"calculateDelta","inputs":[{"name":"prev","type":"uint96","internalType":"uint96"},{"name":"cur","type":"uint96","internalType":"uint96"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"delegation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IDelegationManager"}],"stateMutability":"view"},{"type":"function","name":"deregisterOperator","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getCurrentStake","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getCurrentTotalStake","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getLatestStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeAtBlockNumber","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getStakeAtBlockNumberAndIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getStakeHistory","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StakeUpdate[]","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeHistoryLength","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getStakeUpdateAtIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeUpdateIndexAtBlockNumber","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeAtBlockNumberFromIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeHistoryLength","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeIndicesAtBlockNumber","inputs":[{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint32[]","internalType":"uint32[]"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeUpdateAtIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"initializeDelegatedStakeQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initializeSlashableStakeQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"},{"name":"lookAheadPeriod","type":"uint32","internalType":"uint32"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"minimumStakeForQuorum","inputs":[{"name":"","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"modifyStrategyParams","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"strategyIndices","type":"uint256[]","internalType":"uint256[]"},{"name":"newMultipliers","type":"uint96[]","internalType":"uint96[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordOperatorStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"newStake","type":"uint96","internalType":"uint96"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"nonpayable"},{"type":"function","name":"recordTotalStakeUpdate","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"stakeDelta","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerOperator","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint96[]","internalType":"uint96[]"},{"name":"","type":"uint96[]","internalType":"uint96[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"registryCoordinator","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract ISlashingRegistryCoordinator"}],"stateMutability":"view"},{"type":"function","name":"removeStrategies","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"indicesToRemove","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMinimumStakeForQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setSlashableStakeLookahead","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"_lookAheadBlocks","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"slashableStakeLookAheadPerQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"stakeTypePerQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint8","internalType":"enum IStakeRegistryTypes.StakeType"}],"stateMutability":"view"},{"type":"function","name":"strategiesPerQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"contract IStrategy"}],"stateMutability":"view"},{"type":"function","name":"strategyParams","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"strategyParamsByIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StrategyParams","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"strategyParamsLength","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"updateOperatorsStake","inputs":[{"name":"operators","type":"address[]","internalType":"address[]"},{"name":"operatorIds","type":"bytes32[]","internalType":"bytes32[]"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"weightOfOperatorForQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"event","name":"LookAheadPeriodChanged","inputs":[{"name":"oldLookAheadBlocks","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"newLookAheadBlocks","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"MinimumStakeForQuorumUpdated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"minimumStake","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"OperatorStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"stake","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"QuorumCreated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"StakeTypeSet","inputs":[{"name":"newStakeType","type":"uint8","indexed":false,"internalType":"enum IStakeRegistryTypes.StakeType"}],"anonymous":false},{"type":"event","name":"StrategyAddedToQuorum","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"event","name":"StrategyMultiplierUpdated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"multiplier","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StrategyRemovedFromQuorum","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"error","name":"BelowMinimumStakeRequirement","inputs":[]},{"type":"error","name":"EmptyStakeHistory","inputs":[]},{"type":"error","name":"InputArrayLengthMismatch","inputs":[]},{"type":"error","name":"InputArrayLengthZero","inputs":[]},{"type":"error","name":"InputDuplicateStrategy","inputs":[]},{"type":"error","name":"InputMultiplierZero","inputs":[]},{"type":"error","name":"InvalidBlockNumber","inputs":[]},{"type":"error","name":"LookAheadPeriodTooLong","inputs":[]},{"type":"error","name":"OnlySlashingRegistryCoordinator","inputs":[]},{"type":"error","name":"OnlySlashingRegistryCoordinatorOwner","inputs":[]},{"type":"error","name":"QuorumAlreadyExists","inputs":[]},{"type":"error","name":"QuorumDoesNotExist","inputs":[]},{"type":"error","name":"QuorumNotSlashable","inputs":[]}],"bytecode":{"object":"0x6101003461011757601f61325d38819003918201601f19168301916001600160401b0383118484101761011b57808492608094604052833981010312610117578051906001600160a01b03821682036101175760208101516001600160a01b0381168103610117576040820151916001600160a01b03831683036101175760600151926001600160a01b03841684036101175760e05260805260a05260c05260405161312d9081610130823960805181818161038c0152612a8b015260a051816110f2015260c0518181816105a7015281816106d001528181611280015281816128b80152612e65015260e05181818161069201528181610e8201528181611242015281816121cd0152818161224701526127e70152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f5f3560e01c80630390a4d514611afb5780630491b41c14611ac95780630873246114611a6c5780631f9b74e014611a1857806320b66298146118b057806325504777146117955780632cd95940146116995780633ca5a5f5146116675780634bd26e09146116285780635401ed27146116005780635e5a6775146115de5780635f1f2d771461115f578063697fbd93146111215780636b3aa72e146110dc5780636c3fb4bf14610eb15780636d14a98714610e6c57806374454c6d14610e2f57806375d4173a14610d485780637c17234714610d2d5780637f42982214610cf457806381c0750214610b0c5780639ab4d6ff14610ad45780639f3ccf6514610a79578063ac6bfb0314610a2a578063adc804da146109b6578063b6904b7814610974578063bc9a40c314610938578063bd29b8cd146108b3578063c46778a514610879578063c601527d14610624578063c8294c56146105d6578063ca8aa7c714610591578063cc5a7c201461044d578063d5eccc05146103e3578063dd9846b9146103bb578063df5cf72314610376578063e086adb314610337578063f2be94ae146102c7578063f509551a14610292578063f851e198146102335763fa28c627146101dd575f80fd5b34610230576001600160601b0361022260209261021c60406101fe36611d7d565b92909194858152600289522060ff82165f52875260405f2093612f6d565b90611b42565b505460401c16604051908152f35b80fd5b503461023057604036600319011261023057606061025a610252611b32565b600435611fe7565b61029060405180926001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565bf35b50346102305760403660031901126102305760206102bf6102b1611caf565b6102b9611c99565b906130b2565b604051908152f35b5034610230576080366003190112610230576001600160601b0360406020926102ee611b22565b60ff836102f9611d6a565b936044358152600288522091165f52845261032c61032561031f845f2060643590611b42565b50611e31565b9182612de3565b015116604051908152f35b503461023057604036600319011261023057610373610354611b22565b61035c611d6a565b906103656121b8565b61036e8161212c565b612e2b565b80f35b50346102305780600319360112610230576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346102305760206103d56103cf36611d7d565b91612f6d565b63ffffffff60405191168152f35b50346102305760203660031901126102305760ff6103ff611b22565b1680825260016020526040822090825260016020526040822054915f1983019283116104395760206001600160601b036102228585611b42565b634e487b7160e01b81526011600452602490fd5b503461023057608036600319011261023057610467611b22565b61046f611c99565b906044359163ffffffff8316830361058d576064356001600160401b038111610589576104a0903690600401611cc5565b6104a8612245565b6104c08360ff165f52600160205260405f2054151590565b61057a57906104d26104d89284612b0e565b82612d44565b60ff8116808452600560209081526040808620805460ff19166001179055519193919290830183807f7c112e863ccf007862e2c9e25819c933fedbc9350a6443423b4a8599c2e8a52d92600161053197520390a1612e2b565b81526001602052610373604082206040519061054c82611c33565b63ffffffff43168252836020830152836040830152611f3a565b634e487b7160e01b5f52602160045260245ffd5b6310cda51760e21b8552600485fd5b8480fd5b8380fd5b50346102305780600319360112610230576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610230576060366003190112610230576001600160601b03604060209261032c61032561031f610606611b22565b9360ff610611611d6a565b9516815260018852856044359120611b42565b50346102305760403660031901126102305761063e611b22565b906024356001600160401b0381116108755761065e903690600401611cc5565b916106676121b8565b6106708161212c565b61067a8382612b0e565b825160405163de1164bb60e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa91821561086a578492610839575b506040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169061070281611c04565b6001600160a01b03848116825260ff8616602083019081526040516304c1b8eb60e31b8152925190911660048301525163ffffffff166024820152602081604481855afa90811561082e5786916107ff575b5061075d578480f35b61076682611dd2565b91855b8181106107d6575050849550803b15610589576107a09385809460405196879586948593630287f75160e51b855260048501611eaf565b03925af180156107cb576107b6575b8080808480f35b816107c091611c4e565b61023057805f6107af565b6040513d84823e3d90fd5b6001906001600160a01b036107eb828b611e1d565b5151166107f88287611e1d565b5201610769565b610821915060203d602011610827575b6108198183611c4e565b810190611e97565b5f610754565b503d61080f565b6040513d88823e3d90fd5b61085c91925060203d602011610863575b6108548183611c4e565b810190611e78565b905f6106ca565b503d61084a565b6040513d86823e3d90fd5b5080fd5b5034610230576020366003190112610230576001600160601b03604060209260ff6108a2611b22565b168152808452205416604051908152f35b5034610230576040366003190112610230576004356024356001600160401b038111610934576108e7903690600401611b9b565b6108f2929192612245565b835b8181106108ff578480f35b8061092d6109106001938588611e04565b3560f81c61091d8161212c565b6109278187612286565b90612057565b50016108f4565b8280fd5b503461023057604036600319011261023057610373610955611b22565b61095d611c99565b906109666121b8565b61096f8161212c565b612d44565b50346102305760403660031901126102305761025a61031f60609260ff610999611b22565b6109a1611fa4565b50168152600160205260406024359120611b42565b503461023057604036600319011261023057610a07610a0160409260ff6109db611b22565b82602087516109e981611c04565b82815201521681526003602052836024359120611b42565b50611fc2565b6001600160601b03602083519260018060a01b0381511684520151166020820152f35b50346102305760603660031901126102305760ff6040610a48611b22565b92610a51611fa4565b50602435815260026020522091165f52602052606061025a61031f60405f2060443590611b42565b503461023057604036600319011261023057610a93611b22565b60ff16815260046020526040812080546024359290831015610230576020610abb8484611b42565b905460405160039290921b1c6001600160a01b03168152f35b50346102305760203660031901126102305763ffffffff604060209260ff610afa611b22565b16815260068452205416604051908152f35b50346102305760403660031901126102305760043563ffffffff8116809103610875576024356001600160401b03811161093457610b4e903690600401611b9b565b9190610b5983611c6f565b91610b676040519384611c4e565b838352610b7384611c6f565b602084019490601f1901368637855b818110610bd357868587604051928392602084019060208552518091526040840192915b818110610bb4575050500390f35b825163ffffffff16845285945060209384019390920191600101610ba6565b610bde818386611e04565b3560f81c610beb8161212c565b808852600160205260408820805415610ce05788528363ffffffff60208a20541611610cd15780885260016020526040882054885b818110610c33575b505050600101610b82565b828a52600160205260408a20610c498284611e6b565b5f19810191908211610cbd57610c65889263ffffffff92611b42565b5054161115610c7657600101610c20565b90610c819250611e6b565b5f198101908111610ca9579063ffffffff60019216610ca08288611e1d565b52905f80610c28565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b8c52601160045260248cfd5b63cc64657360e01b8852600488fd5b634e487b7160e01b89526032600452602489fd5b5034610230576040366003190112610230576020610d1c610d13611caf565b60243590612d9a565b6001600160601b0360405191168152f35b50346102305780600319360112610230576020604051818152f35b503461023057606036600319011261023057610d62611b22565b610d6a611c99565b6044356001600160401b03811161058d57610d89903690600401611cc5565b610d91612245565b610da98360ff165f52600160205260405f2054151590565b610e205782916104d2610dbe9260ff95612b0e565b1680825260056020526040822060ff1981541690557f7c112e863ccf007862e2c9e25819c933fedbc9350a6443423b4a8599c2e8a52d60405180610e028582611c86565b0390a181526001602052610373604082206040519061054c82611c33565b6310cda51760e21b8452600484fd5b503461023057606036600319011261023057610e49611b32565b604435916001600160601b03831683036102305760206102bf8484600435612411565b50346102305780600319360112610230576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610230576060366003190112610230576004356001600160401b0381116108755736602382011215610875578060040135610eed81611c6f565b91610efb6040519384611c4e565b8183526024602084019260051b8201019036821161058957602401915b8183106110bc57505050602435906001600160401b038211610934573660238301121561093457816004013591610f4e83611c6f565b92610f5c6040519485611c4e565b8084526024602085019160051b830101913683116110b857602401905b8282106110a85750505060443560ff8116810361058d57610f98612245565b610fa28251611dd2565b92610fac8261212c565b610fb68383612733565b8693919290845b865186101561105557610fd08683611e1d565b5115611037575b611000610fe48785611e1d565b51856001600160601b03610ff88a8a611e1d565b511691612411565b908982820192831291129080158216911516176110235760019590950194610fbd565b634e487b7160e01b89526011600452602489fd5b886110428787611e1d565b52600161104f878a611e1d565b52610fd7565b88611061899286612057565b50604051918291602083016020845282518091526020604085019301915b81811061108d575050500390f35b8251151584528594506020938401939092019160010161107f565b8135815260209182019101610f79565b8580fd5b82356001600160a01b03811681036110b857815260209283019201610f18565b50346102305780600319360112610230576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346102305760203660031901126102305760ff604061115b9282611144611b22565b168152600560205220541660405191829182611c86565b0390f35b503461136557604036600319011261136557611179611b22565b6024356001600160401b0381116113655736602382011215611365578060040135906111a482611c6f565b916111b26040519384611c4e565b8083526024602084019160051b8301019136831161136557602401905b8282106115ce575050506111e16121b8565b6111ea8261212c565b805180156115bf5760ff831691825f52600360205260405f2091835f52600460205260405f209161121a82611dd2565b935f5b8381106113a957505060405163de1164bb60e01b8152949250602091508490506004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa92831561135a575f93611388575b506040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916112b282611c04565b6001600160a01b038581168352602083019182526040516304c1b8eb60e31b815292511660048301525163ffffffff166024820152602081604481855afa90811561135a575f91611369575b50611307578480f35b803b1561136557611332935f80946040519687958694859363b66bd98960e01b855260048501611eaf565b03925af1801561135a57611347578080808480f35b61135391505f90611c4e565b5f5f6107af565b6040513d5f823e3d90fd5b5f80fd5b611382915060203d602011610827576108198183611c4e565b5f6112fe565b6113a291935060203d602011610863576108548183611c4e565b915f61127a565b6113bd6113b68285611e1d565b5183611b42565b50546001600160a01b03166113d28288611e1d565b52867f31fa2e2cd280c9375e13ffcf3d81e2378100186e4058f8d3ddb690b82dcd31f7602061140b6114048588611e1d565b5186611b42565b50546040516001600160a01b039091168152a2867f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75604061144f6114048588611e1d565b505481516001600160a01b0390911681525f6020820152a281545f19810190811161156a5761147e9083611b42565b5061149361148c8386611e1d565b5184611b42565b61157e57818103611591575b505081548015611556575f19016114b68184611b42565b61157e575f9055825584545f19810190811161156a576114d96115239187611b42565b905460039190911b1c6001600160a01b03166114ff6114f88487611e1d565b5188611b42565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b8454908115611556576001915f190161153c8188611b42565b815490858060a01b039060031b1b1916905586550161121d565b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f525f60045260245ffd5b815481546001600160a01b039091166001600160a01b03199182168117835592541690911790555f8061149f565b63796cc52560e01b5f5260045ffd5b81358152602091820191016111cf565b34611365575f366003190112611365576020604051670de0b6b3a76400008152f35b346113655760403660031901126113655760206001600160601b03604061032c610252611b32565b3461136557604036600319011261136557611641611b32565b6004355f52600260205260ff60405f2091165f52602052602060405f2054604051908152f35b346113655760203660031901126113655760ff611682611b22565b165f526003602052602060405f2054604051908152f35b34611365576040366003190112611365576116b2611b32565b6004355f52600260205260ff60405f2091165f5260205260405f208054906116d982611c6f565b916116e76040519384611c4e565b8083526020830180925f5260205f205f915b838310611778578486604051918291602083019060208452518091526040830191905f5b81811061172b575050500390f35b91935091602060608261176a60019488516001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565b01940191019184939261171d565b60016020819261178785611e31565b8152019201920191906116f9565b34611365576060366003190112611365576004356001600160a01b038116810361136557602435906044356001600160401b038111611365576117dc903690600401611b9b565b906117e5612245565b6117ee82611dd2565b926117f883611dd2565b925f5b81811061182c5761181e8661115b87604051938493604085526040850190611bc8565b908382036020850152611bc8565b611837818386611e04565b3560f81c906118458261212c565b61184f848361215a565b929092156118a1578281611869600195611885948d612411565b916001600160601b0361187c868d611e1d565b91169052612057565b6001600160601b036118978389611e1d565b91169052016117fb565b63207f13e360e11b5f5260045ffd5b34611365576060366003190112611365576118c9611b22565b6024356001600160401b038111611365576118e8903690600401611b6b565b916044356001600160401b03811161136557611908903690600401611b6b565b90916119126121b8565b61191b8161212c565b84156115bf57848203611a095760ff1691825f52600360205260405f20935f5b86811061194457005b8061199661195d6119586001948888611dae565b611dbe565b61197261196b848c88611dae565b358a611b42565b5080546001600160a01b031660a09290921b6001600160a01b031916919091179055565b857f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a756119c661196b848c88611dae565b50848060a01b039054166119de611958858a8a611dae565b604080516001600160a01b039390931683526001600160601b0391909116602083015290a20161193b565b6343714afd60e01b5f5260045ffd5b3461136557604036600319011261136557611a31611b22565b602435906001600160a01b03821682036113655760209181611a55611a5a9361212c565b61215a565b506001600160601b0360405191168152f35b3461136557604036600319011261136557611a85611b22565b60ff60243591165f52600360205260405f20805482101561136557604091611aac91611b42565b505481516001600160a01b038216815260a09190911c6020820152f35b346113655760203660031901126113655760ff611ae4611b22565b165f526001602052602060405f2054604051908152f35b3461136557604036600319011261136557611b20611b17611b22565b60243590612057565b005b6004359060ff8216820361136557565b6024359060ff8216820361136557565b8054821015611b57575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b9181601f84011215611365578235916001600160401b038311611365576020808501948460051b01011161136557565b9181601f84011215611365578235916001600160401b038311611365576020838186019501011161136557565b90602080835192838152019201905f5b818110611be55750505090565b82516001600160601b0316845260209384019390920191600101611bd8565b604081019081106001600160401b03821117611c1f57604052565b634e487b7160e01b5f52604160045260245ffd5b606081019081106001600160401b03821117611c1f57604052565b90601f801991011681019081106001600160401b03821117611c1f57604052565b6001600160401b038111611c1f5760051b60200190565b9190602083019260028210156105665752565b602435906001600160601b038216820361136557565b600435906001600160601b038216820361136557565b81601f8201121561136557803590611cdc82611c6f565b92611cea6040519485611c4e565b82845260208085019360061b8301019181831161136557602001925b828410611d14575050505090565b6040848303126113655760405190611d2b82611c04565b84356001600160a01b03811681036113655782526020850135906001600160601b03821682036113655782602092836040950152815201930192611d06565b6024359063ffffffff8216820361136557565b6060906003190112611365576004359060243560ff81168103611365579060443563ffffffff811681036113655790565b9190811015611b575760051b0190565b356001600160601b03811681036113655790565b90611ddc82611c6f565b611de96040519182611c4e565b8281528092611dfa601f1991611c6f565b0190602036910137565b90821015611b57570190565b805115611b575760200190565b8051821015611b575760209160051b010190565b90604051611e3e81611c33565b60406001600160601b0382945463ffffffff8116845263ffffffff8160201c166020850152821c16910152565b9190820391821161156a57565b9081602091031261136557516001600160a01b03811681036113655790565b90816020910312611365575180151581036113655790565b60809060ff60209394606083019560018060a01b031683521683820152606060408201528451809452019201905f5b818110611eeb5750505090565b82516001600160a01b0316845260209384019390920191600101611ede565b906bffffffffffffffffffffffff60401b82549160401b16906bffffffffffffffffffffffff60401b1916179055565b8054600160401b811015611c1f57611f5791600182018155611b42565b61157e578151815460208085015167ffffffff00000000911b1663ffffffff90921667ffffffffffffffff1990911617178155611fa2916001600160601b0390604001511690611f0a565b565b60405190611fb182611c33565b5f6040838281528260208201520152565b90604051611fcf81611c04565b91546001600160a01b038116835260a01c6020830152565b90611ff0611fa4565b50815f52600260205260405f2060ff82165f5260205260405f205490612014611fa4565b92826120205750505090565b909192505f52600260205260ff60405f2091165f5260205260405f205f19820191821161156a576120549161031f91611b42565b90565b60ff165f81815260016020526040902080549192915f19810190811161156a5761208091611b42565b509080156121195763ffffffff6120a58354926001600160601b038460401c16612d9a565b938492438316921682036120be57505061205491611f0a565b835467ffffffff000000001916602083901b67ffffffff000000001617909355612054929091505f52600160205260405f20604051916120fd83611c33565b82525f60208301526001600160601b0384166040830152611f3a565b506001600160601b0391505460401c1690565b6121449060ff165f52600160205260405f2054151590565b1561214b57565b637310cff560e11b5f5260045ffd5b6001600160601b036121a36121aa94936121b2936040519161217d604084611c4e565b600183526020368185013761219183611e10565b6001600160a01b039091169052612733565b9490611e10565b511692611e10565b51151590565b604051638da5cb5b60e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561135a575f91612226575b506001600160a01b0316330361221757565b63ce98c24b60e01b5f5260045ffd5b61223f915060203d602011610863576108548183611c4e565b5f612205565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361227757565b632c01b20560e21b5f5260045ffd5b905f90825f52600260205260405f2060ff82165f5260205260405f205480155f14612316575090825f5160206130d85f395f51905f5260405f94612054968652600260205281862060ff821687526020526123028287208351906122e982611c33565b63ffffffff431682528860208301528885830152611f3a565b60ff825191168152856020820152a26130b2565b909150825f52600260205260405f2060ff83165f5260205260405f20905f19810190811161156a5761234791611b42565b508054926001600160601b038460401c169182156124085760405f945f5160206130d85f395f51905f529263ffffffff61205498814316918291161488146123aa5750805473ffffffffffffffffffffffff000000000000000019169055612302565b815467ffffffff000000001916602082901b67ffffffff00000000161790915561240390858852600260205283882060ff841689526020528388208451916123f183611c33565b82528860208301528885830152611f3a565b612302565b50505050505f90565b91905f90835f52600260205260405f2060ff82165f5260205260405f205480155f146124b25750925f5160206130d85f395f51905f52604061205495835f526002602052815f2060ff82165f52602052612495825f2083519061247382611c33565b63ffffffff431682525f60208301526001600160601b03891685830152611f3a565b60ff8251911681526001600160601b0386166020820152a26130b2565b909150835f52600260205260405f2060ff83165f5260205260405f20905f19810190811161156a576124e391611b42565b50928354916001600160601b038360401c16926001600160601b0385169182851461259e57612054968663ffffffff5f5160206130d85f395f51905f529560409582431692839116145f1461254257505061253d91611f0a565b612495565b835467ffffffff000000001916602083901b67ffffffff00000000161790935561253d92909150865f526002602052845f2060ff85165f52602052845f209085519261258d84611c33565b83525f602084015285830152611f3a565b505050505050505f90565b602081830312611365578051906001600160401b03821161136557019080601f83011215611365578151906125dd82611c6f565b926125eb6040519485611c4e565b82845260208085019360051b820101908282116113655760208101935b82851061261757505050505090565b84516001600160401b03811161136557820184603f820112156113655760208101519061264382611c6f565b916126516040519384611c4e565b8083526020808085019260051b840101019187831161136557604001905b82821061268757505050815260209485019401612608565b815181526020918201910161266f565b90602080835192838152019201905f5b8181106126b45750505090565b82516001600160a01b03168452602093840193909201916001016126a7565b90602082549182815201915f5260205f20905f5b8181106126f45750505090565b82546001600160a01b03168452602090930192600192830192016126e7565b906001600160601b03809116911601906001600160601b03821161156a57565b61273d8251611dd2565b60ff6127498451611dd2565b92165f8181526003602052604090208054919591908161276881611c6f565b916127766040519384611c4e565b81835260208301905f5260205f205f915b838310612ae45750505050865f52600560205260ff60405f205416600281101561056657600103612a4057865f52600660205263ffffffff6127cf8160405f20541643612b01565b60405163de1164bb60e01b81529116906020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561135a575f91612886918391612a21575b506040519061283382611c04565b6001600160a01b03908116825260208083018d81528d8652600491829052604080872090516315d5962560e11b81529451909316918401919091525163ffffffff1660248301529093849283926128ac91565b60a0604485015261289a60a485018e612697565b848103600319016064860152906126d3565b608483019190915203817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561135a575f916129ff575b50925b5f5b87518110156129f2575f5b8481106129475750806001600160601b0361291d60019389611e1d565b51168a5f525f6020526001600160601b0360405f2054161115612940828a611e1d565b52016128f5565b6129518185611e1d565b519061296781612961858a611e1d565b51611e1d565b51612977575b6001915001612900565b6001600160601b03602061298f83612961878c611e1d565b51930151169182810292818404149015171561156a576129d76001600160601b03670de0b6b3a764000060019404166001600160601b036129d0868c611e1d565b5116612713565b6001600160601b036129e9858b611e1d565b9116905261296d565b5095505050509092509190565b612a1b91503d805f833e612a138183611c4e565b8101906125a9565b5f6128f0565b612a3a915060203d602011610863576108548183611c4e565b5f612825565b865f526004602052612a875f6040812060405180938192637870733b60e11b835260406004840152612a75604484018d612697565b838103600319016024850152906126d3565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561135a575f91612aca575b50926128f3565b612ade91503d805f833e612a138183611c4e565b5f612ac3565b600160208192612af385611fc2565b815201920192019190612787565b9190820180921161156a57565b8151156115bf5760ff8251911691825f52600360205260405f2054926020612b368486612b01565b11611a09575f925b808410612b4c575050505050565b90919293945f5b612b5d8688612b01565b811015612bb057835f526003602052612b798160405f20611b42565b50546001600160a01b0390811690612b918888611e1d565b51511614612ba157600101612b53565b637b74340b60e01b5f5260045ffd5b509493929190926001600160601b036020612bcb8386611e1d565b5101511615612d3557815f52600360205260405f20612bea8285611e1d565b51908054600160401b811015611c1f57612c0991600182018155611b42565b61157e5781516020929092015160a01b6001600160a01b0319166001600160a01b03929092169190911790555f828152600460205260409020906001600160a01b03612c558286611e1d565b515116825490600160401b821015611c1f576114ff8260019586612c7b95018155611b42565b827f10565e56cacbf32eca267945f054fec02e59750032d113d3302182ad967f54046020848060a01b03612caf8589611e1d565b515116604051908152a2827f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75838060a01b03612ceb8488611e1d565b5151166001600160601b036020612d02868a611e1d565b510151604080516001600160a01b0394909416845291166001600160601b03166020830152819081010390a20192612b3e565b637257125160e01b5f5260045ffd5b602060ff7f26eecff2b70b0a71104ff4d940ba7162d23a95c248771fc487a7be17a596b3cf921692835f525f82526001600160601b0360405f20911690816001600160601b0319825416179055604051908152a2565b905f811215612dcf57600160ff1b811461156a576001600160601b0380915f03169116036001600160601b03811161156a5790565b906001600160601b03612054921690612713565b63ffffffff808251169216918210612e12576020015163ffffffff168015918215612e21575b505015612e1257565b631391e11b60e21b5f5260045ffd5b1090505f80612e09565b60ff1690815f52600560205260ff60405f205416600281101561056657600103612f5e57604051632981eb7760e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa91821561135a575f92612f19575b5063ffffffff80911691168111612f0a57816040917f28d7358b79f02d21b8b7e17aefc4185a64308aa37406fa5befc05b91932c39c7935f52600660205263ffffffff835f205416915f526006602052825f208163ffffffff1982541617905582519182526020820152a1565b630bd441b960e21b5f5260045ffd5b9091506020813d602011612f56575b81612f3560209383611c4e565b81010312611365575163ffffffff81168103611365579063ffffffff612e9d565b3d9150612f28565b63a3be258360e01b5f5260045ffd5b929190835f52600260205260405f2060ff82165f5260205260405f2054805b6130515760405162461bcd60e51b815260206004820152608160248201527f5374616b6552656769737472792e5f6765745374616b65557064617465496e6460448201527f6578466f724f70657261746f724174426c6f636b4e756d6265723a206e6f207360648201527f74616b652075706461746520666f756e6420666f72206f70657261746f72496460848201527f20616e642071756f72756d4e756d62657220617420626c6f636b206e756d626560a4820152603960f91b60c482015260e490fd5b845f52600260205260405f2060ff83165f5260205260405f205f1982019082821161156a576130858263ffffffff92611b42565b50541663ffffffff851610156130a55750801561156a575f190180612f8c565b63ffffffff169450505050565b6001600160601b039081169116818103915f13801582841316918312161761156a579056fe2f527d527e95d8fe40aec55377743bb779087da3f6d0d08f12e36444da62327da26469706673582212209b7c92c297d991895f28d14976a3315f64ea997caf1f2af8e706d59129f3cd7c64736f6c634300081b0033","sourceMap":"201:1018:129:-:0;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;3406:50:109;;201:1018:129;3466:31:109;3507:28;;3545:38;;201:1018:129;;;;;;;;;;;;;;;;;;;3507:28:109;201:1018:129;;;;;3545:38:109;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;3406:50:109;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;201:1018:129;;;;;;-1:-1:-1;201:1018:129;;;;;-1:-1:-1;201:1018:129","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361015610011575f80fd5b5f5f3560e01c80630390a4d514611afb5780630491b41c14611ac95780630873246114611a6c5780631f9b74e014611a1857806320b66298146118b057806325504777146117955780632cd95940146116995780633ca5a5f5146116675780634bd26e09146116285780635401ed27146116005780635e5a6775146115de5780635f1f2d771461115f578063697fbd93146111215780636b3aa72e146110dc5780636c3fb4bf14610eb15780636d14a98714610e6c57806374454c6d14610e2f57806375d4173a14610d485780637c17234714610d2d5780637f42982214610cf457806381c0750214610b0c5780639ab4d6ff14610ad45780639f3ccf6514610a79578063ac6bfb0314610a2a578063adc804da146109b6578063b6904b7814610974578063bc9a40c314610938578063bd29b8cd146108b3578063c46778a514610879578063c601527d14610624578063c8294c56146105d6578063ca8aa7c714610591578063cc5a7c201461044d578063d5eccc05146103e3578063dd9846b9146103bb578063df5cf72314610376578063e086adb314610337578063f2be94ae146102c7578063f509551a14610292578063f851e198146102335763fa28c627146101dd575f80fd5b34610230576001600160601b0361022260209261021c60406101fe36611d7d565b92909194858152600289522060ff82165f52875260405f2093612f6d565b90611b42565b505460401c16604051908152f35b80fd5b503461023057604036600319011261023057606061025a610252611b32565b600435611fe7565b61029060405180926001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565bf35b50346102305760403660031901126102305760206102bf6102b1611caf565b6102b9611c99565b906130b2565b604051908152f35b5034610230576080366003190112610230576001600160601b0360406020926102ee611b22565b60ff836102f9611d6a565b936044358152600288522091165f52845261032c61032561031f845f2060643590611b42565b50611e31565b9182612de3565b015116604051908152f35b503461023057604036600319011261023057610373610354611b22565b61035c611d6a565b906103656121b8565b61036e8161212c565b612e2b565b80f35b50346102305780600319360112610230576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346102305760206103d56103cf36611d7d565b91612f6d565b63ffffffff60405191168152f35b50346102305760203660031901126102305760ff6103ff611b22565b1680825260016020526040822090825260016020526040822054915f1983019283116104395760206001600160601b036102228585611b42565b634e487b7160e01b81526011600452602490fd5b503461023057608036600319011261023057610467611b22565b61046f611c99565b906044359163ffffffff8316830361058d576064356001600160401b038111610589576104a0903690600401611cc5565b6104a8612245565b6104c08360ff165f52600160205260405f2054151590565b61057a57906104d26104d89284612b0e565b82612d44565b60ff8116808452600560209081526040808620805460ff19166001179055519193919290830183807f7c112e863ccf007862e2c9e25819c933fedbc9350a6443423b4a8599c2e8a52d92600161053197520390a1612e2b565b81526001602052610373604082206040519061054c82611c33565b63ffffffff43168252836020830152836040830152611f3a565b634e487b7160e01b5f52602160045260245ffd5b6310cda51760e21b8552600485fd5b8480fd5b8380fd5b50346102305780600319360112610230576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610230576060366003190112610230576001600160601b03604060209261032c61032561031f610606611b22565b9360ff610611611d6a565b9516815260018852856044359120611b42565b50346102305760403660031901126102305761063e611b22565b906024356001600160401b0381116108755761065e903690600401611cc5565b916106676121b8565b6106708161212c565b61067a8382612b0e565b825160405163de1164bb60e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa91821561086a578492610839575b506040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169061070281611c04565b6001600160a01b03848116825260ff8616602083019081526040516304c1b8eb60e31b8152925190911660048301525163ffffffff166024820152602081604481855afa90811561082e5786916107ff575b5061075d578480f35b61076682611dd2565b91855b8181106107d6575050849550803b15610589576107a09385809460405196879586948593630287f75160e51b855260048501611eaf565b03925af180156107cb576107b6575b8080808480f35b816107c091611c4e565b61023057805f6107af565b6040513d84823e3d90fd5b6001906001600160a01b036107eb828b611e1d565b5151166107f88287611e1d565b5201610769565b610821915060203d602011610827575b6108198183611c4e565b810190611e97565b5f610754565b503d61080f565b6040513d88823e3d90fd5b61085c91925060203d602011610863575b6108548183611c4e565b810190611e78565b905f6106ca565b503d61084a565b6040513d86823e3d90fd5b5080fd5b5034610230576020366003190112610230576001600160601b03604060209260ff6108a2611b22565b168152808452205416604051908152f35b5034610230576040366003190112610230576004356024356001600160401b038111610934576108e7903690600401611b9b565b6108f2929192612245565b835b8181106108ff578480f35b8061092d6109106001938588611e04565b3560f81c61091d8161212c565b6109278187612286565b90612057565b50016108f4565b8280fd5b503461023057604036600319011261023057610373610955611b22565b61095d611c99565b906109666121b8565b61096f8161212c565b612d44565b50346102305760403660031901126102305761025a61031f60609260ff610999611b22565b6109a1611fa4565b50168152600160205260406024359120611b42565b503461023057604036600319011261023057610a07610a0160409260ff6109db611b22565b82602087516109e981611c04565b82815201521681526003602052836024359120611b42565b50611fc2565b6001600160601b03602083519260018060a01b0381511684520151166020820152f35b50346102305760603660031901126102305760ff6040610a48611b22565b92610a51611fa4565b50602435815260026020522091165f52602052606061025a61031f60405f2060443590611b42565b503461023057604036600319011261023057610a93611b22565b60ff16815260046020526040812080546024359290831015610230576020610abb8484611b42565b905460405160039290921b1c6001600160a01b03168152f35b50346102305760203660031901126102305763ffffffff604060209260ff610afa611b22565b16815260068452205416604051908152f35b50346102305760403660031901126102305760043563ffffffff8116809103610875576024356001600160401b03811161093457610b4e903690600401611b9b565b9190610b5983611c6f565b91610b676040519384611c4e565b838352610b7384611c6f565b602084019490601f1901368637855b818110610bd357868587604051928392602084019060208552518091526040840192915b818110610bb4575050500390f35b825163ffffffff16845285945060209384019390920191600101610ba6565b610bde818386611e04565b3560f81c610beb8161212c565b808852600160205260408820805415610ce05788528363ffffffff60208a20541611610cd15780885260016020526040882054885b818110610c33575b505050600101610b82565b828a52600160205260408a20610c498284611e6b565b5f19810191908211610cbd57610c65889263ffffffff92611b42565b5054161115610c7657600101610c20565b90610c819250611e6b565b5f198101908111610ca9579063ffffffff60019216610ca08288611e1d565b52905f80610c28565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b8c52601160045260248cfd5b63cc64657360e01b8852600488fd5b634e487b7160e01b89526032600452602489fd5b5034610230576040366003190112610230576020610d1c610d13611caf565b60243590612d9a565b6001600160601b0360405191168152f35b50346102305780600319360112610230576020604051818152f35b503461023057606036600319011261023057610d62611b22565b610d6a611c99565b6044356001600160401b03811161058d57610d89903690600401611cc5565b610d91612245565b610da98360ff165f52600160205260405f2054151590565b610e205782916104d2610dbe9260ff95612b0e565b1680825260056020526040822060ff1981541690557f7c112e863ccf007862e2c9e25819c933fedbc9350a6443423b4a8599c2e8a52d60405180610e028582611c86565b0390a181526001602052610373604082206040519061054c82611c33565b6310cda51760e21b8452600484fd5b503461023057606036600319011261023057610e49611b32565b604435916001600160601b03831683036102305760206102bf8484600435612411565b50346102305780600319360112610230576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610230576060366003190112610230576004356001600160401b0381116108755736602382011215610875578060040135610eed81611c6f565b91610efb6040519384611c4e565b8183526024602084019260051b8201019036821161058957602401915b8183106110bc57505050602435906001600160401b038211610934573660238301121561093457816004013591610f4e83611c6f565b92610f5c6040519485611c4e565b8084526024602085019160051b830101913683116110b857602401905b8282106110a85750505060443560ff8116810361058d57610f98612245565b610fa28251611dd2565b92610fac8261212c565b610fb68383612733565b8693919290845b865186101561105557610fd08683611e1d565b5115611037575b611000610fe48785611e1d565b51856001600160601b03610ff88a8a611e1d565b511691612411565b908982820192831291129080158216911516176110235760019590950194610fbd565b634e487b7160e01b89526011600452602489fd5b886110428787611e1d565b52600161104f878a611e1d565b52610fd7565b88611061899286612057565b50604051918291602083016020845282518091526020604085019301915b81811061108d575050500390f35b8251151584528594506020938401939092019160010161107f565b8135815260209182019101610f79565b8580fd5b82356001600160a01b03811681036110b857815260209283019201610f18565b50346102305780600319360112610230576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346102305760203660031901126102305760ff604061115b9282611144611b22565b168152600560205220541660405191829182611c86565b0390f35b503461136557604036600319011261136557611179611b22565b6024356001600160401b0381116113655736602382011215611365578060040135906111a482611c6f565b916111b26040519384611c4e565b8083526024602084019160051b8301019136831161136557602401905b8282106115ce575050506111e16121b8565b6111ea8261212c565b805180156115bf5760ff831691825f52600360205260405f2091835f52600460205260405f209161121a82611dd2565b935f5b8381106113a957505060405163de1164bb60e01b8152949250602091508490506004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa92831561135a575f93611388575b506040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916112b282611c04565b6001600160a01b038581168352602083019182526040516304c1b8eb60e31b815292511660048301525163ffffffff166024820152602081604481855afa90811561135a575f91611369575b50611307578480f35b803b1561136557611332935f80946040519687958694859363b66bd98960e01b855260048501611eaf565b03925af1801561135a57611347578080808480f35b61135391505f90611c4e565b5f5f6107af565b6040513d5f823e3d90fd5b5f80fd5b611382915060203d602011610827576108198183611c4e565b5f6112fe565b6113a291935060203d602011610863576108548183611c4e565b915f61127a565b6113bd6113b68285611e1d565b5183611b42565b50546001600160a01b03166113d28288611e1d565b52867f31fa2e2cd280c9375e13ffcf3d81e2378100186e4058f8d3ddb690b82dcd31f7602061140b6114048588611e1d565b5186611b42565b50546040516001600160a01b039091168152a2867f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75604061144f6114048588611e1d565b505481516001600160a01b0390911681525f6020820152a281545f19810190811161156a5761147e9083611b42565b5061149361148c8386611e1d565b5184611b42565b61157e57818103611591575b505081548015611556575f19016114b68184611b42565b61157e575f9055825584545f19810190811161156a576114d96115239187611b42565b905460039190911b1c6001600160a01b03166114ff6114f88487611e1d565b5188611b42565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b8454908115611556576001915f190161153c8188611b42565b815490858060a01b039060031b1b1916905586550161121d565b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f525f60045260245ffd5b815481546001600160a01b039091166001600160a01b03199182168117835592541690911790555f8061149f565b63796cc52560e01b5f5260045ffd5b81358152602091820191016111cf565b34611365575f366003190112611365576020604051670de0b6b3a76400008152f35b346113655760403660031901126113655760206001600160601b03604061032c610252611b32565b3461136557604036600319011261136557611641611b32565b6004355f52600260205260ff60405f2091165f52602052602060405f2054604051908152f35b346113655760203660031901126113655760ff611682611b22565b165f526003602052602060405f2054604051908152f35b34611365576040366003190112611365576116b2611b32565b6004355f52600260205260ff60405f2091165f5260205260405f208054906116d982611c6f565b916116e76040519384611c4e565b8083526020830180925f5260205f205f915b838310611778578486604051918291602083019060208452518091526040830191905f5b81811061172b575050500390f35b91935091602060608261176a60019488516001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565b01940191019184939261171d565b60016020819261178785611e31565b8152019201920191906116f9565b34611365576060366003190112611365576004356001600160a01b038116810361136557602435906044356001600160401b038111611365576117dc903690600401611b9b565b906117e5612245565b6117ee82611dd2565b926117f883611dd2565b925f5b81811061182c5761181e8661115b87604051938493604085526040850190611bc8565b908382036020850152611bc8565b611837818386611e04565b3560f81c906118458261212c565b61184f848361215a565b929092156118a1578281611869600195611885948d612411565b916001600160601b0361187c868d611e1d565b91169052612057565b6001600160601b036118978389611e1d565b91169052016117fb565b63207f13e360e11b5f5260045ffd5b34611365576060366003190112611365576118c9611b22565b6024356001600160401b038111611365576118e8903690600401611b6b565b916044356001600160401b03811161136557611908903690600401611b6b565b90916119126121b8565b61191b8161212c565b84156115bf57848203611a095760ff1691825f52600360205260405f20935f5b86811061194457005b8061199661195d6119586001948888611dae565b611dbe565b61197261196b848c88611dae565b358a611b42565b5080546001600160a01b031660a09290921b6001600160a01b031916919091179055565b857f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a756119c661196b848c88611dae565b50848060a01b039054166119de611958858a8a611dae565b604080516001600160a01b039390931683526001600160601b0391909116602083015290a20161193b565b6343714afd60e01b5f5260045ffd5b3461136557604036600319011261136557611a31611b22565b602435906001600160a01b03821682036113655760209181611a55611a5a9361212c565b61215a565b506001600160601b0360405191168152f35b3461136557604036600319011261136557611a85611b22565b60ff60243591165f52600360205260405f20805482101561136557604091611aac91611b42565b505481516001600160a01b038216815260a09190911c6020820152f35b346113655760203660031901126113655760ff611ae4611b22565b165f526001602052602060405f2054604051908152f35b3461136557604036600319011261136557611b20611b17611b22565b60243590612057565b005b6004359060ff8216820361136557565b6024359060ff8216820361136557565b8054821015611b57575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b9181601f84011215611365578235916001600160401b038311611365576020808501948460051b01011161136557565b9181601f84011215611365578235916001600160401b038311611365576020838186019501011161136557565b90602080835192838152019201905f5b818110611be55750505090565b82516001600160601b0316845260209384019390920191600101611bd8565b604081019081106001600160401b03821117611c1f57604052565b634e487b7160e01b5f52604160045260245ffd5b606081019081106001600160401b03821117611c1f57604052565b90601f801991011681019081106001600160401b03821117611c1f57604052565b6001600160401b038111611c1f5760051b60200190565b9190602083019260028210156105665752565b602435906001600160601b038216820361136557565b600435906001600160601b038216820361136557565b81601f8201121561136557803590611cdc82611c6f565b92611cea6040519485611c4e565b82845260208085019360061b8301019181831161136557602001925b828410611d14575050505090565b6040848303126113655760405190611d2b82611c04565b84356001600160a01b03811681036113655782526020850135906001600160601b03821682036113655782602092836040950152815201930192611d06565b6024359063ffffffff8216820361136557565b6060906003190112611365576004359060243560ff81168103611365579060443563ffffffff811681036113655790565b9190811015611b575760051b0190565b356001600160601b03811681036113655790565b90611ddc82611c6f565b611de96040519182611c4e565b8281528092611dfa601f1991611c6f565b0190602036910137565b90821015611b57570190565b805115611b575760200190565b8051821015611b575760209160051b010190565b90604051611e3e81611c33565b60406001600160601b0382945463ffffffff8116845263ffffffff8160201c166020850152821c16910152565b9190820391821161156a57565b9081602091031261136557516001600160a01b03811681036113655790565b90816020910312611365575180151581036113655790565b60809060ff60209394606083019560018060a01b031683521683820152606060408201528451809452019201905f5b818110611eeb5750505090565b82516001600160a01b0316845260209384019390920191600101611ede565b906bffffffffffffffffffffffff60401b82549160401b16906bffffffffffffffffffffffff60401b1916179055565b8054600160401b811015611c1f57611f5791600182018155611b42565b61157e578151815460208085015167ffffffff00000000911b1663ffffffff90921667ffffffffffffffff1990911617178155611fa2916001600160601b0390604001511690611f0a565b565b60405190611fb182611c33565b5f6040838281528260208201520152565b90604051611fcf81611c04565b91546001600160a01b038116835260a01c6020830152565b90611ff0611fa4565b50815f52600260205260405f2060ff82165f5260205260405f205490612014611fa4565b92826120205750505090565b909192505f52600260205260ff60405f2091165f5260205260405f205f19820191821161156a576120549161031f91611b42565b90565b60ff165f81815260016020526040902080549192915f19810190811161156a5761208091611b42565b509080156121195763ffffffff6120a58354926001600160601b038460401c16612d9a565b938492438316921682036120be57505061205491611f0a565b835467ffffffff000000001916602083901b67ffffffff000000001617909355612054929091505f52600160205260405f20604051916120fd83611c33565b82525f60208301526001600160601b0384166040830152611f3a565b506001600160601b0391505460401c1690565b6121449060ff165f52600160205260405f2054151590565b1561214b57565b637310cff560e11b5f5260045ffd5b6001600160601b036121a36121aa94936121b2936040519161217d604084611c4e565b600183526020368185013761219183611e10565b6001600160a01b039091169052612733565b9490611e10565b511692611e10565b51151590565b604051638da5cb5b60e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561135a575f91612226575b506001600160a01b0316330361221757565b63ce98c24b60e01b5f5260045ffd5b61223f915060203d602011610863576108548183611c4e565b5f612205565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361227757565b632c01b20560e21b5f5260045ffd5b905f90825f52600260205260405f2060ff82165f5260205260405f205480155f14612316575090825f5160206130d85f395f51905f5260405f94612054968652600260205281862060ff821687526020526123028287208351906122e982611c33565b63ffffffff431682528860208301528885830152611f3a565b60ff825191168152856020820152a26130b2565b909150825f52600260205260405f2060ff83165f5260205260405f20905f19810190811161156a5761234791611b42565b508054926001600160601b038460401c169182156124085760405f945f5160206130d85f395f51905f529263ffffffff61205498814316918291161488146123aa5750805473ffffffffffffffffffffffff000000000000000019169055612302565b815467ffffffff000000001916602082901b67ffffffff00000000161790915561240390858852600260205283882060ff841689526020528388208451916123f183611c33565b82528860208301528885830152611f3a565b612302565b50505050505f90565b91905f90835f52600260205260405f2060ff82165f5260205260405f205480155f146124b25750925f5160206130d85f395f51905f52604061205495835f526002602052815f2060ff82165f52602052612495825f2083519061247382611c33565b63ffffffff431682525f60208301526001600160601b03891685830152611f3a565b60ff8251911681526001600160601b0386166020820152a26130b2565b909150835f52600260205260405f2060ff83165f5260205260405f20905f19810190811161156a576124e391611b42565b50928354916001600160601b038360401c16926001600160601b0385169182851461259e57612054968663ffffffff5f5160206130d85f395f51905f529560409582431692839116145f1461254257505061253d91611f0a565b612495565b835467ffffffff000000001916602083901b67ffffffff00000000161790935561253d92909150865f526002602052845f2060ff85165f52602052845f209085519261258d84611c33565b83525f602084015285830152611f3a565b505050505050505f90565b602081830312611365578051906001600160401b03821161136557019080601f83011215611365578151906125dd82611c6f565b926125eb6040519485611c4e565b82845260208085019360051b820101908282116113655760208101935b82851061261757505050505090565b84516001600160401b03811161136557820184603f820112156113655760208101519061264382611c6f565b916126516040519384611c4e565b8083526020808085019260051b840101019187831161136557604001905b82821061268757505050815260209485019401612608565b815181526020918201910161266f565b90602080835192838152019201905f5b8181106126b45750505090565b82516001600160a01b03168452602093840193909201916001016126a7565b90602082549182815201915f5260205f20905f5b8181106126f45750505090565b82546001600160a01b03168452602090930192600192830192016126e7565b906001600160601b03809116911601906001600160601b03821161156a57565b61273d8251611dd2565b60ff6127498451611dd2565b92165f8181526003602052604090208054919591908161276881611c6f565b916127766040519384611c4e565b81835260208301905f5260205f205f915b838310612ae45750505050865f52600560205260ff60405f205416600281101561056657600103612a4057865f52600660205263ffffffff6127cf8160405f20541643612b01565b60405163de1164bb60e01b81529116906020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561135a575f91612886918391612a21575b506040519061283382611c04565b6001600160a01b03908116825260208083018d81528d8652600491829052604080872090516315d5962560e11b81529451909316918401919091525163ffffffff1660248301529093849283926128ac91565b60a0604485015261289a60a485018e612697565b848103600319016064860152906126d3565b608483019190915203817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561135a575f916129ff575b50925b5f5b87518110156129f2575f5b8481106129475750806001600160601b0361291d60019389611e1d565b51168a5f525f6020526001600160601b0360405f2054161115612940828a611e1d565b52016128f5565b6129518185611e1d565b519061296781612961858a611e1d565b51611e1d565b51612977575b6001915001612900565b6001600160601b03602061298f83612961878c611e1d565b51930151169182810292818404149015171561156a576129d76001600160601b03670de0b6b3a764000060019404166001600160601b036129d0868c611e1d565b5116612713565b6001600160601b036129e9858b611e1d565b9116905261296d565b5095505050509092509190565b612a1b91503d805f833e612a138183611c4e565b8101906125a9565b5f6128f0565b612a3a915060203d602011610863576108548183611c4e565b5f612825565b865f526004602052612a875f6040812060405180938192637870733b60e11b835260406004840152612a75604484018d612697565b838103600319016024850152906126d3565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561135a575f91612aca575b50926128f3565b612ade91503d805f833e612a138183611c4e565b5f612ac3565b600160208192612af385611fc2565b815201920192019190612787565b9190820180921161156a57565b8151156115bf5760ff8251911691825f52600360205260405f2054926020612b368486612b01565b11611a09575f925b808410612b4c575050505050565b90919293945f5b612b5d8688612b01565b811015612bb057835f526003602052612b798160405f20611b42565b50546001600160a01b0390811690612b918888611e1d565b51511614612ba157600101612b53565b637b74340b60e01b5f5260045ffd5b509493929190926001600160601b036020612bcb8386611e1d565b5101511615612d3557815f52600360205260405f20612bea8285611e1d565b51908054600160401b811015611c1f57612c0991600182018155611b42565b61157e5781516020929092015160a01b6001600160a01b0319166001600160a01b03929092169190911790555f828152600460205260409020906001600160a01b03612c558286611e1d565b515116825490600160401b821015611c1f576114ff8260019586612c7b95018155611b42565b827f10565e56cacbf32eca267945f054fec02e59750032d113d3302182ad967f54046020848060a01b03612caf8589611e1d565b515116604051908152a2827f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75838060a01b03612ceb8488611e1d565b5151166001600160601b036020612d02868a611e1d565b510151604080516001600160a01b0394909416845291166001600160601b03166020830152819081010390a20192612b3e565b637257125160e01b5f5260045ffd5b602060ff7f26eecff2b70b0a71104ff4d940ba7162d23a95c248771fc487a7be17a596b3cf921692835f525f82526001600160601b0360405f20911690816001600160601b0319825416179055604051908152a2565b905f811215612dcf57600160ff1b811461156a576001600160601b0380915f03169116036001600160601b03811161156a5790565b906001600160601b03612054921690612713565b63ffffffff808251169216918210612e12576020015163ffffffff168015918215612e21575b505015612e1257565b631391e11b60e21b5f5260045ffd5b1090505f80612e09565b60ff1690815f52600560205260ff60405f205416600281101561056657600103612f5e57604051632981eb7760e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa91821561135a575f92612f19575b5063ffffffff80911691168111612f0a57816040917f28d7358b79f02d21b8b7e17aefc4185a64308aa37406fa5befc05b91932c39c7935f52600660205263ffffffff835f205416915f526006602052825f208163ffffffff1982541617905582519182526020820152a1565b630bd441b960e21b5f5260045ffd5b9091506020813d602011612f56575b81612f3560209383611c4e565b81010312611365575163ffffffff81168103611365579063ffffffff612e9d565b3d9150612f28565b63a3be258360e01b5f5260045ffd5b929190835f52600260205260405f2060ff82165f5260205260405f2054805b6130515760405162461bcd60e51b815260206004820152608160248201527f5374616b6552656769737472792e5f6765745374616b65557064617465496e6460448201527f6578466f724f70657261746f724174426c6f636b4e756d6265723a206e6f207360648201527f74616b652075706461746520666f756e6420666f72206f70657261746f72496460848201527f20616e642071756f72756d4e756d62657220617420626c6f636b206e756d626560a4820152603960f91b60c482015260e490fd5b845f52600260205260405f2060ff83165f5260205260405f205f1982019082821161156a576130858263ffffffff92611b42565b50541663ffffffff851610156130a55750801561156a575f190180612f8c565b63ffffffff169450505050565b6001600160601b039081169116818103915f13801582841316918312161761156a579056fe2f527d527e95d8fe40aec55377743bb779087da3f6d0d08f12e36444da62327da26469706673582212209b7c92c297d991895f28d14976a3315f64ea997caf1f2af8e706d59129f3cd7c64736f6c634300081b0033","sourceMap":"201:1018:129:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1186:2:109;201:1018:129;1186:2:109;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27057:153:108;201:1018:129;;27104:105:108;201:1018:129;;;;:::i;:::-;;;;;;;;27057:20:108;201:1018:129;;;;;;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;27104:105:108;;:::i;:::-;27057:153;;:::i;:::-;201:1018:129;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;1050:26;201:1018;;:::i;:::-;;;:::i;:::-;1050:26;;:::i;:::-;201:1018;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;-1:-1:-1;;;;;201:1018:129;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;27821:20:108;201:1018:129;;;27821:46:108;201:1018:129;-1:-1:-1;201:1018:129;;;27939:11:108;201:1018:129;27821:53:108;201:1018:129;-1:-1:-1;201:1018:129;;;27821:53:108;;:::i;:::-;201:1018:129;;:::i;:::-;27939:11:108;;;:::i;:::-;27968:25;201:1018:129;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;8832:16:108;201:1018:129;;:::i;:::-;;;:::i;:::-;1664:100:108;;;:::i;:::-;1855:12;;;:::i;:::-;8832:16;:::i;:::-;201:1018:129;;;;;;;;;;;;;;;;;1387:46:109;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;27444:83:108;201:1018:129;;;:::i;:::-;27444:83:108;;:::i;:::-;201:1018:129;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;:::i;:::-;;;;;28454:18:108;201:1018:129;;;;;;;;28454:18:108;201:1018:129;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;28454:77:108;;;;:::i;201:1018:129:-;-1:-1:-1;;;201:1018:129;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;:::i;:::-;1552:106:108;;:::i;:::-;7768:27;;201:1018:129;;-1:-1:-1;201:1018:129;24264:18:108;201:1018:129;;;-1:-1:-1;201:1018:129;;24264:44:108;;24161:154;;7768:27;201:1018:129;;7862:15:108;;7928:12;7862:15;;;:::i;:::-;7928:12;;:::i;:::-;201:1018:129;;;;;;30594:18:108;201:1018:129;;;;;;;;;;-1:-1:-1;;201:1018:129;7979:45:108;201:1018:129;;;;;;;;;;;;;30654:24:108;201:1018:129;7979:45:108;8069:15;201:1018:129;;30654:24:108;;;8069:15;:::i;:::-;201:1018:129;;7979:45:108;201:1018:129;;8096:213:108;201:1018:129;;;;;;;;;:::i;:::-;;8203:12:108;201:1018:129;;;8147:152:108;201:1018:129;8147:152:108;;201:1018:129;8147:152:108;201:1018:129;8147:152:108;;201:1018:129;8096:213:108;:::i;201:1018:129:-;;;;-1:-1:-1;201:1018:129;;;;;-1:-1:-1;201:1018:129;;-1:-1:-1;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:53:109;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;-1:-1:-1;;;;;201:1018:129;;;29135:11:108;201:1018:129;29034:39:108;201:1018:129;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;29034:39:108;:::i;201:1018:129:-;;;;;;;-1:-1:-1;;201:1018:129;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;:::i;:::-;1664:100:108;;;:::i;:::-;1855:12;;;:::i;:::-;9109:15;;;;:::i;:::-;201:1018:129;;;;-1:-1:-1;;;9208:25:108;;201:1018:129;;;;;9208:19:108;-1:-1:-1;;;;;201:1018:129;9208:25:108;;;;;;;;;;;201:1018:129;-1:-1:-1;201:1018:129;;9247:17:108;-1:-1:-1;;;;;201:1018:129;;;;;:::i;:::-;-1:-1:-1;;;;;201:1018:129;;;;;;;;;9279:30:108;;201:1018:129;;;;;-1:-1:-1;;;9247:63:108;;201:1018:129;;;;;;9247:63:108;;201:1018:129;;;;;;;;;9247:63:108;;;;;;;;;;;;;;;201:1018:129;9243:491:108;;;201:1018:129;;;9243:491:108;9363:31;;;:::i;:::-;9413:13;;9428:18;;;;;;9547:176;;;;;;;;;;;201:1018:129;;;;;;;;;;;;;;;;9547:176:108;;201:1018:129;9547:176:108;;;:::i;:::-;;;;;;;;;;;9408:126;9243:491;;;201:1018:129;;;9547:176:108;;;;;:::i;:::-;201:1018:129;;9547:176:108;;;;;201:1018:129;;;;;;;;;9448:3:108;201:1018:129;;-1:-1:-1;;;;;9492:18:108;201:1018:129;9492:18:108;;:::i;:::-;;201:1018:129;;9471:48:108;;;;:::i;:::-;201:1018:129;;9413:13:108;;9247:63;;;;201:1018:129;9247:63:108;201:1018:129;9247:63:108;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;201:1018:129;;;;;;;;;9208:25:108;;;;;201:1018:129;9208:25:108;201:1018:129;9208:25:108;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;-1:-1:-1;;;;;201:1018:129;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;:::i;:::-;1552:106:108;;;;;:::i;:::-;4174:13;4189:24;;;;;;201:1018:129;;;4215:3:108;4261:16;4702:49;4261:16;201:1018:129;4261:16:108;;;;:::i;:::-;;201:1018:129;;4311:12:108;;;:::i;:::-;4449:155;;;;:::i;:::-;4702:49;;:::i;:::-;;201:1018:129;4174:13:108;;201:1018:129;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;8567:12:108;201:1018:129;;:::i;:::-;;;:::i;:::-;1664:100:108;;;:::i;:::-;1855:12;;;:::i;:::-;8567;:::i;201:1018:129:-;;;;;;;-1:-1:-1;;201:1018:129;;;;;28738:39:108;201:1018:129;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;28738:39:108;:::i;201:1018:129:-;;;;;;;-1:-1:-1;;201:1018:129;;;;;25083:35:108;201:1018:129;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;25083:14:108;201:1018:129;;;;;;;25083:35:108;:::i;:::-;201:1018:129;;:::i;:::-;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;26787:20:108;201:1018:129;;;26787:46:108;201:1018:129;-1:-1:-1;201:1018:129;;;;;26787:53:108;201:1018:129;-1:-1:-1;201:1018:129;;;26787:53:108;;:::i;201:1018:129:-;;;;;;;-1:-1:-1;;201:1018:129;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2728:69:109;;;;;201:1018:129;2728:69:109;;;;:::i;:::-;201:1018:129;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;;;;;:::i;:::-;;;;3096:77:109;201:1018:129;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;201:1018:129;;;;29474:13:108;29489:24;;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;201:1018:129;;;;;;;;;29663:18:108;201:1018:129;;;29515:3:108;29561:16;;;;;:::i;:::-;;201:1018:129;;29611:12:108;;;:::i;:::-;201:1018:129;;;29663:18:108;201:1018:129;;;;;;;;;;;;;;;;;;;29663:68:108;201:1018:129;;;;;29663:18:108;201:1018:129;;;;;;29871:13:108;29886:10;;;;;;29866:321;29515:3;;;29663:18;201:1018:129;29474:13:108;;29898:3;201:1018:129;;;29663:18:108;201:1018:129;;;;;29979:10:108;;;;:::i;:::-;-1:-1:-1;;201:1018:129;;;;;;;;29946:48:108;;;201:1018:129;29946:48:108;;:::i;:::-;201:1018:129;;;29946:105:108;;29921:252;;29663:18;201:1018:129;29871:13:108;;29921:252;30112:10;;;;;:::i;:::-;-1:-1:-1;;201:1018:129;;;;;;;;;29663:18:108;201:1018:129;;30092:35:108;;;;:::i;:::-;201:1018:129;30149:5:108;;;;;201:1018:129;-1:-1:-1;;;201:1018:129;;;;;;;;;-1:-1:-1;;;201:1018:129;;;;;;;;;-1:-1:-1;;;201:1018:129;;;;;;-1:-1:-1;;;201:1018:129;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;1185:25;201:1018;;:::i;:::-;;;1185:25;;:::i;:::-;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;1186:2:109;201:1018:129;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;:::i;:::-;1552:106:108;;:::i;:::-;6989:27;;201:1018:129;;-1:-1:-1;201:1018:129;24264:18:108;201:1018:129;;;-1:-1:-1;201:1018:129;;24264:44:108;;24161:154;;6989:27;201:1018:129;;7083:15:108;;;7149:12;7083:15;201:1018:129;7083:15:108;;:::i;7149:12::-;201:1018:129;;;;30594:18:108;201:1018:129;;;;;;;;;;;;30654:24:108;201:1018:129;;30654:24:108;;;;;:::i;:::-;;;;201:1018:129;;;;;7257:213:108;201:1018:129;;;;;;;;;:::i;:::-;-1:-1:-1;;;201:1018:129;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;726:62;201:1018;;;;726:62;:::i;201:1018::-;;;;;;;;;;;;;;;1769:65:109;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1552:106:108;;:::i;:::-;5067:28;201:1018:129;;5067:28:108;:::i;:::-;5424:12;;;;:::i;:::-;5681:52;;;;:::i;:::-;5744:26;;;;;;6024:3;201:1018:129;;6002:20:108;;;;;6048:19;;;;:::i;:::-;201:1018:129;;6043:126:108;;6024:3;6338:173;6395:14;;;;:::i;:::-;201:1018:129;6481:15:108;-1:-1:-1;;;;;6481:15:108;;;;:::i;:::-;201:1018:129;;6338:173:108;;:::i;:::-;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;5987:13:108;;201:1018:129;-1:-1:-1;;;201:1018:129;;;;;;;;6043:126:108;6087:19;;;;;:::i;:::-;201:1018:129;;6124:30:108;;;;:::i;:::-;201:1018:129;6043:126:108;;6002:20;;6631:54;6002:20;;;6631:54;:::i;:::-;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1511:43:109;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;;;;;:::i;:::-;;;;2909:86:109;201:1018:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;:::i;:::-;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:100:108;;;;;:::i;:::-;1855:12;;;:::i;:::-;201:1018:129;;10021:18:108;;201:1018:129;;;;;;;;;10118:14:108;201:1018:129;;;;;;;;;;;;;;;10283:31:108;;;;:::i;:::-;10330:13;201:1018:129;10345:18:108;;;;;;-1:-1:-1;;201:1018:129;;-1:-1:-1;;;11150:25:108;;201:1018:129;;-1:-1:-1;201:1018:129;;-1:-1:-1;201:1018:129;;-1:-1:-1;201:1018:129;;11150:19:108;-1:-1:-1;;;;;201:1018:129;11150:25:108;;;;;;;201:1018:129;11150:25:108;;;10325:801;-1:-1:-1;201:1018:129;;11189:17:108;-1:-1:-1;;;;;201:1018:129;;;;;:::i;:::-;-1:-1:-1;;;;;201:1018:129;;;;;;11221:30:108;;201:1018:129;;;;;-1:-1:-1;;;11189:63:108;;201:1018:129;;;;11189:63:108;;201:1018:129;;;;;;;;;11189:63:108;;;;;;;;;;;201:1018:129;11189:63:108;;;10325:801;11185:279;;;201:1018:129;;;11185:279:108;11268:185;;;;;;201:1018:129;;;;;;;;;;;;;;;;11268:185:108;;201:1018:129;11268:185:108;;;:::i;:::-;;;;;;;;;;;11185:279;;;201:1018:129;;;11268:185:108;;;;201:1018:129;11268:185:108;;:::i;:::-;201:1018:129;11268:185:108;;;;201:1018:129;;;;;;;;;11268:185:108;201:1018:129;;;11189:63:108;;;;201:1018:129;11189:63:108;201:1018:129;11189:63:108;;;;;;;:::i;:::-;;;;11150:25;;;;;201:1018:129;11150:25:108;201:1018:129;11150:25:108;;;;;;;:::i;:::-;;;;;10365:3;10409:35;10425:18;;;;:::i;:::-;201:1018:129;10409:35:108;;:::i;:::-;-1:-1:-1;201:1018:129;-1:-1:-1;;;;;201:1018:129;10384:69:108;;;;:::i;:::-;201:1018:129;10545:18:108;10472:115;201:1018:129;10529:35:108;10545:18;;;;:::i;:::-;201:1018:129;10529:35:108;;:::i;:::-;-1:-1:-1;201:1018:129;;;-1:-1:-1;;;;;201:1018:129;;;;;10472:115:108;10679:18;10606:118;201:1018:129;10663:35:108;10679:18;;;;:::i;10663:35::-;-1:-1:-1;201:1018:129;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;10606:118:108;201:1018:129;;-1:-1:-1;;201:1018:129;;;;;;;10871:43:108;;;;:::i;:::-;10849:18;10833:35;10849:18;;;;:::i;:::-;201:1018:129;10833:35:108;;:::i;:::-;201:1018:129;;;;;;;10365:3:108;201:1018:129;;;;;;;;-1:-1:-1;;201:1018:129;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;11022:53:108;10963:112;11022:53;;;:::i;:::-;201:1018:129;;10118:14:108;201:1018:129;;;;;-1:-1:-1;;;;;201:1018:129;10963:40:108;10984:18;;;;:::i;:::-;201:1018:129;10963:40:108;;:::i;:::-;201:1018:129;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;10963:112:108;201:1018:129;;;;;;;10912:1:108;;-1:-1:-1;;201:1018:129;;;;;:::i;:::-;;;;;;;;;;10118:14:108;201:1018:129;;;;;;;;;10330:13:108;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;-1:-1:-1;;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;1041:4:109;201:1018:129;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;-1:-1:-1;;;;;201:1018:129;25917:46:108;201:1018:129;;:::i;:::-;;;;;;-1:-1:-1;;201:1018:129;;;;;;:::i;:::-;;;;;25404:20:108;201:1018:129;;;;;;25404:46:108;201:1018:129;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;:::i;:::-;;;;24851:14:108;201:1018:129;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;:::i;:::-;;;;;25654:20:108;201:1018:129;;;;;;25654:46:108;201:1018:129;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;:::i;:::-;1552:106:108;;;:::i;:::-;2681:34;;;:::i;:::-;2755;;;;:::i;:::-;2804:13;201:1018:129;2819:24:108;;;;;;201:1018:129;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;2845:3:108:-;2891:16;;;;;:::i;:::-;;201:1018:129;;2941:12:108;;;;:::i;:::-;3168:50;;;;:::i;:::-;201:1018:129;;;;;;3366:166:108;;;201:1018:129;3366:166:108;3690:49;3366:166;;;:::i;:::-;3628:31;-1:-1:-1;;;;;3628:31:108;;;;:::i;:::-;201:1018:129;;;;3690:49:108;:::i;:::-;-1:-1:-1;;;;;3673:66:108;;;;:::i;:::-;201:1018:129;;;;;2804:13:108;;201:1018:129;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;:::i;:::-;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;:::i;:::-;1664:100:108;;;;:::i;:::-;1855:12;;;:::i;:::-;11794:13;;201:1018:129;;11850:34:108;;;201:1018:129;;;;;;;;11967:14:108;201:1018:129;;;;;12011:13:108;201:1018:129;12026:13:108;;;;;;201:1018:129;12041:3:108;12168:17;12119:66;12168:17;;201:1018:129;12168:17:108;;;;:::i;:::-;;:::i;:::-;12119:35;12135:18;;;;;:::i;:::-;201:1018:129;12119:35:108;;:::i;:::-;-1:-1:-1;201:1018:129;;-1:-1:-1;;;;;201:1018:129;;;;;;-1:-1:-1;;;;;;201:1018:129;;;;;;;;12119:66:108;12277:18;12204:134;12261:35;12277:18;;;;;:::i;12261:35::-;201:1018:129;;;;;;;;;12307:17:108;;;;;;:::i;:::-;201:1018:129;;;-1:-1:-1;;;;;201:1018:129;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;12204:134:108;201:1018:129;12011:13:108;;201:1018:129;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;1855:12:108;;;24620:50;1855:12;;:::i;:::-;24620:50;:::i;:::-;201:1018:129;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;:::i;:::-;;;;;;;;2547:69:109;201:1018:129;;;;;;;2547:69:109;;;;;201:1018:129;2547:69:109;;;;:::i;:::-;-1:-1:-1;201:1018:129;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;:::i;:::-;;;;28255:18:108;201:1018:129;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;891:49;201:1018;;:::i;:::-;;;891:49;;:::i;:::-;201:1018;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;201:1018:129;;-1:-1:-1;201:1018:129;;;-1:-1:-1;201:1018:129;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;201:1018:129;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;:::o;:::-;;;;-1:-1:-1;201:1018:129;;;;;-1:-1:-1;201:1018:129;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;:::o;:::-;-1:-1:-1;;;;;201:1018:129;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;201:1018:129;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;201:1018:129;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;201:1018:129;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:1018:129;;;;;;;-1:-1:-1;;;201:1018:129;;;;;:::o;:::-;;;-1:-1:-1;;;201:1018:129;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;201:1018:129;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;:::o;26053:517:108:-;;201:1018:129;;:::i;:::-;;;-1:-1:-1;201:1018:129;26220:20:108;201:1018:129;;;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;;;;;:::i;:::-;26335:18:108;;;;26369:26;;;;:::o;26331:233::-;201:1018:129;;;;-1:-1:-1;201:1018:129;26220:20:108;201:1018:129;;;;-1:-1:-1;201:1018:129;26448:46:108;201:1018:129;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;;;;;;;;;;;26448:65:108;;;;:::i;201:1018:129:-;26527:26:108;:::o;15848:1332::-;201:1018:129;;;;;;16048:18:108;201:1018:129;;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;16135:51:108;;;:::i;:::-;16248:15;;;;16244:74;;201:1018:129;16431:46:108;201:1018:129;;;-1:-1:-1;;;;;201:1018:129;;;;16431:46:108;:::i;:::-;16727:12;;;;201:1018:129;;;;16683:57:108;;201:1018:129;;16756:32:108;;;;;:::i;16679:469::-;201:1018:129;;-1:-1:-1;;201:1018:129;;;;;;;;;;;16893:244:108;;16819:60;;-1:-1:-1;201:1018:129;;16048:18:108;201:1018:129;;;;;;;;;;;:::i;:::-;;;;;16948:175:108;;201:1018:129;-1:-1:-1;;;;;201:1018:129;;;16948:175:108;;201:1018:129;16893:244:108;:::i;16244:74::-;201:1018:129;-1:-1:-1;;;;;201:1018:129;;;;;;16279:28:108;:::o;32007:151::-;32101:27;32007:151;201:1018:129;;-1:-1:-1;201:1018:129;24264:18:108;201:1018:129;;;-1:-1:-1;201:1018:129;;24264:44:108;;24161:154;;32101:27;201:1018:129;;;32007:151:108:o;201:1018:129:-;;;;;;;;;23669:420:108;-1:-1:-1;;;;;23980:52:108;24050:10;23669:420;;24062:19;23669:420;201:1018:129;;;;;;;:::i;:::-;23863:1:108;201:1018:129;;;;;;;;23875:23:108;;;:::i;:::-;-1:-1:-1;;;;;201:1018:129;;;;;23980:52:108;:::i;:::-;24050:10;;;:::i;:::-;201:1018:129;;24062:19:108;;:::i;:::-;201:1018:129;;;23669:420:108;:::o;31778:223::-;201:1018:129;;-1:-1:-1;;;31887:45:108;;;201:1018:129;31887:45:108;201:1018:129;31903:19:108;-1:-1:-1;;;;;201:1018:129;31887:45:108;;;;;;;-1:-1:-1;31887:45:108;;;31778:223;-1:-1:-1;;;;;;201:1018:129;31873:10:108;:59;201:1018:129;;31778:223:108:o;201:1018:129:-;;;;-1:-1:-1;201:1018:129;31887:45:108;-1:-1:-1;201:1018:129;31887:45:108;;;;;;;;;;;;;;:::i;:::-;;;;31610:162;31709:19;-1:-1:-1;;;;;201:1018:129;31687:10:108;:42;201:1018:129;;31610:162:108:o;201:1018:129:-;;;;;;;;;13734:1970:108;;201:1018:129;;;;;13943:20:108;201:1018:129;;;;;;;;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;;14011:18:108;;14007:1509;14011:18;;;201:1018:129;;;-1:-1:-1;;;;;;;;;;;201:1018:129;;;15648:49:108;201:1018:129;;;13943:20:108;201:1018:129;;;;;;;;;;;;14106:258:108;201:1018:129;;;;;;;;;:::i;:::-;;14235:12:108;201:1018:129;;;14175:175:108;201:1018:129;14175:175:108;;201:1018:129;14175:175:108;;;;201:1018:129;14106:258:108;:::i;:::-;201:1018:129;;;;;;;;;;;;15576:55:108;15648:49;:::i;14007:1509::-;201:1018:129;;;;;;13943:20:108;201:1018:129;;;;;;;;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;;;;;;;;;;;14519:65:108;;;:::i;:::-;201:1018:129;;;;-1:-1:-1;;;;;201:1018:129;;;;14709:21:108;;;14705:68;;201:1018:129;;15037:12:108;-1:-1:-1;;;;;;;;;;;15037:12:108;201:1018:129;15648:49:108;15037:12;;;201:1018:129;;;;;14998:52:108;201:1018:129;;;;-1:-1:-1;201:1018:129;;-1:-1:-1;;201:1018:129;;;14007:1509:108;;14994:512;201:1018:129;;-1:-1:-1;;201:1018:129;;;;;;;;;;;15209:282:108;;201:1018:129;;;13943:20:108;201:1018:129;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15282:191:108;201:1018:129;15282:191:108;;201:1018:129;15282:191:108;;;;201:1018:129;15209:282:108;:::i;:::-;14007:1509;;14705:68;14750:8;;;;;201:1018:129;14750:8:108;:::o;13734:1970::-;;;201:1018:129;;;;;13943:20:108;201:1018:129;;;;;;;;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;;14011:18:108;;14007:1509;14011:18;;;201:1018:129;;-1:-1:-1;;;;;;;;;;;201:1018:129;15648:49:108;201:1018:129;;;;13943:20:108;201:1018:129;;;;;;;;-1:-1:-1;201:1018:129;;;14106:258:108;201:1018:129;-1:-1:-1;201:1018:129;;;;;;;:::i;:::-;;14235:12:108;201:1018:129;;;;;14175:175:108;;201:1018:129;-1:-1:-1;;;;;201:1018:129;;14175:175:108;;;201:1018:129;14106:258:108;:::i;:::-;201:1018:129;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;15576:55:108;15648:49;:::i;14007:1509::-;201:1018:129;;;;;;13943:20:108;201:1018:129;;;;;;;;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;;;;;;;;;;;14519:65:108;;;:::i;:::-;201:1018:129;;;;;-1:-1:-1;;;;;201:1018:129;;;;;-1:-1:-1;;;;;201:1018:129;;14709:21:108;;;;14705:68;;15648:49;15037:12;;201:1018:129;-1:-1:-1;;;;;;;;;;;15037:12:108;201:1018:129;15037:12:108;;;201:1018:129;;;;;14998:52:108;14994:512;201:1018:129;;;15070:27:108;;;;;:::i;:::-;14007:1509;;14994:512;201:1018:129;;-1:-1:-1;;201:1018:129;;;;;;;;;;;15209:282:108;;15136:55;;-1:-1:-1;201:1018:129;;;13943:20:108;201:1018:129;;;;;;;;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;;;;;;;;:::i;:::-;;;;;15282:191:108;;201:1018:129;15282:191:108;;;201:1018:129;15209:282:108;:::i;14705:68::-;14750:8;;;;;;;201:1018:129;14750:8:108;:::o;201:1018:129:-;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;201:1018:129;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;201:1018:129;;-1:-1:-1;201:1018:129;;-1:-1:-1;201:1018:129;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;:::o;21524:2139:108:-;21730:30;201:1018:129;;21730:30:108;:::i;:::-;201:1018:129;21803:28:108;201:1018:129;;21803:28:108;:::i;:::-;201:1018:129;;-1:-1:-1;201:1018:129;;;24851:14:108;201:1018:129;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;201:1018:129;;-1:-1:-1;201:1018:129;-1:-1:-1;201:1018:129;;;;;;;21994:33:108;;;;201:1018:129;-1:-1:-1;201:1018:129;22042:18:108;201:1018:129;;;;-1:-1:-1;201:1018:129;;;;;;;;;;22042:81:108;201:1018:129;;;-1:-1:-1;201:1018:129;20761:32:108;201:1018:129;;;20746:61:108;201:1018:129;;-1:-1:-1;201:1018:129;;;20746:12:108;:61;:::i;:::-;201:1018:129;;-1:-1:-1;;;20924:25:108;;201:1018:129;;;;;20924:25:108;201:1018:129;20924:19:108;-1:-1:-1;;;;;201:1018:129;20924:25:108;;;;;;;-1:-1:-1;20924:25:108;201:1018:129;20924:25:108;;;;;22038:474;201:1018:129;;;;;;;:::i;:::-;-1:-1:-1;;;;;201:1018:129;;;;;;20912:52:108;;;201:1018:129;;;;;;20924:25:108;201:1018:129;;;;;;;;;;-1:-1:-1;;;20856:213:108;;201:1018:129;;;;;20856:213:108;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;201:1018:129;;;;;;;:::i;:::-;;;;;;;;20856:213:108;201:1018:129;20856:17:108;-1:-1:-1;;;;;201:1018:129;20856:213:108;;;;;;;-1:-1:-1;20856:213:108;;;22038:474;22215:71;22038:474;;-1:-1:-1;22675:9:108;201:1018:129;;22647:26:108;;;;;-1:-1:-1;22865:25:108;;;;;;23546:16;;-1:-1:-1;;;;;23546:16:108;201:1018:129;23546:16:108;;;:::i;:::-;201:1018:129;;;-1:-1:-1;201:1018:129;-1:-1:-1;201:1018:129;;-1:-1:-1;;;;;201:1018:129;-1:-1:-1;201:1018:129;;;-1:-1:-1;23546:55:108;23518:83;;;;:::i;:::-;201:1018:129;;22626:19:108;;22892:12;23017:32;;;;:::i;:::-;;23142:23;:35;:23;;;;;:::i;:::-;;:35;:::i;:::-;201:1018:129;23138:278:108;;22892:12;201:1018:129;22892:12:108;;201:1018:129;22841:22:108;;23138:278;-1:-1:-1;;;;;201:1018:129;23257:35:108;:23;;;;;:::i;:35::-;201:1018:129;23295:32:108;;201:1018:129;;;;;;;;;;;;;;;;;23205:192:108;-1:-1:-1;;;;;1041:4:109;201:1018:129;;;;-1:-1:-1;;;;;23205:192:108;;;;:::i;:::-;201:1018:129;;23205:192:108;:::i;:::-;-1:-1:-1;;;;;23205:192:108;;;;:::i;:::-;201:1018:129;;;;23138:278:108;;22647:26;;;;;;;;;;23622:34;21524:2139;:::o;20856:213::-;;;;;;-1:-1:-1;20856:213:108;;;;;;:::i;:::-;;;;;:::i;:::-;;;;20924:25;;;;201:1018:129;20924:25:108;201:1018:129;20924:25:108;;;;;;;:::i;:::-;;;;22038:474;201:1018:129;-1:-1:-1;201:1018:129;22467:19:108;201:1018:129;;;-1:-1:-1;201:1018:129;;;;;;;;;;;;22426:75:108;;201:1018:129;22467:19:108;22426:75;;201:1018:129;;;;;;;:::i;:::-;;;;-1:-1:-1;;201:1018:129;;;;;;;:::i;:::-;22426:75:108;201:1018:129;22426:10:108;-1:-1:-1;;;;;201:1018:129;22426:75:108;;;;;;;-1:-1:-1;22426:75:108;;;22038:474;22393:108;22038:474;;;22426:75;;;;;;-1:-1:-1;22426:75:108;;;;;;:::i;:::-;;;;201:1018:129;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;17722:1379:108:-;201:1018:129;;17860:26:108;201:1018:129;;;;;;;;;17885:1:108;201:1018:129;18006:14:108;201:1018:129;;;17885:1:108;201:1018:129;;18072:34:108;201:1018:129;18072:34:108;;;;:::i;:::-;:66;201:1018:129;;17885:1:108;18198:897;18218:18;;;;;;17722:1379;;;;;:::o;18238:3::-;18381:13;;;;;17885:1;18425:3;18401:21;;;;:::i;:::-;18396:27;;;;;201:1018:129;17885:1:108;201:1018:129;18006:14:108;201:1018:129;;18477:31:108;201:1018:129;;17885:1:108;201:1018:129;18477:31:108;:::i;:::-;-1:-1:-1;201:1018:129;-1:-1:-1;;;;;201:1018:129;;;;18521:18:108;;;;:::i;:::-;;201:1018:129;;18477:71:108;201:1018:129;;;;18381:13:108;;201:1018:129;;;;17885:1:108;201:1018:129;18786:19:108;17885:1;201:1018:129;18396:27:108;;;;;;;;-1:-1:-1;;;;;201:1018:129;18648:18:108;;;;:::i;:::-;;:29;201:1018:129;;18648:33:108;201:1018:129;;;17885:1:108;201:1018:129;18006:14:108;201:1018:129;;;17885:1:108;201:1018:129;18753:18:108;;;;:::i;:::-;;201:1018:129;;;-1:-1:-1;;;201:1018:129;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;201:1018:129;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;17885:1:108;201:1018:129;;;18786:19:108;201:1018:129;;;;;;-1:-1:-1;;;;;18825:18:108;201:1018:129;18825:18:108;;:::i;:::-;;201:1018:129;;;;;-1:-1:-1;;;201:1018:129;;;;;;;;;;;;;;;;:::i;:::-;;18872:64:108;201:1018:129;;;;;;18908:18:108;;;;:::i;:::-;;201:1018:129;;;;;;;18872:64:108;201:1018:129;18955:129:108;201:1018:129;;;;;19012:18:108;;;;:::i;:::-;;201:1018:129;;-1:-1:-1;;;;;201:1018:129;19041:18:108;;;;:::i;:::-;;:29;201:1018:129;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;18955:129:108;;;201:1018:129;18203:13:108;;;201:1018:129;;;;17885:1:108;201:1018:129;18786:19:108;17885:1;201:1018:129;13326:223:108;201:1018:129;;13486:56:108;13326:223;201:1018:129;;;13421:21:108;201:1018:129;13421:21:108;201:1018:129;;-1:-1:-1;;;;;201:1018:129;13421:21:108;201:1018:129;;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;;;;;13486:56:108;13326:223::o;19424:242::-;;201:1018:129;19518:9:108;;201:1018:129;;;-1:-1:-1;;;201:1018:129;;;;-1:-1:-1;;;;;201:1018:129;;;;;;;;-1:-1:-1;;;;;201:1018:129;;;;19543:38:108;:::o;19514:146::-;201:1018:129;-1:-1:-1;;;;;19619:30:108;201:1018:129;;19619:30:108;;:::i;19755:656::-;201:1018:129;;;;;;;20157:44:108;;;201:1018:129;;20255:33:108;;201:1018:129;;;20255:38:108;;;:105;;;;19755:656;201:1018:129;;;;;19755:656:108:o;201:1018:129:-;;;;-1:-1:-1;201:1018:129;;-1:-1:-1;201:1018:129;20255:105:108;20313:47;;-1:-1:-1;20255:105:108;;;;30963:641;201:1018:129;;;;-1:-1:-1;201:1018:129;31077:18:108;201:1018:129;;;;-1:-1:-1;201:1018:129;;;;;;;;;31113:45:108;31077:81;201:1018:129;;;;-1:-1:-1;;;31253:66:108;;201:1018:129;;;31253:66:108;201:1018:129;31279:17:108;-1:-1:-1;;;;;201:1018:129;31253:66:108;;;;;;;-1:-1:-1;31253:66:108;;;30963:641;201:1018:129;;;;;;;31233:86:108;;201:1018:129;;;;;31539:58:108;201:1018:129;-1:-1:-1;201:1018:129;31403:32:108;201:1018:129;;;;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;31403:32:108;201:1018:129;;;-1:-1:-1;201:1018:129;;;;;;;;;;;;;;;;;;;31539:58:108;30963:641::o;201:1018:129:-;;;;-1:-1:-1;201:1018:129;31253:66:108;-1:-1:-1;201:1018:129;31253:66:108;;;;201:1018:129;31253:66:108;;201:1018:129;31253:66:108;;;;;;201:1018:129;31253:66:108;;;:::i;:::-;;;201:1018:129;;;;;;;;;;;;31253:66:108;201:1018:129;31253:66:108;;;;;-1:-1:-1;31253:66:108;;201:1018:129;;;;-1:-1:-1;201:1018:129;;-1:-1:-1;201:1018:129;12441:879:108;;;;201:1018:129;;;12643:20:108;201:1018:129;;;;;;;;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;;12815:256:108;12840:5;;;201:1018:129;;-1:-1:-1;;;13152:161:108;;201:1018:129;13152:161:108;;;201:1018:129;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:1018:129;;;;13152:161:108;;;12847:3;201:1018:129;;;12643:20:108;201:1018:129;;;;;;;;-1:-1:-1;201:1018:129;;;;-1:-1:-1;201:1018:129;;;;;;;;;;;12887:53:108;;201:1018:129;12887:53:108;;:::i;:::-;201:1018:129;;;;;;-1:-1:-1;12887:106:108;12866:195;;12847:3;201:1018:129;;;;-1:-1:-1;;201:1018:129;;12820:18:108;;12866:195;201:1018:129;;;-1:-1:-1;;;;13026:20:108:o;19195:149::-;-1:-1:-1;;;;;201:1018:129;;;;;;;;;-1:-1:-1;;201:1018:129;;;;;;;;;;;;;19195:149:108;:::o","linkReferences":{},"immutableReferences":{"43852":[{"start":908,"length":32},{"start":10891,"length":32}],"43856":[{"start":4338,"length":32}],"43860":[{"start":1447,"length":32},{"start":1744,"length":32},{"start":4736,"length":32},{"start":10424,"length":32},{"start":11877,"length":32}],"43864":[{"start":1682,"length":32},{"start":3714,"length":32},{"start":4674,"length":32},{"start":8653,"length":32},{"start":8775,"length":32},{"start":10215,"length":32}]}},"methodIdentifiers":{"MAX_WEIGHING_FUNCTION_LENGTH()":"7c172347","WEIGHTING_DIVISOR()":"5e5a6775","addStrategies(uint8,(address,uint96)[])":"c601527d","allocationManager()":"ca8aa7c7","applyDelta(uint96,int256)":"7f429822","avsDirectory()":"6b3aa72e","calculateDelta(uint96,uint96)":"f509551a","delegation()":"df5cf723","deregisterOperator(bytes32,bytes)":"bd29b8cd","getCurrentStake(bytes32,uint8)":"5401ed27","getCurrentTotalStake(uint8)":"d5eccc05","getLatestStakeUpdate(bytes32,uint8)":"f851e198","getStakeAtBlockNumber(bytes32,uint8,uint32)":"fa28c627","getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":"f2be94ae","getStakeHistory(bytes32,uint8)":"2cd95940","getStakeHistoryLength(bytes32,uint8)":"4bd26e09","getStakeUpdateAtIndex(uint8,bytes32,uint256)":"ac6bfb03","getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":"dd9846b9","getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":"c8294c56","getTotalStakeHistoryLength(uint8)":"0491b41c","getTotalStakeIndicesAtBlockNumber(uint32,bytes)":"81c07502","getTotalStakeUpdateAtIndex(uint8,uint256)":"b6904b78","initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])":"75d4173a","initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])":"cc5a7c20","minimumStakeForQuorum(uint8)":"c46778a5","modifyStrategyParams(uint8,uint256[],uint96[])":"20b66298","recordOperatorStakeUpdate(bytes32,uint8,uint96)":"74454c6d","recordTotalStakeUpdate(uint8,int256)":"0390a4d5","registerOperator(address,bytes32,bytes)":"25504777","registryCoordinator()":"6d14a987","removeStrategies(uint8,uint256[])":"5f1f2d77","setMinimumStakeForQuorum(uint8,uint96)":"bc9a40c3","setSlashableStakeLookahead(uint8,uint32)":"e086adb3","slashableStakeLookAheadPerQuorum(uint8)":"9ab4d6ff","stakeTypePerQuorum(uint8)":"697fbd93","strategiesPerQuorum(uint8,uint256)":"9f3ccf65","strategyParams(uint8,uint256)":"08732461","strategyParamsByIndex(uint8,uint256)":"adc804da","strategyParamsLength(uint8)":"3ca5a5f5","updateOperatorsStake(address[],bytes32[],uint8)":"6c3fb4bf","weightOfOperatorForQuorum(uint8,address)":"1f9b74e0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISlashingRegistryCoordinator\",\"name\":\"_registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"},{\"internalType\":\"contract IAVSDirectory\",\"name\":\"_avsDirectory\",\"type\":\"address\"},{\"internalType\":\"contract IAllocationManager\",\"name\":\"_allocationManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BelowMinimumStakeRequirement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyStakeHistory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputDuplicateStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputMultiplierZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBlockNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LookAheadPeriodTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySlashingRegistryCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySlashingRegistryCoordinatorOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuorumAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuorumDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuorumNotSlashable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldLookAheadBlocks\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newLookAheadBlocks\",\"type\":\"uint32\"}],\"name\":\"LookAheadPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"MinimumStakeForQuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"name\":\"OperatorStakeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"QuorumCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IStakeRegistryTypes.StakeType\",\"name\":\"newStakeType\",\"type\":\"uint8\"}],\"name\":\"StakeTypeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToQuorum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"StrategyMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromQuorum\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_WEIGHING_FUNCTION_LENGTH\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEIGHTING_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"addStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationManager\",\"outputs\":[{\"internalType\":\"contract IAllocationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"applyDelta\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"avsDirectory\",\"outputs\":[{\"internalType\":\"contract IAVSDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"prev\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"cur\",\"type\":\"uint96\"}],\"name\":\"calculateDelta\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentTotalStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getLatestStakeUpdate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeAtBlockNumberAndIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeUpdateIndexAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeAtBlockNumberFromIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getTotalStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"getTotalStakeIndicesAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"initializeDelegatedStakeQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"},{\"internalType\":\"uint32\",\"name\":\"lookAheadPeriod\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"initializeSlashableStakeQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"minimumStakeForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"strategyIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"newMultipliers\",\"type\":\"uint96[]\"}],\"name\":\"modifyStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"newStake\",\"type\":\"uint96\"}],\"name\":\"recordOperatorStakeUpdate\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"stakeDelta\",\"type\":\"int256\"}],\"name\":\"recordTotalStakeUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"registerOperator\",\"outputs\":[{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCoordinator\",\"outputs\":[{\"internalType\":\"contract ISlashingRegistryCoordinator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"indicesToRemove\",\"type\":\"uint256[]\"}],\"name\":\"removeStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"setMinimumStakeForQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"_lookAheadBlocks\",\"type\":\"uint32\"}],\"name\":\"setSlashableStakeLookahead\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"slashableStakeLookAheadPerQuorum\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"stakeTypePerQuorum\",\"outputs\":[{\"internalType\":\"enum IStakeRegistryTypes.StakeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategiesPerQuorum\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"strategyParamsByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"strategyParamsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"operatorIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"updateOperatorsStake\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"weightOfOperatorForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BelowMinimumStakeRequirement()\":[{\"details\":\"Thrown when the stake is below the minimum required for a quorum\"}],\"OnlySlashingRegistryCoordinator()\":[{\"details\":\"Thrown when the caller is not the registry coordinator\"}],\"OnlySlashingRegistryCoordinatorOwner()\":[{\"details\":\"Thrown when the caller is not the owner of the registry coordinator\"}]},\"events\":{\"LookAheadPeriodChanged(uint32,uint32)\":{\"params\":{\"newLookAheadBlocks\":\"The new look ahead period.\",\"oldLookAheadBlocks\":\"The previous look ahead period.\"}},\"MinimumStakeForQuorumUpdated(uint8,uint96)\":{\"params\":{\"minimumStake\":\"The new minimum stake requirement.\",\"quorumNumber\":\"The quorum number being updated (indexed).\"}},\"OperatorStakeUpdate(bytes32,uint8,uint96)\":{\"params\":{\"operatorId\":\"The unique identifier of the operator (indexed).\",\"quorumNumber\":\"The quorum number for which the stake was updated.\",\"stake\":\"The new stake amount.\"}},\"QuorumCreated(uint8)\":{\"params\":{\"quorumNumber\":\"The number of the newly created quorum (indexed).\"}},\"StakeTypeSet(uint8)\":{\"params\":{\"newStakeType\":\"The new stake type being set.\"}},\"StrategyAddedToQuorum(uint8,address)\":{\"params\":{\"quorumNumber\":\"The quorum number the strategy was added to (indexed).\",\"strategy\":\"The strategy contract that was added.\"}},\"StrategyMultiplierUpdated(uint8,address,uint256)\":{\"params\":{\"multiplier\":\"The new multiplier value.\",\"quorumNumber\":\"The quorum number for the strategy update (indexed).\",\"strategy\":\"The strategy contract being updated.\"}},\"StrategyRemovedFromQuorum(uint8,address)\":{\"params\":{\"quorumNumber\":\"The quorum number the strategy was removed from (indexed).\",\"strategy\":\"The strategy contract that was removed.\"}}},\"kind\":\"dev\",\"methods\":{\"addStrategies(uint8,(address,uint96)[])\":{\"details\":\"Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \\\"equivalent\\\".\",\"params\":{\"quorumNumber\":\"The quorum number to add strategies to.\",\"strategyParams\":\"The strategy parameters to add.\"}},\"deregisterOperator(bytes32,bytes)\":{\"details\":\"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already deregistered.     5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for.\",\"params\":{\"operatorId\":\"The id of the operator to deregister.\",\"quorumNumbers\":\"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber.\"}},\"getCurrentStake(bytes32,uint8)\":{\"details\":\"Returns 0 if the operator has no stake history.\",\"params\":{\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The current stake amount.\"}},\"getCurrentTotalStake(uint8)\":{\"details\":\"Will revert if `_totalStakeHistory[quorumNumber]` is empty.\",\"params\":{\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The current total stake amount.\"}},\"getLatestStakeUpdate(bytes32,uint8)\":{\"details\":\"Returns a StakeUpdate struct with all entries equal to 0 if the operator has no stake history.\",\"params\":{\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The most recent stake update.\"}},\"getStakeAtBlockNumber(bytes32,uint8,uint32)\":{\"params\":{\"blockNumber\":\"The block number to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake amount at the specified block.\"}},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.\",\"params\":{\"blockNumber\":\"The block number to query.\",\"index\":\"The index to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake amount.\"}},\"getStakeHistory(bytes32,uint8)\":{\"params\":{\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"},\"returns\":{\"_0\":\"The array of stake updates.\"}},\"getStakeHistoryLength(bytes32,uint8)\":{\"params\":{\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The length of the stake history array.\"}},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"index\":\"The index to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake update at the specified index.\"}},\"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)\":{\"params\":{\"blockNumber\":\"The block number to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The index of the stake update.\"}},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.\",\"params\":{\"blockNumber\":\"The block number to query.\",\"index\":\"The index to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The total stake amount.\"}},\"getTotalStakeHistoryLength(uint8)\":{\"params\":{\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The length of the total stake history array.\"}},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"params\":{\"blockNumber\":\"The block number to query.\",\"quorumNumbers\":\"The quorum numbers to query.\"},\"returns\":{\"_0\":\"The array of stake update indices.\"}},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"params\":{\"index\":\"The index to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake update at the specified index.\"}},\"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])\":{\"params\":{\"minimumStake\":\"The minimum stake required for the quorum.\",\"quorumNumber\":\"The number of the quorum to initialize.\",\"strategyParams\":\"The initial strategy parameters for the quorum.\"}},\"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])\":{\"params\":{\"lookAheadPeriod\":\"The look ahead period for checking operator shares.\",\"minimumStake\":\"The minimum stake required for the quorum.\",\"quorumNumber\":\"The number of the quorum to initialize.\",\"strategyParams\":\"The initial strategy parameters for the quorum.\"}},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"params\":{\"newMultipliers\":\"The new multipliers for the strategies.\",\"quorumNumber\":\"The quorum number to change the strategy for.\",\"strategyIndices\":\"The indices of the strategies to change.\"}},\"registerOperator(address,bytes32,bytes)\":{\"details\":\"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already registered.\",\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorId\":\"The id of the operator to register.\",\"quorumNumbers\":\"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber.\"},\"returns\":{\"_0\":\"The operator's current stake for each quorum.\",\"_1\":\"The total stake for each quorum.\"}},\"removeStrategies(uint8,uint256[])\":{\"details\":\"Higher indices should be *first* in the list of `indicesToRemove`, since otherwise     the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove.\",\"params\":{\"indicesToRemove\":\"The indices of strategies to remove.\",\"quorumNumber\":\"The quorum number to remove strategies from.\"}},\"setMinimumStakeForQuorum(uint8,uint96)\":{\"params\":{\"minimumStake\":\"The new minimum stake requirement.\",\"quorumNumber\":\"The quorum number to set the minimum stake for.\"}},\"setSlashableStakeLookahead(uint8,uint32)\":{\"params\":{\"lookAheadBlocks\":\"The number of blocks to look ahead when checking shares.\",\"quorumNumber\":\"The quorum number to set the look ahead period for.\"}},\"strategyParamsByIndex(uint8,uint256)\":{\"params\":{\"index\":\"The index of the strategy to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The strategy parameters.\"}},\"strategyParamsLength(uint8)\":{\"params\":{\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The number of strategies for the quorum.\"}},\"updateOperatorsStake(address[],bytes32[],uint8)\":{\"params\":{\"operatorIds\":\"The ids of the operators to update.\",\"operators\":\"The addresses of the operators to update.\",\"quorumNumber\":\"The quorum number to update the stake for.\"},\"returns\":{\"_0\":\"A list of bools, true if the corresponding operator should be deregistered since they no longer meet the minimum stake requirement.\"}},\"weightOfOperatorForQuorum(uint8,address)\":{\"details\":\"Reverts if `quorumNumber` is greater than or equal to `quorumCount`.\",\"params\":{\"operator\":\"The operator address to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The total weight of the operator.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"EmptyStakeHistory()\":[{\"notice\":\"Thrown when attempting to access stake history that doesn't exist for a quorum.\"}],\"InputArrayLengthMismatch()\":[{\"notice\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InputArrayLengthZero()\":[{\"notice\":\"Thrown when an input array has zero length.\"}],\"InputDuplicateStrategy()\":[{\"notice\":\"Thrown when a duplicate strategy is provided in an input array.\"}],\"InputMultiplierZero()\":[{\"notice\":\"Thrown when a multiplier input is zero.\"}],\"InvalidBlockNumber()\":[{\"notice\":\"Thrown when the provided block number is invalid for the stake update.\"}],\"LookAheadPeriodTooLong()\":[{\"notice\":\"Thrown when the look ahead period is too long.\"}],\"QuorumAlreadyExists()\":[{\"notice\":\"Thrown when attempting to create a quorum that already exists.\"}],\"QuorumDoesNotExist()\":[{\"notice\":\"Thrown when attempting to interact with a quorum that does not exist.\"}],\"QuorumNotSlashable()\":[{\"notice\":\"Thrown when the quorum is not slashable and the caller attempts to set the look ahead period.\"}]},\"events\":{\"LookAheadPeriodChanged(uint32,uint32)\":{\"notice\":\"Emitted when the look ahead period for checking operator shares is updated.\"},\"MinimumStakeForQuorumUpdated(uint8,uint96)\":{\"notice\":\"Emitted when the minimum stake for a quorum is updated.\"},\"OperatorStakeUpdate(bytes32,uint8,uint96)\":{\"notice\":\"Emitted when an operator's stake is updated.\"},\"QuorumCreated(uint8)\":{\"notice\":\"Emitted when a new quorum is created.\"},\"StakeTypeSet(uint8)\":{\"notice\":\"Emitted when the stake type is updated.\"},\"StrategyAddedToQuorum(uint8,address)\":{\"notice\":\"Emitted when a strategy is added to a quorum.\"},\"StrategyMultiplierUpdated(uint8,address,uint256)\":{\"notice\":\"Emitted when a strategy's multiplier is updated.\"},\"StrategyRemovedFromQuorum(uint8,address)\":{\"notice\":\"Emitted when a strategy is removed from a quorum.\"}},\"kind\":\"user\",\"methods\":{\"MAX_WEIGHING_FUNCTION_LENGTH()\":{\"notice\":\"Maximum length of dynamic arrays in the `strategyParams` mapping.\"},\"WEIGHTING_DIVISOR()\":{\"notice\":\"Constant used as a divisor in calculating weights.\"},\"addStrategies(uint8,(address,uint96)[])\":{\"notice\":\"Adds new strategies and their associated multipliers to the specified quorum.\"},\"allocationManager()\":{\"notice\":\"the address of the AllocationManager for EigenLayer.\"},\"avsDirectory()\":{\"notice\":\"The address of the Delegation contract for EigenLayer.\"},\"delegation()\":{\"notice\":\"The address of the Delegation contract for EigenLayer.\"},\"deregisterOperator(bytes32,bytes)\":{\"notice\":\"Deregisters the operator with `operatorId` for the specified `quorumNumbers`.\"},\"getCurrentStake(bytes32,uint8)\":{\"notice\":\"Returns the current stake for an operator in a quorum.\"},\"getCurrentTotalStake(uint8)\":{\"notice\":\"Returns the current total stake for a quorum.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake update for an operator in a quorum.\"},\"getStakeAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the stake of an operator at a specific block number.\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"notice\":\"Returns the stake at the specified block number and index for an operator in a quorum.\"},\"getStakeHistory(bytes32,uint8)\":{\"notice\":\"Returns the entire stake history array for an operator in a quorum.\"},\"getStakeHistoryLength(bytes32,uint8)\":{\"notice\":\"Returns the length of the stake history for an operator in a quorum.\"},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"notice\":\"Returns the stake update at the specified index for an operator in a quorum.\"},\"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the index of the operator's stake update at the specified block number.\"},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"notice\":\"Returns the total stake at the specified block number and index for a quorum.\"},\"getTotalStakeHistoryLength(uint8)\":{\"notice\":\"Returns the length of the total stake history for a quorum.\"},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"notice\":\"Returns the indices of total stakes for the provided quorums at the given block number.\"},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"notice\":\"Returns the stake update at the specified index in the total stake history.\"},\"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])\":{\"notice\":\"Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake.\"},\"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])\":{\"notice\":\"Initialize a new quorum and push its first history update.\"},\"minimumStakeForQuorum(uint8)\":{\"notice\":\"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic.\"},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"notice\":\"Modifies the weights of strategies that are already in the mapping strategyParams.\"},\"registerOperator(address,bytes32,bytes)\":{\"notice\":\"Registers the `operator` with `operatorId` for the specified `quorumNumbers`.\"},\"registryCoordinator()\":{\"notice\":\"the coordinator contract that this registry is associated with\"},\"removeStrategies(uint8,uint256[])\":{\"notice\":\"Removes strategies and their associated weights from the specified quorum.\"},\"setMinimumStakeForQuorum(uint8,uint96)\":{\"notice\":\"Sets the minimum stake requirement for a quorum `quorumNumber`.\"},\"setSlashableStakeLookahead(uint8,uint32)\":{\"notice\":\"Sets the look ahead time to `lookAheadBlocks` for checking operator shares for a specific quorum.\"},\"slashableStakeLookAheadPerQuorum(uint8)\":{\"notice\":\"mapping from quorum number to the slashable stake look ahead time (in blocks)\"},\"stakeTypePerQuorum(uint8)\":{\"notice\":\"mapping from quorum number to the IStakeRegistryTypes.StakeType for that specific quorum\"},\"strategiesPerQuorum(uint8,uint256)\":{\"notice\":\"mapping from quorum number to the list of strategies considered for that specific quorum\"},\"strategyParams(uint8,uint256)\":{\"notice\":\"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum\"},\"strategyParamsByIndex(uint8,uint256)\":{\"notice\":\"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum.\"},\"strategyParamsLength(uint8)\":{\"notice\":\"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`.\"},\"updateOperatorsStake(address[],bytes32[],uint8)\":{\"notice\":\"Called by the registry coordinator to update the stake of a list of operators for a specific quorum.\"},\"weightOfOperatorForQuorum(uint8,address)\":{\"notice\":\"Computes the total weight of the operator in the specified quorum.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/test/harnesses/StakeRegistryHarness.sol\":\"StakeRegistryHarness\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/\"],\"viaIR\":true},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/AllocationManager.sol\":{\"keccak256\":\"0x7fe24f9c4ed94a8b9c1cab4af29413653768964ce50c2da1e66b922ff2b71c7d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7c11234d9b10c0f00165c070414c6e1b6a5de160dc9b1b9fd46a4edbfd2e3d76\",\"dweb:/ipfs/QmbAUxaFeNNDSocVkoy7LEMR2X8xQHGPjG3nRzTyzpzdYk\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/AllocationManagerStorage.sol\":{\"keccak256\":\"0x38dfdb72886e23a44785425a5c4179cbfac6a5b4162f8f26fe46bb208176fe5b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17604236aabfda3cf5e30efc787ee9b83ba7d0f83240130798ef453b963b89cf\",\"dweb:/ipfs/QmWGn6M7NSd8ihvGTSbCVczSeFHe9xjSad7NBNaKSwLb9L\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\":{\"keccak256\":\"0xa5cb7832792c57dcd98d16548f1da3bd3ebd2ee0315cd5b1e7a6f68a24f79fb6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7852da45ddf2a9625a839717dc293eacb3a8a5d9c77ea78c5e3ed77c6062b18f\",\"dweb:/ipfs/QmbZfifW7ZsguFmYjvEoR6BiDL3stRzpGUXGbXqCgaAeuH\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc\",\"dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x9f95d00bc0a22ec850e5cc6bcda9db2485f87b627232f9360571dbe87a0ee035\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://96d1e4f044b7337f83f970202b5ce5154970bb8745646b5c0e51cab58713c811\",\"dweb:/ipfs/QmX7mkfacMVKKXJB5GixQqtfYJ3jCkQzTRu4eUy4RjBNeM\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xa38c562664300642a88b365f4a69fba58e7f3caa6bdb03ba07a03d09e4688f7f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cc7ad91a20edab3859cf06d12dd3bc69e9404a3550875e7ce7586792adfa9655\",\"dweb:/ipfs/QmW2mTG2eSLqSaexWkhYNNpjzXqHP1r8U8jUjG8LsAnEMP\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xc3e222ffc9e17483032d043f3b7dfac1a0781cf94430a329809a52e47fd59f34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7cc43843b58846c37036088cfd872ed6357524d35cf823037bbb3e03e9394348\",\"dweb:/ipfs/QmUDyrccjBdi2zfwrGgsW1x3jGunGaZ8PYxwX1FpaEgBXq\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xce7dc91d7522cd3e44a28bb98a66f2e73de55c56b4fc422a50fb1d8d28e8dd5e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0debec76a3d52251eab59d0aa264a698c9bcb20414b2b1ea6f98817c041f434d\",\"dweb:/ipfs/QmYGg8voRKXiuY7ZVwfoXST9rkHSDkdr8xZnzgSSsF3uoz\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f\",\"dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xcb910d9afbaf14c2ec32828e28ca72f1dba35c7371f487505d2a73da2c576009\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d801fbeeb84ce1dde84dcfa85d519b726f8ba928c76dc4b24d9317299a7a1ab0\",\"dweb:/ipfs/QmfAVYxxJry6GTML7jtQfoR4H1ZFpF6XYSpFZHZ8QTC61B\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IShareManager.sol\":{\"keccak256\":\"0xa331e73e99af7eb38befbd7e1d1024d7d9b2c6cc2534313672d1f937ee9fdaaa\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://77fada64905d51779609546ba527834aff7d4478ff26df6f33abfe4a57ba028c\",\"dweb:/ipfs/QmerLh58EpALrjvbgdVAbXJz9uCHukBKyS1MeVsEPo1ytS\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtilsMixin.sol\":{\"keccak256\":\"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10\",\"dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xbf084857bc21f2e3752072df667a3025ba73431eaa56852562b0dc3594361d75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8a5eb881299b8949063e8d7eecdadbae92f3c84a129aa58b2e5f995714fb3b23\",\"dweb:/ipfs/QmRsG6BgSS3UcXMDjjucKaNvzGjHa85ph22atnz6hzW9xo\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0x9989483e1c623b3d62b3fe28ca6255577552d85f8ab916fd35559bbad6898a2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://97084919a9b4c2e30cd1c529c7c21b6274d3ebf2e52e29e612709f6ea8a8ee8f\",\"dweb:/ipfs/QmbdvS23Qe3RLuzPmFndHzmRdnRWtPYiwEBLKwWdUeYkiF\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x6f1fec603853d6b8b610e97c5a7a8dc411ddcad49df03ddd0e2d77881d36788b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f51cded4081cf69cd658c87194388e567485cc901e16a53ef7ae9f947365fb7f\",\"dweb:/ipfs/QmQ2weAkzee5goE7BwdNsURJ7qhJeZ9wSocT2gTwMB1AeX\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e\",\"dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6\",\"dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071\",\"dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Snapshots.sol\":{\"keccak256\":\"0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b\",\"dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/mixins/SemVerMixin.sol\":{\"keccak256\":\"0x292852b1db8a23f1e168f5f2eaadc7ac5e0f58a0762a1032f7bd9715d4b7ba6c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://507c8111cd58911cd9f416383e143dd1c64eff0b8cf17370ab979079f0c4dd8f\",\"dweb:/ipfs/QmZspYZ7YoSuYeTWu3vMMqcpHreZJY8N5jBeHrCZya1gZq\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd\",\"dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/ShortStringsUpgradeable.sol\":{\"keccak256\":\"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de\",\"dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"lib/eigenlayer-middleware/src/StakeRegistry.sol\":{\"keccak256\":\"0xa660e56abac7173e35e621b03d64bb8ccb4e8a35905dfafcc7b7550e9ef5f5d0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://714322a0da307854175d034cbaa3e268fa7413804e490107eddda4388714cfe4\",\"dweb:/ipfs/QmSDswX2QcibKkJSQo3hnaU7ycwwQ1XCDKvSRdr6ecp7JV\"]},\"lib/eigenlayer-middleware/src/StakeRegistryStorage.sol\":{\"keccak256\":\"0x335ea4c9f7ad4cbb1fe1fc990319478a74de1083ee6e0768ed66112d2b31b116\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b2120657ad6aeeffeaa3681aeca6dad717ec600034b2d53d9c673dacebe9ea\",\"dweb:/ipfs/QmeHABPTqijRthq1EvhngD5WUc5YzGBFWLLb6vmd8oBNSK\"]},\"lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol\":{\"keccak256\":\"0xed2bff5f81fbc80332ee43b9b9c832d729431dde3d77d4d84681b9158dde9c37\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e1308f017d099e287d768e7fcc77b087f8d5b227ad34b5267369c956d0e98cd4\",\"dweb:/ipfs/QmcvE3Qj6LGtMxicbebREYjLKrVBxnm9gXG5JUL6FQ8Z1S\"]},\"lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol\":{\"keccak256\":\"0xe7e83446da6c25e60151015ba18816e179005e0d182ed05111d2b0c716837398\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4466d6dc66caca35e7c96e51a70587a1c7c7a5062243bbb0fa341ee74b5706ce\",\"dweb:/ipfs/QmVm16TRhAqPmYwMQrjTzfwoJCGe1bguDTm5BqTrkiXwkB\"]},\"lib/eigenlayer-middleware/src/interfaces/ISlashingRegistryCoordinator.sol\":{\"keccak256\":\"0x3f590182117120888660c71b0a50f71f941829913b17c93e51be96cb497b93c8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5ef8e838f7f3a599b74d0ea8c3258564ae509b19dbeb405f4cde7641080985a1\",\"dweb:/ipfs/Qmao5Q6hD4dk2MENfyxJeetFU3iFQsYBPbaKM47w5bVBvb\"]},\"lib/eigenlayer-middleware/src/interfaces/ISocketRegistry.sol\":{\"keccak256\":\"0x5d4497f995bdc0f56d242b218065a9d0b9ab7f8b47421e66cb3ae37e25674d8f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://47cfc86fd6147928011e8ab8ca3689b3cee0b155a4b01700ac7e8146012d86da\",\"dweb:/ipfs/QmcqDwW5WHKWi5arVERE1j7RikN7GuQtmfX7fpSyRu5zBe\"]},\"lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0x4b121355ae5a3253d2f9a873cd2b27125e5094ba1d899fe21514bc8ebb119966\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c8125d02b6556d0c2a355af0eaf44eb0e00a6a7fcf5bf542789e43f3c7552e78\",\"dweb:/ipfs/Qmeu7XWjgZZH9hmsPJXDSyBuY3ByUmvdwAQpwe2VugQnfK\"]},\"lib/eigenlayer-middleware/src/libraries/BN254.sol\":{\"keccak256\":\"0x941414cfbfb510409428e51e197e5e28be3b45fb81440e183afa0caa1f077ec7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa245501f99b6f77564fe7e38f8130a0a6d589424bf413b2d1e46da8b5214982\",\"dweb:/ipfs/QmXCJx2GktmrbpYLnsAZ4KrResizL3JuhDjA3MNgito8AQ\"]},\"lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol\":{\"keccak256\":\"0xfac31fd5a3ad9b6c1a659ed320e2171b7bec8a34cb602fb39576135574a4d6ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bc75c2237e1e9c4e0c55069167207345bb28066c51174e1a5febb7beed888c\",\"dweb:/ipfs/QmWNUk7SYnAab7Eu6f7DBR2Cy2cAZPUbp5ZEATSsjjjwqP\"]},\"lib/eigenlayer-middleware/test/harnesses/StakeRegistryHarness.sol\":{\"keccak256\":\"0xc4ffce41d4597a4de8938cdc9d7a5bf0f65923a4dd838dd9a514afdd45388b21\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://367b422b9ec51c68359c55c987adc683cedb667317fb63d47ac8489e80e6df0f\",\"dweb:/ipfs/QmbmnSCTfEVaxConPxGPKWY9PYk9cDdeWnone6Mq7fE8Dg\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract ISlashingRegistryCoordinator","name":"_registryCoordinator","type":"address"},{"internalType":"contract IDelegationManager","name":"_delegationManager","type":"address"},{"internalType":"contract IAVSDirectory","name":"_avsDirectory","type":"address"},{"internalType":"contract IAllocationManager","name":"_allocationManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"BelowMinimumStakeRequirement"},{"inputs":[],"type":"error","name":"EmptyStakeHistory"},{"inputs":[],"type":"error","name":"InputArrayLengthMismatch"},{"inputs":[],"type":"error","name":"InputArrayLengthZero"},{"inputs":[],"type":"error","name":"InputDuplicateStrategy"},{"inputs":[],"type":"error","name":"InputMultiplierZero"},{"inputs":[],"type":"error","name":"InvalidBlockNumber"},{"inputs":[],"type":"error","name":"LookAheadPeriodTooLong"},{"inputs":[],"type":"error","name":"OnlySlashingRegistryCoordinator"},{"inputs":[],"type":"error","name":"OnlySlashingRegistryCoordinatorOwner"},{"inputs":[],"type":"error","name":"QuorumAlreadyExists"},{"inputs":[],"type":"error","name":"QuorumDoesNotExist"},{"inputs":[],"type":"error","name":"QuorumNotSlashable"},{"inputs":[{"internalType":"uint32","name":"oldLookAheadBlocks","type":"uint32","indexed":false},{"internalType":"uint32","name":"newLookAheadBlocks","type":"uint32","indexed":false}],"type":"event","name":"LookAheadPeriodChanged","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"uint96","name":"minimumStake","type":"uint96","indexed":false}],"type":"event","name":"MinimumStakeForQuorumUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32","indexed":true},{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":false},{"internalType":"uint96","name":"stake","type":"uint96","indexed":false}],"type":"event","name":"OperatorStakeUpdate","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true}],"type":"event","name":"QuorumCreated","anonymous":false},{"inputs":[{"internalType":"enum IStakeRegistryTypes.StakeType","name":"newStakeType","type":"uint8","indexed":false}],"type":"event","name":"StakeTypeSet","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyAddedToQuorum","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"multiplier","type":"uint256","indexed":false}],"type":"event","name":"StrategyMultiplierUpdated","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyRemovedFromQuorum","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_WEIGHING_FUNCTION_LENGTH","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"WEIGHTING_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"struct IStakeRegistryTypes.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"addStrategies"},{"inputs":[],"stateMutability":"view","type":"function","name":"allocationManager","outputs":[{"internalType":"contract IAllocationManager","name":"","type":"address"}]},{"inputs":[{"internalType":"uint96","name":"value","type":"uint96"},{"internalType":"int256","name":"delta","type":"int256"}],"stateMutability":"pure","type":"function","name":"applyDelta","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"avsDirectory","outputs":[{"internalType":"contract IAVSDirectory","name":"","type":"address"}]},{"inputs":[{"internalType":"uint96","name":"prev","type":"uint96"},{"internalType":"uint96","name":"cur","type":"uint96"}],"stateMutability":"pure","type":"function","name":"calculateDelta","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"delegation","outputs":[{"internalType":"contract IDelegationManager","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOperator"},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getCurrentStake","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getCurrentTotalStake","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getLatestStakeUpdate","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getStakeAtBlockNumber","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStakeAtBlockNumberAndIndex","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getStakeHistory","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate[]","name":"","type":"tuple[]","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getStakeHistoryLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStakeUpdateAtIndex","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getStakeUpdateIndexAtBlockNumber","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTotalStakeAtBlockNumberFromIndex","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getTotalStakeHistoryLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"view","type":"function","name":"getTotalStakeIndicesAtBlockNumber","outputs":[{"internalType":"uint32[]","name":"","type":"uint32[]"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTotalStakeUpdateAtIndex","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"},{"internalType":"struct IStakeRegistryTypes.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"initializeDelegatedStakeQuorum"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"},{"internalType":"uint32","name":"lookAheadPeriod","type":"uint32"},{"internalType":"struct IStakeRegistryTypes.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"initializeSlashableStakeQuorum"},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function","name":"minimumStakeForQuorum","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256[]","name":"strategyIndices","type":"uint256[]"},{"internalType":"uint96[]","name":"newMultipliers","type":"uint96[]"}],"stateMutability":"nonpayable","type":"function","name":"modifyStrategyParams"},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"newStake","type":"uint96"}],"stateMutability":"nonpayable","type":"function","name":"recordOperatorStakeUpdate","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"int256","name":"stakeDelta","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"recordTotalStakeUpdate"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"registerOperator","outputs":[{"internalType":"uint96[]","name":"","type":"uint96[]"},{"internalType":"uint96[]","name":"","type":"uint96[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"registryCoordinator","outputs":[{"internalType":"contract ISlashingRegistryCoordinator","name":"","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256[]","name":"indicesToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"removeStrategies"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"}],"stateMutability":"nonpayable","type":"function","name":"setMinimumStakeForQuorum"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"_lookAheadBlocks","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"setSlashableStakeLookahead"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"slashableStakeLookAheadPerQuorum","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"stakeTypePerQuorum","outputs":[{"internalType":"enum IStakeRegistryTypes.StakeType","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategiesPerQuorum","outputs":[{"internalType":"contract IStrategy","name":"","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategyParams","outputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategyParamsByIndex","outputs":[{"internalType":"struct IStakeRegistryTypes.StrategyParams","name":"","type":"tuple","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"strategyParamsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address[]","name":"operators","type":"address[]"},{"internalType":"bytes32[]","name":"operatorIds","type":"bytes32[]"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorsStake","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"weightOfOperatorForQuorum","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]}],"devdoc":{"kind":"dev","methods":{"addStrategies(uint8,(address,uint96)[])":{"details":"Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \"equivalent\".","params":{"quorumNumber":"The quorum number to add strategies to.","strategyParams":"The strategy parameters to add."}},"deregisterOperator(bytes32,bytes)":{"details":"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already deregistered.     5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for.","params":{"operatorId":"The id of the operator to deregister.","quorumNumbers":"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber."}},"getCurrentStake(bytes32,uint8)":{"details":"Returns 0 if the operator has no stake history.","params":{"operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The current stake amount."}},"getCurrentTotalStake(uint8)":{"details":"Will revert if `_totalStakeHistory[quorumNumber]` is empty.","params":{"quorumNumber":"The quorum number to query."},"returns":{"_0":"The current total stake amount."}},"getLatestStakeUpdate(bytes32,uint8)":{"details":"Returns a StakeUpdate struct with all entries equal to 0 if the operator has no stake history.","params":{"operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The most recent stake update."}},"getStakeAtBlockNumber(bytes32,uint8,uint32)":{"params":{"blockNumber":"The block number to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake amount at the specified block."}},"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.","params":{"blockNumber":"The block number to query.","index":"The index to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake amount."}},"getStakeHistory(bytes32,uint8)":{"params":{"operatorId":"The id of the operator of interest.","quorumNumber":"The quorum number to get the stake for."},"returns":{"_0":"The array of stake updates."}},"getStakeHistoryLength(bytes32,uint8)":{"params":{"operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The length of the stake history array."}},"getStakeUpdateAtIndex(uint8,bytes32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.","params":{"index":"The index to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake update at the specified index."}},"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":{"params":{"blockNumber":"The block number to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The index of the stake update."}},"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.","params":{"blockNumber":"The block number to query.","index":"The index to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The total stake amount."}},"getTotalStakeHistoryLength(uint8)":{"params":{"quorumNumber":"The quorum number to query."},"returns":{"_0":"The length of the total stake history array."}},"getTotalStakeIndicesAtBlockNumber(uint32,bytes)":{"params":{"blockNumber":"The block number to query.","quorumNumbers":"The quorum numbers to query."},"returns":{"_0":"The array of stake update indices."}},"getTotalStakeUpdateAtIndex(uint8,uint256)":{"params":{"index":"The index to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake update at the specified index."}},"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])":{"params":{"minimumStake":"The minimum stake required for the quorum.","quorumNumber":"The number of the quorum to initialize.","strategyParams":"The initial strategy parameters for the quorum."}},"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])":{"params":{"lookAheadPeriod":"The look ahead period for checking operator shares.","minimumStake":"The minimum stake required for the quorum.","quorumNumber":"The number of the quorum to initialize.","strategyParams":"The initial strategy parameters for the quorum."}},"modifyStrategyParams(uint8,uint256[],uint96[])":{"params":{"newMultipliers":"The new multipliers for the strategies.","quorumNumber":"The quorum number to change the strategy for.","strategyIndices":"The indices of the strategies to change."}},"registerOperator(address,bytes32,bytes)":{"details":"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already registered.","params":{"operator":"The address of the operator to register.","operatorId":"The id of the operator to register.","quorumNumbers":"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber."},"returns":{"_0":"The operator's current stake for each quorum.","_1":"The total stake for each quorum."}},"removeStrategies(uint8,uint256[])":{"details":"Higher indices should be *first* in the list of `indicesToRemove`, since otherwise     the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove.","params":{"indicesToRemove":"The indices of strategies to remove.","quorumNumber":"The quorum number to remove strategies from."}},"setMinimumStakeForQuorum(uint8,uint96)":{"params":{"minimumStake":"The new minimum stake requirement.","quorumNumber":"The quorum number to set the minimum stake for."}},"setSlashableStakeLookahead(uint8,uint32)":{"params":{"lookAheadBlocks":"The number of blocks to look ahead when checking shares.","quorumNumber":"The quorum number to set the look ahead period for."}},"strategyParamsByIndex(uint8,uint256)":{"params":{"index":"The index of the strategy to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The strategy parameters."}},"strategyParamsLength(uint8)":{"params":{"quorumNumber":"The quorum number to query."},"returns":{"_0":"The number of strategies for the quorum."}},"updateOperatorsStake(address[],bytes32[],uint8)":{"params":{"operatorIds":"The ids of the operators to update.","operators":"The addresses of the operators to update.","quorumNumber":"The quorum number to update the stake for."},"returns":{"_0":"A list of bools, true if the corresponding operator should be deregistered since they no longer meet the minimum stake requirement."}},"weightOfOperatorForQuorum(uint8,address)":{"details":"Reverts if `quorumNumber` is greater than or equal to `quorumCount`.","params":{"operator":"The operator address to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The total weight of the operator."}}},"version":1},"userdoc":{"kind":"user","methods":{"MAX_WEIGHING_FUNCTION_LENGTH()":{"notice":"Maximum length of dynamic arrays in the `strategyParams` mapping."},"WEIGHTING_DIVISOR()":{"notice":"Constant used as a divisor in calculating weights."},"addStrategies(uint8,(address,uint96)[])":{"notice":"Adds new strategies and their associated multipliers to the specified quorum."},"allocationManager()":{"notice":"the address of the AllocationManager for EigenLayer."},"avsDirectory()":{"notice":"The address of the Delegation contract for EigenLayer."},"delegation()":{"notice":"The address of the Delegation contract for EigenLayer."},"deregisterOperator(bytes32,bytes)":{"notice":"Deregisters the operator with `operatorId` for the specified `quorumNumbers`."},"getCurrentStake(bytes32,uint8)":{"notice":"Returns the current stake for an operator in a quorum."},"getCurrentTotalStake(uint8)":{"notice":"Returns the current total stake for a quorum."},"getLatestStakeUpdate(bytes32,uint8)":{"notice":"Returns the most recent stake update for an operator in a quorum."},"getStakeAtBlockNumber(bytes32,uint8,uint32)":{"notice":"Returns the stake of an operator at a specific block number."},"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":{"notice":"Returns the stake at the specified block number and index for an operator in a quorum."},"getStakeHistory(bytes32,uint8)":{"notice":"Returns the entire stake history array for an operator in a quorum."},"getStakeHistoryLength(bytes32,uint8)":{"notice":"Returns the length of the stake history for an operator in a quorum."},"getStakeUpdateAtIndex(uint8,bytes32,uint256)":{"notice":"Returns the stake update at the specified index for an operator in a quorum."},"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":{"notice":"Returns the index of the operator's stake update at the specified block number."},"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":{"notice":"Returns the total stake at the specified block number and index for a quorum."},"getTotalStakeHistoryLength(uint8)":{"notice":"Returns the length of the total stake history for a quorum."},"getTotalStakeIndicesAtBlockNumber(uint32,bytes)":{"notice":"Returns the indices of total stakes for the provided quorums at the given block number."},"getTotalStakeUpdateAtIndex(uint8,uint256)":{"notice":"Returns the stake update at the specified index in the total stake history."},"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])":{"notice":"Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake."},"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])":{"notice":"Initialize a new quorum and push its first history update."},"minimumStakeForQuorum(uint8)":{"notice":"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic."},"modifyStrategyParams(uint8,uint256[],uint96[])":{"notice":"Modifies the weights of strategies that are already in the mapping strategyParams."},"registerOperator(address,bytes32,bytes)":{"notice":"Registers the `operator` with `operatorId` for the specified `quorumNumbers`."},"registryCoordinator()":{"notice":"the coordinator contract that this registry is associated with"},"removeStrategies(uint8,uint256[])":{"notice":"Removes strategies and their associated weights from the specified quorum."},"setMinimumStakeForQuorum(uint8,uint96)":{"notice":"Sets the minimum stake requirement for a quorum `quorumNumber`."},"setSlashableStakeLookahead(uint8,uint32)":{"notice":"Sets the look ahead time to `lookAheadBlocks` for checking operator shares for a specific quorum."},"slashableStakeLookAheadPerQuorum(uint8)":{"notice":"mapping from quorum number to the slashable stake look ahead time (in blocks)"},"stakeTypePerQuorum(uint8)":{"notice":"mapping from quorum number to the IStakeRegistryTypes.StakeType for that specific quorum"},"strategiesPerQuorum(uint8,uint256)":{"notice":"mapping from quorum number to the list of strategies considered for that specific quorum"},"strategyParams(uint8,uint256)":{"notice":"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum"},"strategyParamsByIndex(uint8,uint256)":{"notice":"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum."},"strategyParamsLength(uint8)":{"notice":"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`."},"updateOperatorsStake(address[],bytes32[],uint8)":{"notice":"Called by the registry coordinator to update the stake of a list of operators for a specific quorum."},"weightOfOperatorForQuorum(uint8,address)":{"notice":"Computes the total weight of the operator in the specified quorum."}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/","@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/","@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/test/harnesses/StakeRegistryHarness.sol":"StakeRegistryHarness"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/AllocationManager.sol":{"keccak256":"0x7fe24f9c4ed94a8b9c1cab4af29413653768964ce50c2da1e66b922ff2b71c7d","urls":["bzz-raw://7c11234d9b10c0f00165c070414c6e1b6a5de160dc9b1b9fd46a4edbfd2e3d76","dweb:/ipfs/QmbAUxaFeNNDSocVkoy7LEMR2X8xQHGPjG3nRzTyzpzdYk"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/AllocationManagerStorage.sol":{"keccak256":"0x38dfdb72886e23a44785425a5c4179cbfac6a5b4162f8f26fe46bb208176fe5b","urls":["bzz-raw://17604236aabfda3cf5e30efc787ee9b83ba7d0f83240130798ef453b963b89cf","dweb:/ipfs/QmWGn6M7NSd8ihvGTSbCVczSeFHe9xjSad7NBNaKSwLb9L"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol":{"keccak256":"0xa5cb7832792c57dcd98d16548f1da3bd3ebd2ee0315cd5b1e7a6f68a24f79fb6","urls":["bzz-raw://7852da45ddf2a9625a839717dc293eacb3a8a5d9c77ea78c5e3ed77c6062b18f","dweb:/ipfs/QmbZfifW7ZsguFmYjvEoR6BiDL3stRzpGUXGbXqCgaAeuH"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol":{"keccak256":"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d","urls":["bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc","dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol":{"keccak256":"0x9f95d00bc0a22ec850e5cc6bcda9db2485f87b627232f9360571dbe87a0ee035","urls":["bzz-raw://96d1e4f044b7337f83f970202b5ce5154970bb8745646b5c0e51cab58713c811","dweb:/ipfs/QmX7mkfacMVKKXJB5GixQqtfYJ3jCkQzTRu4eUy4RjBNeM"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"keccak256":"0xa38c562664300642a88b365f4a69fba58e7f3caa6bdb03ba07a03d09e4688f7f","urls":["bzz-raw://cc7ad91a20edab3859cf06d12dd3bc69e9404a3550875e7ce7586792adfa9655","dweb:/ipfs/QmW2mTG2eSLqSaexWkhYNNpjzXqHP1r8U8jUjG8LsAnEMP"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol":{"keccak256":"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c","urls":["bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91","dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"],"license":"CC0-1.0"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol":{"keccak256":"0xc3e222ffc9e17483032d043f3b7dfac1a0781cf94430a329809a52e47fd59f34","urls":["bzz-raw://7cc43843b58846c37036088cfd872ed6357524d35cf823037bbb3e03e9394348","dweb:/ipfs/QmUDyrccjBdi2zfwrGgsW1x3jGunGaZ8PYxwX1FpaEgBXq"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol":{"keccak256":"0xce7dc91d7522cd3e44a28bb98a66f2e73de55c56b4fc422a50fb1d8d28e8dd5e","urls":["bzz-raw://0debec76a3d52251eab59d0aa264a698c9bcb20414b2b1ea6f98817c041f434d","dweb:/ipfs/QmYGg8voRKXiuY7ZVwfoXST9rkHSDkdr8xZnzgSSsF3uoz"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol":{"keccak256":"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3","urls":["bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8","dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc","urls":["bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72","dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPermissionController.sol":{"keccak256":"0x5642a146907a9302553a6cf92d96d417ff90c679dd24eaf7c3408f831e4d838f","urls":["bzz-raw://a661e690160100dc11646f9011275c996c571d4b7876ac2bdf9b05309c63096f","dweb:/ipfs/QmXJfg7u89XUZ3DYcbo3zTyvWwCKuaUn26DDwFTmsgDoPg"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol":{"keccak256":"0xcb910d9afbaf14c2ec32828e28ca72f1dba35c7371f487505d2a73da2c576009","urls":["bzz-raw://d801fbeeb84ce1dde84dcfa85d519b726f8ba928c76dc4b24d9317299a7a1ab0","dweb:/ipfs/QmfAVYxxJry6GTML7jtQfoR4H1ZFpF6XYSpFZHZ8QTC61B"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IShareManager.sol":{"keccak256":"0xa331e73e99af7eb38befbd7e1d1024d7d9b2c6cc2534313672d1f937ee9fdaaa","urls":["bzz-raw://77fada64905d51779609546ba527834aff7d4478ff26df6f33abfe4a57ba028c","dweb:/ipfs/QmerLh58EpALrjvbgdVAbXJz9uCHukBKyS1MeVsEPo1ytS"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtilsMixin.sol":{"keccak256":"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b","urls":["bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10","dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0xbf084857bc21f2e3752072df667a3025ba73431eaa56852562b0dc3594361d75","urls":["bzz-raw://8a5eb881299b8949063e8d7eecdadbae92f3c84a129aa58b2e5f995714fb3b23","dweb:/ipfs/QmRsG6BgSS3UcXMDjjucKaNvzGjHa85ph22atnz6hzW9xo"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol":{"keccak256":"0x9989483e1c623b3d62b3fe28ca6255577552d85f8ab916fd35559bbad6898a2f","urls":["bzz-raw://97084919a9b4c2e30cd1c529c7c21b6274d3ebf2e52e29e612709f6ea8a8ee8f","dweb:/ipfs/QmbdvS23Qe3RLuzPmFndHzmRdnRWtPYiwEBLKwWdUeYkiF"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol":{"keccak256":"0x6f1fec603853d6b8b610e97c5a7a8dc411ddcad49df03ddd0e2d77881d36788b","urls":["bzz-raw://f51cded4081cf69cd658c87194388e567485cc901e16a53ef7ae9f947365fb7f","dweb:/ipfs/QmQ2weAkzee5goE7BwdNsURJ7qhJeZ9wSocT2gTwMB1AeX"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol":{"keccak256":"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136","urls":["bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e","dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol":{"keccak256":"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436","urls":["bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6","dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol":{"keccak256":"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812","urls":["bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41","dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol":{"keccak256":"0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04","urls":["bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071","dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Snapshots.sol":{"keccak256":"0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6","urls":["bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b","dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/mixins/PermissionControllerMixin.sol":{"keccak256":"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67","urls":["bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0","dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/mixins/SemVerMixin.sol":{"keccak256":"0x292852b1db8a23f1e168f5f2eaadc7ac5e0f58a0762a1032f7bd9715d4b7ba6c","urls":["bzz-raw://507c8111cd58911cd9f416383e143dd1c64eff0b8cf17370ab979079f0c4dd8f","dweb:/ipfs/QmZspYZ7YoSuYeTWu3vMMqcpHreZJY8N5jBeHrCZya1gZq"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol":{"keccak256":"0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666","urls":["bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd","dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol":{"keccak256":"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98","urls":["bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8","dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol":{"keccak256":"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0","urls":["bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025","dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/ShortStringsUpgradeable.sol":{"keccak256":"0x4e34d967d14c25ef92ef1d4f7a8761949941f46c8f068923bd59d6e09c23b822","urls":["bzz-raw://a4643a5a7f8f7794f502d5fc6576ec09c10732680b93b44ca1899b6f32e7d5de","dweb:/ipfs/QmVQShpVY4y2Z6XY4ErtkQeNpbGEAcAQXrBeKSti4rX4UB"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol":{"keccak256":"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908","urls":["bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685","dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol":{"keccak256":"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e","urls":["bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91","dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol":{"keccak256":"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b","urls":["bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c","dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218","urls":["bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32","dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61","urls":["bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354","dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3","urls":["bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c","dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad","urls":["bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278","dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol":{"keccak256":"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c","urls":["bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7","dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514","urls":["bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df","dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"],"license":"MIT"},"lib/eigenlayer-middleware/src/StakeRegistry.sol":{"keccak256":"0xa660e56abac7173e35e621b03d64bb8ccb4e8a35905dfafcc7b7550e9ef5f5d0","urls":["bzz-raw://714322a0da307854175d034cbaa3e268fa7413804e490107eddda4388714cfe4","dweb:/ipfs/QmSDswX2QcibKkJSQo3hnaU7ycwwQ1XCDKvSRdr6ecp7JV"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/StakeRegistryStorage.sol":{"keccak256":"0x335ea4c9f7ad4cbb1fe1fc990319478a74de1083ee6e0768ed66112d2b31b116","urls":["bzz-raw://33b2120657ad6aeeffeaa3681aeca6dad717ec600034b2d53d9c673dacebe9ea","dweb:/ipfs/QmeHABPTqijRthq1EvhngD5WUc5YzGBFWLLb6vmd8oBNSK"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol":{"keccak256":"0xed2bff5f81fbc80332ee43b9b9c832d729431dde3d77d4d84681b9158dde9c37","urls":["bzz-raw://e1308f017d099e287d768e7fcc77b087f8d5b227ad34b5267369c956d0e98cd4","dweb:/ipfs/QmcvE3Qj6LGtMxicbebREYjLKrVBxnm9gXG5JUL6FQ8Z1S"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol":{"keccak256":"0xe7e83446da6c25e60151015ba18816e179005e0d182ed05111d2b0c716837398","urls":["bzz-raw://4466d6dc66caca35e7c96e51a70587a1c7c7a5062243bbb0fa341ee74b5706ce","dweb:/ipfs/QmVm16TRhAqPmYwMQrjTzfwoJCGe1bguDTm5BqTrkiXwkB"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/ISlashingRegistryCoordinator.sol":{"keccak256":"0x3f590182117120888660c71b0a50f71f941829913b17c93e51be96cb497b93c8","urls":["bzz-raw://5ef8e838f7f3a599b74d0ea8c3258564ae509b19dbeb405f4cde7641080985a1","dweb:/ipfs/Qmao5Q6hD4dk2MENfyxJeetFU3iFQsYBPbaKM47w5bVBvb"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/ISocketRegistry.sol":{"keccak256":"0x5d4497f995bdc0f56d242b218065a9d0b9ab7f8b47421e66cb3ae37e25674d8f","urls":["bzz-raw://47cfc86fd6147928011e8ab8ca3689b3cee0b155a4b01700ac7e8146012d86da","dweb:/ipfs/QmcqDwW5WHKWi5arVERE1j7RikN7GuQtmfX7fpSyRu5zBe"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol":{"keccak256":"0x4b121355ae5a3253d2f9a873cd2b27125e5094ba1d899fe21514bc8ebb119966","urls":["bzz-raw://c8125d02b6556d0c2a355af0eaf44eb0e00a6a7fcf5bf542789e43f3c7552e78","dweb:/ipfs/Qmeu7XWjgZZH9hmsPJXDSyBuY3ByUmvdwAQpwe2VugQnfK"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/libraries/BN254.sol":{"keccak256":"0x941414cfbfb510409428e51e197e5e28be3b45fb81440e183afa0caa1f077ec7","urls":["bzz-raw://aa245501f99b6f77564fe7e38f8130a0a6d589424bf413b2d1e46da8b5214982","dweb:/ipfs/QmXCJx2GktmrbpYLnsAZ4KrResizL3JuhDjA3MNgito8AQ"],"license":"MIT"},"lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol":{"keccak256":"0xfac31fd5a3ad9b6c1a659ed320e2171b7bec8a34cb602fb39576135574a4d6ae","urls":["bzz-raw://c5bc75c2237e1e9c4e0c55069167207345bb28066c51174e1a5febb7beed888c","dweb:/ipfs/QmWNUk7SYnAab7Eu6f7DBR2Cy2cAZPUbp5ZEATSsjjjwqP"],"license":"MIT"},"lib/eigenlayer-middleware/test/harnesses/StakeRegistryHarness.sol":{"keccak256":"0xc4ffce41d4597a4de8938cdc9d7a5bf0f65923a4dd838dd9a514afdd45388b21","urls":["bzz-raw://367b422b9ec51c68359c55c987adc683cedb667317fb63d47ac8489e80e6df0f","dweb:/ipfs/QmbmnSCTfEVaxConPxGPKWY9PYk9cDdeWnone6Mq7fE8Dg"],"license":"BUSL-1.1"}},"version":1},"id":129}