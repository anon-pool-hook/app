{"abi":[{"type":"function","name":"DEALLOCATION_DELAY","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"addStrategiesToOperatorSet","inputs":[{"name":"avs","type":"address","internalType":"address"},{"name":"operatorSetId","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearDeallocationQueue","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"numToClear","type":"uint16[]","internalType":"uint16[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createOperatorSets","inputs":[{"name":"avs","type":"address","internalType":"address"},{"name":"params","type":"tuple[]","internalType":"struct IAllocationManagerTypes.CreateSetParams[]","components":[{"name":"operatorSetId","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterFromOperatorSets","inputs":[{"name":"params","type":"tuple","internalType":"struct IAllocationManagerTypes.DeregisterParams","components":[{"name":"operator","type":"address","internalType":"address"},{"name":"avs","type":"address","internalType":"address"},{"name":"operatorSetIds","type":"uint32[]","internalType":"uint32[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAVSRegistrar","inputs":[{"name":"avs","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"contract IAVSRegistrar"}],"stateMutability":"view"},{"type":"function","name":"getAllocatableMagnitude","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getAllocatedSets","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct OperatorSet[]","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"stateMutability":"view"},{"type":"function","name":"getAllocatedStake","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operators","type":"address[]","internalType":"address[]"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"}],"outputs":[{"name":"slashableStake","type":"uint256[][]","internalType":"uint256[][]"}],"stateMutability":"view"},{"type":"function","name":"getAllocatedStake","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getAllocatedStrategies","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"","type":"address[]","internalType":"contract IStrategy[]"}],"stateMutability":"view"},{"type":"function","name":"getAllocation","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"strategy","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IAllocationManagerTypes.Allocation","components":[{"name":"currentMagnitude","type":"uint64","internalType":"uint64"},{"name":"pendingDiff","type":"int128","internalType":"int128"},{"name":"effectBlock","type":"uint32","internalType":"uint32"}]}],"stateMutability":"view"},{"type":"function","name":"getAllocationDelay","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"isSet","type":"bool","internalType":"bool"},{"name":"delay","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getAllocations","inputs":[{"name":"operators","type":"address[]","internalType":"address[]"},{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"strategy","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IAllocationManagerTypes.Allocation[]","components":[{"name":"currentMagnitude","type":"uint64","internalType":"uint64"},{"name":"pendingDiff","type":"int128","internalType":"int128"},{"name":"effectBlock","type":"uint32","internalType":"uint32"}]}],"stateMutability":"view"},{"type":"function","name":"getEncumberedMagnitude","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getMaxMagnitude","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getMaxMagnitudes","inputs":[{"name":"operators","type":"address[]","internalType":"address[]"},{"name":"strategy","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"uint64[]","internalType":"uint64[]"}],"stateMutability":"view"},{"type":"function","name":"getMaxMagnitudes","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"}],"outputs":[{"name":"","type":"uint64[]","internalType":"uint64[]"}],"stateMutability":"view"},{"type":"function","name":"getMaxMagnitudesAtBlock","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint64[]","internalType":"uint64[]"}],"stateMutability":"view"},{"type":"function","name":"getMemberCount","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getMembers","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"operators","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getMinimumSlashableStake","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operators","type":"address[]","internalType":"address[]"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"futureBlock","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"slashableStake","type":"uint256[][]","internalType":"uint256[][]"}],"stateMutability":"view"},{"type":"function","name":"getOperatorSetCount","inputs":[{"name":"avs","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRegisteredSets","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"operatorSets","type":"tuple[]","internalType":"struct OperatorSet[]","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"stateMutability":"view"},{"type":"function","name":"getStrategiesInOperatorSet","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"}],"stateMutability":"view"},{"type":"function","name":"getStrategyAllocations","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct OperatorSet[]","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"","type":"tuple[]","internalType":"struct IAllocationManagerTypes.Allocation[]","components":[{"name":"currentMagnitude","type":"uint64","internalType":"uint64"},{"name":"pendingDiff","type":"int128","internalType":"int128"},{"name":"effectBlock","type":"uint32","internalType":"uint32"}]}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"initialOwner","type":"address","internalType":"address"},{"name":"initialPausedStatus","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isMemberOfOperatorSet","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOperatorSet","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOperatorSlashable","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"modifyAllocations","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"params","type":"tuple[]","internalType":"struct IAllocationManagerTypes.AllocateParams[]","components":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"newMagnitudes","type":"uint64[]","internalType":"uint64[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerForOperatorSets","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"params","type":"tuple","internalType":"struct IAllocationManagerTypes.RegisterParams","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"operatorSetIds","type":"uint32[]","internalType":"uint32[]"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeStrategiesFromOperatorSet","inputs":[{"name":"avs","type":"address","internalType":"address"},{"name":"operatorSetId","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setAVSRegistrar","inputs":[{"name":"avs","type":"address","internalType":"address"},{"name":"registrar","type":"address","internalType":"contract IAVSRegistrar"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setAllocationDelay","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"delay","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"slashOperator","inputs":[{"name":"avs","type":"address","internalType":"address"},{"name":"params","type":"tuple","internalType":"struct IAllocationManagerTypes.SlashingParams","components":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSetId","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"wadsToSlash","type":"uint256[]","internalType":"uint256[]"},{"name":"description","type":"string","internalType":"string"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateAVSMetadataURI","inputs":[{"name":"avs","type":"address","internalType":"address"},{"name":"metadataURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"event","name":"AVSMetadataURIUpdated","inputs":[{"name":"avs","type":"address","indexed":true,"internalType":"address"},{"name":"metadataURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"AVSRegistrarSet","inputs":[{"name":"avs","type":"address","indexed":false,"internalType":"address"},{"name":"registrar","type":"address","indexed":false,"internalType":"contract IAVSRegistrar"}],"anonymous":false},{"type":"event","name":"AllocationDelaySet","inputs":[{"name":"operator","type":"address","indexed":false,"internalType":"address"},{"name":"delay","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"effectBlock","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"AllocationUpdated","inputs":[{"name":"operator","type":"address","indexed":false,"internalType":"address"},{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"magnitude","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"effectBlock","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"EncumberedMagnitudeUpdated","inputs":[{"name":"operator","type":"address","indexed":false,"internalType":"address"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"encumberedMagnitude","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"MaxMagnitudeUpdated","inputs":[{"name":"operator","type":"address","indexed":false,"internalType":"address"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"maxMagnitude","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"OperatorAddedToOperatorSet","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"anonymous":false},{"type":"event","name":"OperatorRemovedFromOperatorSet","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"anonymous":false},{"type":"event","name":"OperatorSetCreated","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"anonymous":false},{"type":"event","name":"OperatorSlashed","inputs":[{"name":"operator","type":"address","indexed":false,"internalType":"address"},{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"strategies","type":"address[]","indexed":false,"internalType":"contract IStrategy[]"},{"name":"wadSlashed","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"description","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"StrategyAddedToOperatorSet","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"event","name":"StrategyRemovedFromOperatorSet","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"error","name":"AlreadyMemberOfSet","inputs":[]},{"type":"error","name":"InputArrayLengthMismatch","inputs":[]},{"type":"error","name":"InsufficientMagnitude","inputs":[]},{"type":"error","name":"InvalidAVSRegistrar","inputs":[]},{"type":"error","name":"InvalidCaller","inputs":[]},{"type":"error","name":"InvalidOperator","inputs":[]},{"type":"error","name":"InvalidOperatorSet","inputs":[]},{"type":"error","name":"InvalidWadToSlash","inputs":[]},{"type":"error","name":"ModificationAlreadyPending","inputs":[]},{"type":"error","name":"NonexistentAVSMetadata","inputs":[]},{"type":"error","name":"NotMemberOfSet","inputs":[]},{"type":"error","name":"OperatorNotSlashable","inputs":[]},{"type":"error","name":"SameMagnitude","inputs":[]},{"type":"error","name":"StrategiesMustBeInAscendingOrder","inputs":[]},{"type":"error","name":"StrategyAlreadyInOperatorSet","inputs":[]},{"type":"error","name":"StrategyNotInOperatorSet","inputs":[]},{"type":"error","name":"UninitializedAllocationDelay","inputs":[]}],"bytecode":{"object":"0x60808060405234601557610e57908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806310e1b9b81461095e5780631352c3e6146104b857806315fe502814610419578063260dc758146102b1578063261f84e0146103625780632981eb77146109415780632b453a9a146107995780632bab2c4a146106a6578063304c10cd1461026a578063363520571461066a57806340120dab146106235780634177a87c146106095780634a10ffe5146105cf5780634b5046ef1461057557806350feea20146102ac578063547afb871461055757806354fd4d50146104fd57806356c483e6146104db578063670d3ba2146104b85780636cfb44811461035d5780636e3492b5146104855780636e875dba1461041e57806379ae50cd146104195780638ce64854146103c157806394d7d00c14610370578063952899ee14610362578063a9333ec81461035d578063a982182114610307578063adc2e3d9146102cb578063b2447af7146102b1578063b66bd989146102ac578063b9fbaed114610283578063ba1a84e51461026a578063c0bcd4d4146101bb578063c221d8ae14610235578063cd6dc6871461021a578063d3d96ff4146101ec5763f605ce08146101bb575f80fd5b346101e85760403660031901126101e8576101d4610a03565b506101dd610b42565b5060206040515f8152f35b5f80fd5b346101e85760403660031901126101e857610205610a03565b506024356001600160a01b038116036101e857005b346101e85760403660031901126101e857610233610a03565b005b346101e85760603660031901126101e85761024e610a03565b5061025836610aaa565b506040518061026681610d1c565b0390f35b346101e85760203660031901126101e8576101dd610a03565b346101e85760203660031901126101e85761029c610a03565b50604080515f81525f6020820152f35b610da4565b346101e85760403660031901126101e8576101dd36610aeb565b346101e85760403660031901126101e8576102e4610a03565b506024356001600160401b0381116101e85760609060031990360301126101e857005b346101e85760403660031901126101e857610320610a03565b506024356001600160401b0381116101e857366023820112156101e85780600401356001600160401b0381116101e857369101602401116101e857005b6101bb565b346101e85761023336610c04565b346101e85760603660031901126101e857610389610a03565b506024356001600160401b0381116101e8576103a9903690600401610bd4565b50506103b3610a97565b506040518061026681610d60565b346101e85760803660031901126101e8576004356001600160401b0381116101e8576103f1903690600401610c5e565b506103fb36610aaa565b50610404610b2c565b50604051602081528061026660208201610cb9565b610ba6565b346101e85760403660031901126101e85761043836610aeb565b5060405180602081016020825260605180915260408201906080905f5b818110610463575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610455565b346101e85760203660031901126101e8576004356001600160401b0381116101e85760609060031990360301126101e857005b346101e85760603660031901126101e8576104d1610a03565b506101dd36610aaa565b346101e85760403660031901126101e8576104f4610a03565b50610233610a84565b346101e8575f3660031901126101e857610515610a2d565b60068152604060208201916576302e302e3160d01b83528151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b346101e85761056536610c04565b5050506040518061026681610d60565b346101e85760603660031901126101e85761058e610a03565b506024356001600160401b0381116101e8576105ae903690600401610bd4565b50506044356001600160401b0381116101e857610233903690600401610bd4565b346101e85760403660031901126101e8576004356001600160401b0381116101e8576105ff903690600401610bd4565b50506103b3610b42565b346101e85760403660031901126101e85761025836610aeb565b346101e85760403660031901126101e85761063c610a03565b50610645610b42565b50604051604081528061026661065d60408301610b58565b8281036020840152610cb9565b346101e85760403660031901126101e857610683610a03565b506024356001600160401b0381116101e85760a09060031990360301126101e857005b346101e85760a03660031901126101e8576106c036610aeb565b506044356001600160401b0381116101e8576106e0903690600401610c5e565b506064356001600160401b0381116101e857610700903690600401610c5e565b50610709610a71565b506040518060208101602082526060518091526040820160408260051b840101916080915f905b82821061073f57505050500390f35b919390929450603f19868203018252845190602080835192838152019201905f905b808210610781575050506020806001929601920192018594939192610730565b90919260208060019286518152019401920190610761565b346101e85760803660031901126101e8576107b336610aeb565b506044356001600160401b0381116101e8576107d3903690600401610c5e565b6064356001600160401b0381116101e8576107f2903690600401610c5e565b81519161080661080184610c47565b610a4c565b92808452610816601f1991610c47565b015f5b8181106109305750505f905b805182101561089e57825161083c61080182610c47565b9080825261084c601f1991610c47565b0136602083013761085d8386610df9565b526108688285610df9565b505f5b835181101561089357805f61088c600193610886878a610df9565b51610df9565b520161086b565b509060010190610825565b836040518091602082016020835281518091526040830190602060408260051b8601019301915f905b8282106108d657505050500390f35b919390929450603f19868203018252845190602080835192838152019201905f905b8082106109185750505060208060019296019201920185949391926108c7565b909192602080600192865181520194019201906108f8565b806060602080938801015201610819565b346101e8575f3660031901126101e8576020604051620151808152f35b346101e85760803660031901126101e857610977610a03565b5061098136610aaa565b5061098a610b2c565b5060405160608101908082106001600160401b038311176109ef576060916040525f81525f60208201525f60408201526109ed604051809263ffffffff604080926001600160401b0381511685526020810151600f0b6020860152015116910152565bf35b634e487b7160e01b5f52604160045260245ffd5b600435906001600160a01b03821682036101e857565b35906001600160a01b03821682036101e857565b60405190604082018281106001600160401b038211176109ef57604052565b6040519190601f01601f191682016001600160401b038111838210176109ef57604052565b6084359063ffffffff821682036101e857565b6024359063ffffffff821682036101e857565b6044359063ffffffff821682036101e857565b60409060231901126101e857610abe610a2d565b906024356001600160a01b03811681036101e857825260443563ffffffff811681036101e8576020830152565b60409060031901126101e857610aff610a2d565b906004356001600160a01b03811681036101e857825260243563ffffffff811681036101e8576020830152565b606435906001600160a01b03821682036101e857565b602435906001600160a01b03821682036101e857565b60206060519182815201906080905f5b818110610b755750505090565b825180516001600160a01b0316855260209081015163ffffffff168186015260409094019390920191600101610b68565b346101e85760203660031901126101e857610bbf610a03565b50604051602081528061026660208201610b58565b9181601f840112156101e8578235916001600160401b0383116101e8576020808501948460051b0101116101e857565b9060406003198301126101e8576004356001600160a01b03811681036101e85791602435906001600160401b0382116101e857610c4391600401610bd4565b9091565b6001600160401b0381116109ef5760051b60200190565b9080601f830112156101e8578135610c7861080182610c47565b9260208085848152019260051b8201019283116101e857602001905b828210610ca15750505090565b60208091610cae84610a19565b815201910190610c94565b60206060519182815201906080905f5b818110610cd65750505090565b9091926020606082610d11600194885163ffffffff604080926001600160401b0381511685526020810151600f0b6020860152015116910152565b019401929101610cc9565b604060208201916020815260605180935201906080905f5b818110610d415750505090565b82516001600160a01b0316845260209384019390920191600101610d34565b604060208201916020815260605180935201906080905f5b818110610d855750505090565b82516001600160401b0316845260209384019390920191600101610d78565b346101e85760603660031901126101e8576004356001600160a01b03811681036101e8575060243563ffffffff811681036101e857506044356001600160401b0381116101e857610233903690600401610bd4565b8051821015610e0d5760209160051b010190565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220b6c9fdbe99f03bce0fc8f6ee32f2ac7225519bc0477ba41fda68a3ba9a0167c064736f6c634300081b0033","sourceMap":"6033:272:131:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361015610011575f80fd5b5f3560e01c806310e1b9b81461095e5780631352c3e6146104b857806315fe502814610419578063260dc758146102b1578063261f84e0146103625780632981eb77146109415780632b453a9a146107995780632bab2c4a146106a6578063304c10cd1461026a578063363520571461066a57806340120dab146106235780634177a87c146106095780634a10ffe5146105cf5780634b5046ef1461057557806350feea20146102ac578063547afb871461055757806354fd4d50146104fd57806356c483e6146104db578063670d3ba2146104b85780636cfb44811461035d5780636e3492b5146104855780636e875dba1461041e57806379ae50cd146104195780638ce64854146103c157806394d7d00c14610370578063952899ee14610362578063a9333ec81461035d578063a982182114610307578063adc2e3d9146102cb578063b2447af7146102b1578063b66bd989146102ac578063b9fbaed114610283578063ba1a84e51461026a578063c0bcd4d4146101bb578063c221d8ae14610235578063cd6dc6871461021a578063d3d96ff4146101ec5763f605ce08146101bb575f80fd5b346101e85760403660031901126101e8576101d4610a03565b506101dd610b42565b5060206040515f8152f35b5f80fd5b346101e85760403660031901126101e857610205610a03565b506024356001600160a01b038116036101e857005b346101e85760403660031901126101e857610233610a03565b005b346101e85760603660031901126101e85761024e610a03565b5061025836610aaa565b506040518061026681610d1c565b0390f35b346101e85760203660031901126101e8576101dd610a03565b346101e85760203660031901126101e85761029c610a03565b50604080515f81525f6020820152f35b610da4565b346101e85760403660031901126101e8576101dd36610aeb565b346101e85760403660031901126101e8576102e4610a03565b506024356001600160401b0381116101e85760609060031990360301126101e857005b346101e85760403660031901126101e857610320610a03565b506024356001600160401b0381116101e857366023820112156101e85780600401356001600160401b0381116101e857369101602401116101e857005b6101bb565b346101e85761023336610c04565b346101e85760603660031901126101e857610389610a03565b506024356001600160401b0381116101e8576103a9903690600401610bd4565b50506103b3610a97565b506040518061026681610d60565b346101e85760803660031901126101e8576004356001600160401b0381116101e8576103f1903690600401610c5e565b506103fb36610aaa565b50610404610b2c565b50604051602081528061026660208201610cb9565b610ba6565b346101e85760403660031901126101e85761043836610aeb565b5060405180602081016020825260605180915260408201906080905f5b818110610463575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610455565b346101e85760203660031901126101e8576004356001600160401b0381116101e85760609060031990360301126101e857005b346101e85760603660031901126101e8576104d1610a03565b506101dd36610aaa565b346101e85760403660031901126101e8576104f4610a03565b50610233610a84565b346101e8575f3660031901126101e857610515610a2d565b60068152604060208201916576302e302e3160d01b83528151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b346101e85761056536610c04565b5050506040518061026681610d60565b346101e85760603660031901126101e85761058e610a03565b506024356001600160401b0381116101e8576105ae903690600401610bd4565b50506044356001600160401b0381116101e857610233903690600401610bd4565b346101e85760403660031901126101e8576004356001600160401b0381116101e8576105ff903690600401610bd4565b50506103b3610b42565b346101e85760403660031901126101e85761025836610aeb565b346101e85760403660031901126101e85761063c610a03565b50610645610b42565b50604051604081528061026661065d60408301610b58565b8281036020840152610cb9565b346101e85760403660031901126101e857610683610a03565b506024356001600160401b0381116101e85760a09060031990360301126101e857005b346101e85760a03660031901126101e8576106c036610aeb565b506044356001600160401b0381116101e8576106e0903690600401610c5e565b506064356001600160401b0381116101e857610700903690600401610c5e565b50610709610a71565b506040518060208101602082526060518091526040820160408260051b840101916080915f905b82821061073f57505050500390f35b919390929450603f19868203018252845190602080835192838152019201905f905b808210610781575050506020806001929601920192018594939192610730565b90919260208060019286518152019401920190610761565b346101e85760803660031901126101e8576107b336610aeb565b506044356001600160401b0381116101e8576107d3903690600401610c5e565b6064356001600160401b0381116101e8576107f2903690600401610c5e565b81519161080661080184610c47565b610a4c565b92808452610816601f1991610c47565b015f5b8181106109305750505f905b805182101561089e57825161083c61080182610c47565b9080825261084c601f1991610c47565b0136602083013761085d8386610df9565b526108688285610df9565b505f5b835181101561089357805f61088c600193610886878a610df9565b51610df9565b520161086b565b509060010190610825565b836040518091602082016020835281518091526040830190602060408260051b8601019301915f905b8282106108d657505050500390f35b919390929450603f19868203018252845190602080835192838152019201905f905b8082106109185750505060208060019296019201920185949391926108c7565b909192602080600192865181520194019201906108f8565b806060602080938801015201610819565b346101e8575f3660031901126101e8576020604051620151808152f35b346101e85760803660031901126101e857610977610a03565b5061098136610aaa565b5061098a610b2c565b5060405160608101908082106001600160401b038311176109ef576060916040525f81525f60208201525f60408201526109ed604051809263ffffffff604080926001600160401b0381511685526020810151600f0b6020860152015116910152565bf35b634e487b7160e01b5f52604160045260245ffd5b600435906001600160a01b03821682036101e857565b35906001600160a01b03821682036101e857565b60405190604082018281106001600160401b038211176109ef57604052565b6040519190601f01601f191682016001600160401b038111838210176109ef57604052565b6084359063ffffffff821682036101e857565b6024359063ffffffff821682036101e857565b6044359063ffffffff821682036101e857565b60409060231901126101e857610abe610a2d565b906024356001600160a01b03811681036101e857825260443563ffffffff811681036101e8576020830152565b60409060031901126101e857610aff610a2d565b906004356001600160a01b03811681036101e857825260243563ffffffff811681036101e8576020830152565b606435906001600160a01b03821682036101e857565b602435906001600160a01b03821682036101e857565b60206060519182815201906080905f5b818110610b755750505090565b825180516001600160a01b0316855260209081015163ffffffff168186015260409094019390920191600101610b68565b346101e85760203660031901126101e857610bbf610a03565b50604051602081528061026660208201610b58565b9181601f840112156101e8578235916001600160401b0383116101e8576020808501948460051b0101116101e857565b9060406003198301126101e8576004356001600160a01b03811681036101e85791602435906001600160401b0382116101e857610c4391600401610bd4565b9091565b6001600160401b0381116109ef5760051b60200190565b9080601f830112156101e8578135610c7861080182610c47565b9260208085848152019260051b8201019283116101e857602001905b828210610ca15750505090565b60208091610cae84610a19565b815201910190610c94565b60206060519182815201906080905f5b818110610cd65750505090565b9091926020606082610d11600194885163ffffffff604080926001600160401b0381511685526020810151600f0b6020860152015116910152565b019401929101610cc9565b604060208201916020815260605180935201906080905f5b818110610d415750505090565b82516001600160a01b0316845260209384019390920191600101610d34565b604060208201916020815260605180935201906080905f5b818110610d855750505090565b82516001600160401b0316845260209384019390920191600101610d78565b346101e85760603660031901126101e8576004356001600160a01b03811681036101e8575060243563ffffffff811681036101e857506044356001600160401b0381116101e857610233903690600401610bd4565b8051821015610e0d5760209160051b010190565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220b6c9fdbe99f03bce0fc8f6ee32f2ac7225519bc0477ba41fda68a3ba9a0167c064736f6c634300081b0033","sourceMap":"6033:272:131:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;-1:-1:-1;6033:272:131;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;-1:-1:-1;6033:272:131;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;5341:13;;6033:272;5336:226;5378:3;6033:272;;5356:20;;;;;6033:272;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;5397:44;;;;:::i;:::-;;;;;;:::i;:::-;;6033:272;5498:3;6033:272;;5475:21;;;;;5521:9;6033:272;5521:16;6033:272;5521:9;;;;;:::i;:::-;;:16;:::i;:::-;6033:272;;5460:13;;5475:21;;;6033:272;;5341:13;;;5356:20;;6033:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;;6147:5;6033:272;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;:::o;:::-;;;-1:-1:-1;;;;;6033:272:131;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;6033:272:131;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;6033:272:131;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;6033:272:131;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;6033:272:131;;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;:::i;:::-;;;:::o;:::-;-1:-1:-1;;;;;6033:272:131;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6033:272:131;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6033:272:131;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6033:272:131;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;","linkReferences":{}},"methodIdentifiers":{"DEALLOCATION_DELAY()":"2981eb77","addStrategiesToOperatorSet(address,uint32,address[])":"50feea20","clearDeallocationQueue(address,address[],uint16[])":"4b5046ef","createOperatorSets(address,(uint32,address[])[])":"261f84e0","deregisterFromOperatorSets((address,address,uint32[]))":"6e3492b5","getAVSRegistrar(address)":"304c10cd","getAllocatableMagnitude(address,address)":"6cfb4481","getAllocatedSets(address)":"15fe5028","getAllocatedStake((address,uint32),address[],address[])":"2b453a9a","getAllocatedStake(address,address)":"c0bcd4d4","getAllocatedStrategies(address,(address,uint32))":"c221d8ae","getAllocation(address,(address,uint32),address)":"10e1b9b8","getAllocationDelay(address)":"b9fbaed1","getAllocations(address[],(address,uint32),address)":"8ce64854","getEncumberedMagnitude(address,address)":"f605ce08","getMaxMagnitude(address,address)":"a9333ec8","getMaxMagnitudes(address,address[])":"547afb87","getMaxMagnitudes(address[],address)":"4a10ffe5","getMaxMagnitudesAtBlock(address,address[],uint32)":"94d7d00c","getMemberCount((address,uint32))":"b2447af7","getMembers((address,uint32))":"6e875dba","getMinimumSlashableStake((address,uint32),address[],address[],uint32)":"2bab2c4a","getOperatorSetCount(address)":"ba1a84e5","getRegisteredSets(address)":"79ae50cd","getStrategiesInOperatorSet((address,uint32))":"4177a87c","getStrategyAllocations(address,address)":"40120dab","initialize(address,uint256)":"cd6dc687","isMemberOfOperatorSet(address,(address,uint32))":"670d3ba2","isOperatorSet((address,uint32))":"260dc758","isOperatorSlashable(address,(address,uint32))":"1352c3e6","modifyAllocations(address,((address,uint32),address[],uint64[])[])":"952899ee","registerForOperatorSets(address,(address,uint32[],bytes))":"adc2e3d9","removeStrategiesFromOperatorSet(address,uint32,address[])":"b66bd989","setAVSRegistrar(address,address)":"d3d96ff4","setAllocationDelay(address,uint32)":"56c483e6","slashOperator(address,(address,uint32,address[],uint256[],string))":"36352057","updateAVSMetadataURI(address,string)":"a9821821","version()":"54fd4d50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAVSRegistrar\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWadToSlash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModificationAlreadyPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonexistentAVSMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotSlashable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategiesMustBeInAscendingOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyAlreadyInOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotInOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UninitializedAllocationDelay\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"AVSMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"AVSRegistrarSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"magnitude\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"encumberedMagnitude\",\"type\":\"uint64\"}],\"name\":\"EncumberedMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"maxMagnitude\",\"type\":\"uint64\"}],\"name\":\"MaxMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorRemovedFromOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorSetCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"wadSlashed\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"OperatorSlashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromOperatorSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEALLOCATION_DELAY\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"addStrategiesToOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"numToClear\",\"type\":\"uint16[]\"}],\"name\":\"clearDeallocationQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"internalType\":\"struct IAllocationManagerTypes.CreateSetParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"createOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"internalType\":\"struct IAllocationManagerTypes.DeregisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deregisterFromOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getAVSRegistrar\",\"outputs\":[{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocatableMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocatedSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getAllocatedStake\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"slashableStake\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocatedStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getAllocatedStrategies\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocationDelay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSet\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getEncumberedMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getMaxMagnitudesAtBlock\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"futureBlock\",\"type\":\"uint32\"}],\"name\":\"getMinimumSlashableStake\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"slashableStake\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getOperatorSetCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getRegisteredSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"operatorSets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getStrategiesInOperatorSet\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getStrategyAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isMemberOfOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isOperatorSlashable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint64[]\",\"name\":\"newMagnitudes\",\"type\":\"uint64[]\"}],\"internalType\":\"struct IAllocationManagerTypes.AllocateParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"modifyAllocations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IAllocationManagerTypes.RegisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"registerForOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"removeStrategiesFromOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"setAVSRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"setAllocationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"wadsToSlash\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IAllocationManagerTypes.SlashingParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"slashOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AlreadyMemberOfSet()\":[{\"details\":\"Thrown when trying to add an operator to a set they are already a member of\"}],\"InputArrayLengthMismatch()\":[{\"details\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InsufficientMagnitude()\":[{\"details\":\"Thrown when an allocation is attempted that exceeds a given operators total allocatable magnitude.\"}],\"InvalidAVSRegistrar()\":[{\"details\":\"Thrown when the AVSRegistrar is not correctly configured to prevent an AVSRegistrar contract from being used with the wrong AVS\"}],\"InvalidCaller()\":[{\"details\":\"Thrown when caller is not authorized to call a function.\"}],\"InvalidOperator()\":[{\"details\":\"Thrown when an invalid operator is provided.\"}],\"InvalidOperatorSet()\":[{\"details\":\"Thrown when an invalid operator set is provided.\"}],\"InvalidWadToSlash()\":[{\"details\":\"Thrown when `wadToSlash` is zero or greater than 1e18\"}],\"ModificationAlreadyPending()\":[{\"details\":\"Thrown when an allocation is attempted for a given operator when they have pending allocations or deallocations.\"}],\"NonexistentAVSMetadata()\":[{\"details\":\"Thrown when an invalid avs whose metadata is not registered is provided.\"}],\"NotMemberOfSet()\":[{\"details\":\"Thrown when trying to slash/remove an operator from a set they are not a member of\"}],\"OperatorNotSlashable()\":[{\"details\":\"Thrown when attempting to slash an operator when they are not slashable.\"}],\"SameMagnitude()\":[{\"details\":\"Thrown when an operator attempts to set their allocation for an operatorSet to the same value\"}],\"StrategiesMustBeInAscendingOrder()\":[{\"details\":\"Thrown when provided `strategies` are not in ascending order.\"}],\"StrategyAlreadyInOperatorSet()\":[{\"details\":\"Thrown when trying to add a strategy to an operator set that already contains it.\"}],\"StrategyNotInOperatorSet()\":[{\"details\":\"Thrown when a strategy is referenced that does not belong to an operator set.\"}],\"UninitializedAllocationDelay()\":[{\"details\":\"Thrown when an operator's allocation delay has yet to be set.\"}]},\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"details\":\"The URI is never stored; it is simply emitted through an event for off-chain indexing.\"}},\"kind\":\"dev\",\"methods\":{\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST NOT already exist in the operator set\",\"params\":{\"avs\":\"the avs to set strategies for\",\"operatorSetId\":\"the operator set to add strategies to\",\"strategies\":\"the strategies to add\"}},\"clearDeallocationQueue(address,address[],uint16[])\":{\"details\":\"can be called permissionlessly by anyone\",\"params\":{\"numToClear\":\"a list of number of pending deallocations to clear for each strategy\",\"operator\":\"address to clear deallocations for\",\"strategies\":\"a list of strategies to clear deallocations for\"}},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"details\":\"After deregistering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. deregisterOperator` method to complete deregistration. This call MUST succeed in order for deregistration to be successful.\"},\"getAllocatableMagnitude(address,address)\":{\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get allocatable magnitude for\"},\"returns\":{\"_0\":\"magnitude available to be allocated to an operator set\"}},\"getAllocatedSets(address)\":{\"params\":{\"operator\":\"the operator to query\"},\"returns\":{\"_0\":\"the list of operator sets the operator has current or pending allocations/deallocations in\"}},\"getAllocatedStake((address,uint32),address[],address[])\":{\"params\":{\"operatorSet\":\"the operator set to query\",\"operators\":\"the operators to query\",\"strategies\":\"the strategies to query\"}},\"getAllocatedStrategies(address,(address,uint32))\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\"},\"returns\":{\"_0\":\"the list of strategies\"}},\"getAllocation(address,(address,uint32),address)\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the current/pending stake allocation\"}},\"getAllocationDelay(address)\":{\"details\":\"The operator must have a configured delay before allocating magnitude\",\"params\":{\"operator\":\"The operator to query\"},\"returns\":{\"delay\":\"The time in blocks between allocating magnitude and magnitude becoming slashable\",\"isSet\":\"Whether the operator has configured a delay\"}},\"getAllocations(address[],(address,uint32),address)\":{\"params\":{\"operatorSet\":\"the operator set to query\",\"operators\":\"the operators to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"each operator's allocation\"}},\"getEncumberedMagnitude(address,address)\":{\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get allocatable magnitude for\"},\"returns\":{\"_0\":\"currently allocated magnitude\"}},\"getMaxMagnitude(address,address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get the max magnitude for\"},\"returns\":{\"_0\":\"the max magnitude for the strategy\"}},\"getMaxMagnitudes(address,address[])\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMaxMagnitudes(address[],address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operators\":\"the operators to query\",\"strategy\":\"the strategy to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each operator\"}},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"blockNumber\":\"the blockNumber at which to check the max magnitudes\",\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMemberCount((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to get the member count for\"}},\"getMembers((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"details\":\"This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents. This method does not consider slashable stake in the withdrawal queue even though there could be slashable stake in the queue.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.\",\"params\":{\"futureBlock\":\"the block at which to get allocation information. Should be a future block.\",\"operatorSet\":\"the operator set to query\",\"operators\":\"the list of operators whose slashable stakes will be returned\",\"strategies\":\"the strategies that each slashable stake corresponds to\"}},\"getOperatorSetCount(address)\":{\"params\":{\"avs\":\"the AVS to query\"}},\"getRegisteredSets(address)\":{\"params\":{\"operator\":\"The operator address to query.\"}},\"getStrategiesInOperatorSet((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getStrategyAllocations(address,address)\":{\"details\":\"Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the list of all operator sets the operator has allocations for\",\"_1\":\"the corresponding list of allocations from the specific `strategy`\"}},\"initialize(address,uint256)\":{\"details\":\"Initializes the initial owner and paused status.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"params\":{\"operator\":\"The operator to query\",\"operatorSet\":\"The operator set to query\"}},\"isOperatorSlashable(address,(address,uint32))\":{\"params\":{\"operator\":\"the operator to check slashability for\",\"operatorSet\":\"the operator set to check slashability for\"}},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"details\":\"Updates encumberedMagnitude for the updated strategies\",\"params\":{\"operator\":\"the operator to modify allocations for\",\"params\":\"array of magnitude adjustments for one or more operator sets\"}},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"details\":\"After registering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. registerOperator` method to complete registration. This call MUST succeed in order for registration to be successful.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST already exist in the operator set\",\"params\":{\"avs\":\"the avs to remove strategies for\",\"operatorSetId\":\"the operator set to remove strategies from\",\"strategies\":\"the strategies to remove\"}},\"setAVSRegistrar(address,address)\":{\"params\":{\"registrar\":\"the new registrar address\"}},\"setAllocationDelay(address,uint32)\":{\"params\":{\"delay\":\"the allocation delay in blocks\",\"operator\":\"The operator to set the delay on behalf of.\"}},\"slashOperator(address,(address,uint32,address[],uint256[],string))\":{\"details\":\"For each strategy:      1. Reduces the operator's current allocation magnitude by wadToSlash proportion.      2. Reduces the strategy's max and encumbered magnitudes proportionally.      3. If there is a pending deallocation, reduces it proportionally.      4. Updates the operator's shares in the DelegationManager.Small slashing amounts may not result in actual token burns due to      rounding, which will result in small amounts of tokens locked in the contract      rather than fully burning through the burn mechanism.\",\"params\":{\"avs\":\"The AVS address initiating the slash.\",\"params\":\"The slashing parameters, containing:  - operator: The operator to slash.  - operatorSetId: The ID of the operator set the operator is being slashed from.  - strategies: Array of strategies to slash allocations from (must be in ascending order).  - wadsToSlash: Array of proportions to slash from each strategy (must be between 0 and 1e18).  - description: Description of why the operator was slashed.\"}},\"updateAVSMetadataURI(address,string)\":{\"details\":\"Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an AVS.\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"v1.1.1\\\")\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when an AVS updates their metadata URI (Uniform Resource Identifier).\"},\"AVSRegistrarSet(address,address)\":{\"notice\":\"Emitted when an AVS configures the address that will handle registration/deregistration\"},\"AllocationDelaySet(address,uint32,uint32)\":{\"notice\":\"Emitted when operator updates their allocation delay.\"},\"AllocationUpdated(address,(address,uint32),address,uint64,uint32)\":{\"notice\":\"Emitted when an operator's magnitude is updated for a given operatorSet and strategy\"},\"EncumberedMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when operator's encumbered magnitude is updated for a given strategy\"},\"MaxMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when an operator's max magnitude is updated for a given strategy\"},\"OperatorAddedToOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is added to an operator set.\"},\"OperatorRemovedFromOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is removed from an operator set.\"},\"OperatorSetCreated((address,uint32))\":{\"notice\":\"Emitted when an operator set is created by an AVS.\"},\"OperatorSlashed(address,(address,uint32),address[],uint256[],string)\":{\"notice\":\"Emitted when an operator is slashed by an operator set for a strategy `wadSlashed` is the proportion of the operator's total delegated stake that was slashed\"},\"StrategyAddedToOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is added to an operator set.\"},\"StrategyRemovedFromOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is removed from an operator set.\"}},\"kind\":\"user\",\"methods\":{\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to add strategies to an operator set\"},\"clearDeallocationQueue(address,address[],uint16[])\":{\"notice\":\"This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed.\"},\"createOperatorSets(address,(uint32,address[])[])\":{\"notice\":\"Allows an AVS to create new operator sets, defining strategies that the operator set uses\"},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"notice\":\"Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed.\"},\"getAVSRegistrar(address)\":{\"notice\":\"Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)\"},\"getAllocatableMagnitude(address,address)\":{\"notice\":\"For a strategy, get the amount of magnitude not currently allocated to any operator set\"},\"getAllocatedSets(address)\":{\"notice\":\"Returns the list of operator sets the operator has current or pending allocations/deallocations in\"},\"getAllocatedStake((address,uint32),address[],address[])\":{\"notice\":\"Returns the current allocated stake, irrespective of the operator's slashable status for the operatorSet.\"},\"getAllocatedStrategies(address,(address,uint32))\":{\"notice\":\"Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set.\"},\"getAllocation(address,(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocation an operator has from a strategy to an operator set\"},\"getAllocationDelay(address)\":{\"notice\":\"Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false.\"},\"getAllocations(address[],(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocations for multiple operators from a strategy to an operator set\"},\"getEncumberedMagnitude(address,address)\":{\"notice\":\"For a strategy, get the amount of magnitude that is allocated across one or more operator sets\"},\"getMaxMagnitude(address,address)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategy\"},\"getMaxMagnitudes(address,address[])\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies\"},\"getMaxMagnitudes(address[],address)\":{\"notice\":\"Returns the maximum magnitudes each operator can allocate for the given strategy\"},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies at a given block number\"},\"getMemberCount((address,uint32))\":{\"notice\":\"Returns the number of operators registered to an operatorSet.\"},\"getMembers((address,uint32))\":{\"notice\":\"Returns all the operators registered to an operator set\"},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"notice\":\"Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set. Note that this function will return 0 for the slashable stake if the operator is not slashable at the time of the call.\"},\"getOperatorSetCount(address)\":{\"notice\":\"Returns the number of operator sets for the AVS\"},\"getRegisteredSets(address)\":{\"notice\":\"Returns a list of all operator sets the operator is registered for\"},\"getStrategiesInOperatorSet((address,uint32))\":{\"notice\":\"Returns an array of strategies in the operatorSet.\"},\"getStrategyAllocations(address,address)\":{\"notice\":\"Given a strategy, returns a list of operator sets and corresponding stake allocations.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"notice\":\"Returns whether the operator is registered for the operator set\"},\"isOperatorSet((address,uint32))\":{\"notice\":\"Returns whether the operator set exists\"},\"isOperatorSlashable(address,(address,uint32))\":{\"notice\":\"Returns whether an operator is slashable by an operator set. This returns true if the operator is registered or their slashableUntil block has not passed. This is because even when operators are deregistered, they still remain slashable for a period of time.\"},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"notice\":\"Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated.\"},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"notice\":\"Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to remove strategies from an operator set\"},\"setAVSRegistrar(address,address)\":{\"notice\":\"Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address.\"},\"setAllocationDelay(address,uint32)\":{\"notice\":\"Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable.\"},\"slashOperator(address,(address,uint32,address[],uint256[],string))\":{\"notice\":\"Called by an AVS to slash an operator in a given operator set. The operator must be registered and have slashable stake allocated to the operator set.\"},\"updateAVSMetadataURI(address,string)\":{\"notice\":\"Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated.\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/test/mocks/AllocationManagerMock.sol\":\"AllocationManagerMock\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/\"],\"viaIR\":true},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc\",\"dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x9f95d00bc0a22ec850e5cc6bcda9db2485f87b627232f9360571dbe87a0ee035\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://96d1e4f044b7337f83f970202b5ce5154970bb8745646b5c0e51cab58713c811\",\"dweb:/ipfs/QmX7mkfacMVKKXJB5GixQqtfYJ3jCkQzTRu4eUy4RjBNeM\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xcb910d9afbaf14c2ec32828e28ca72f1dba35c7371f487505d2a73da2c576009\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d801fbeeb84ce1dde84dcfa85d519b726f8ba928c76dc4b24d9317299a7a1ab0\",\"dweb:/ipfs/QmfAVYxxJry6GTML7jtQfoR4H1ZFpF6XYSpFZHZ8QTC61B\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xbf084857bc21f2e3752072df667a3025ba73431eaa56852562b0dc3594361d75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8a5eb881299b8949063e8d7eecdadbae92f3c84a129aa58b2e5f995714fb3b23\",\"dweb:/ipfs/QmRsG6BgSS3UcXMDjjucKaNvzGjHa85ph22atnz6hzW9xo\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071\",\"dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/eigenlayer-middleware/test/mocks/AllocationManagerMock.sol\":{\"keccak256\":\"0xc09ee47f9fda39d4446ce0a08989227ad46668735dc135210ad39cba0a7188fe\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://15847670d26d4066fe6b691a1950e3f6d68f155a5e93ef965cdd61fd960a78e9\",\"dweb:/ipfs/QmcAQf6pBVwBhS8A4U1J4tmPaKd5d2qrSs135SdrmPJKVL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AlreadyMemberOfSet"},{"inputs":[],"type":"error","name":"InputArrayLengthMismatch"},{"inputs":[],"type":"error","name":"InsufficientMagnitude"},{"inputs":[],"type":"error","name":"InvalidAVSRegistrar"},{"inputs":[],"type":"error","name":"InvalidCaller"},{"inputs":[],"type":"error","name":"InvalidOperator"},{"inputs":[],"type":"error","name":"InvalidOperatorSet"},{"inputs":[],"type":"error","name":"InvalidWadToSlash"},{"inputs":[],"type":"error","name":"ModificationAlreadyPending"},{"inputs":[],"type":"error","name":"NonexistentAVSMetadata"},{"inputs":[],"type":"error","name":"NotMemberOfSet"},{"inputs":[],"type":"error","name":"OperatorNotSlashable"},{"inputs":[],"type":"error","name":"SameMagnitude"},{"inputs":[],"type":"error","name":"StrategiesMustBeInAscendingOrder"},{"inputs":[],"type":"error","name":"StrategyAlreadyInOperatorSet"},{"inputs":[],"type":"error","name":"StrategyNotInOperatorSet"},{"inputs":[],"type":"error","name":"UninitializedAllocationDelay"},{"inputs":[{"internalType":"address","name":"avs","type":"address","indexed":true},{"internalType":"string","name":"metadataURI","type":"string","indexed":false}],"type":"event","name":"AVSMetadataURIUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"avs","type":"address","indexed":false},{"internalType":"contract IAVSRegistrar","name":"registrar","type":"address","indexed":false}],"type":"event","name":"AVSRegistrarSet","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":false},{"internalType":"uint32","name":"delay","type":"uint32","indexed":false},{"internalType":"uint32","name":"effectBlock","type":"uint32","indexed":false}],"type":"event","name":"AllocationDelaySet","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":false},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint64","name":"magnitude","type":"uint64","indexed":false},{"internalType":"uint32","name":"effectBlock","type":"uint32","indexed":false}],"type":"event","name":"AllocationUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":false},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint64","name":"encumberedMagnitude","type":"uint64","indexed":false}],"type":"event","name":"EncumberedMagnitudeUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":false},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint64","name":"maxMagnitude","type":"uint64","indexed":false}],"type":"event","name":"MaxMagnitudeUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false}],"type":"event","name":"OperatorAddedToOperatorSet","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false}],"type":"event","name":"OperatorRemovedFromOperatorSet","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false}],"type":"event","name":"OperatorSetCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":false},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]","indexed":false},{"internalType":"uint256[]","name":"wadSlashed","type":"uint256[]","indexed":false},{"internalType":"string","name":"description","type":"string","indexed":false}],"type":"event","name":"OperatorSlashed","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyAddedToOperatorSet","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyRemovedFromOperatorSet","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DEALLOCATION_DELAY","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"operatorSetId","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"addStrategiesToOperatorSet"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint16[]","name":"numToClear","type":"uint16[]"}],"stateMutability":"nonpayable","type":"function","name":"clearDeallocationQueue"},{"inputs":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"struct IAllocationManagerTypes.CreateSetParams[]","name":"params","type":"tuple[]","components":[{"internalType":"uint32","name":"operatorSetId","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}]}],"stateMutability":"nonpayable","type":"function","name":"createOperatorSets"},{"inputs":[{"internalType":"struct IAllocationManagerTypes.DeregisterParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32[]","name":"operatorSetIds","type":"uint32[]"}]}],"stateMutability":"nonpayable","type":"function","name":"deregisterFromOperatorSets"},{"inputs":[{"internalType":"address","name":"avs","type":"address"}],"stateMutability":"view","type":"function","name":"getAVSRegistrar","outputs":[{"internalType":"contract IAVSRegistrar","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"stateMutability":"view","type":"function","name":"getAllocatableMagnitude","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getAllocatedSets","outputs":[{"internalType":"struct OperatorSet[]","name":"","type":"tuple[]","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address[]","name":"operators","type":"address[]"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}],"stateMutability":"view","type":"function","name":"getAllocatedStake","outputs":[{"internalType":"uint256[][]","name":"slashableStake","type":"uint256[][]"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"stateMutability":"view","type":"function","name":"getAllocatedStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"getAllocatedStrategies","outputs":[{"internalType":"contract IStrategy[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"stateMutability":"view","type":"function","name":"getAllocation","outputs":[{"internalType":"struct IAllocationManagerTypes.Allocation","name":"","type":"tuple","components":[{"internalType":"uint64","name":"currentMagnitude","type":"uint64"},{"internalType":"int128","name":"pendingDiff","type":"int128"},{"internalType":"uint32","name":"effectBlock","type":"uint32"}]}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getAllocationDelay","outputs":[{"internalType":"bool","name":"isSet","type":"bool"},{"internalType":"uint32","name":"delay","type":"uint32"}]},{"inputs":[{"internalType":"address[]","name":"operators","type":"address[]"},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"stateMutability":"view","type":"function","name":"getAllocations","outputs":[{"internalType":"struct IAllocationManagerTypes.Allocation[]","name":"","type":"tuple[]","components":[{"internalType":"uint64","name":"currentMagnitude","type":"uint64"},{"internalType":"int128","name":"pendingDiff","type":"int128"},{"internalType":"uint32","name":"effectBlock","type":"uint32"}]}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"stateMutability":"view","type":"function","name":"getEncumberedMagnitude","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"stateMutability":"view","type":"function","name":"getMaxMagnitude","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[{"internalType":"address[]","name":"operators","type":"address[]"},{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"stateMutability":"view","type":"function","name":"getMaxMagnitudes","outputs":[{"internalType":"uint64[]","name":"","type":"uint64[]"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}],"stateMutability":"view","type":"function","name":"getMaxMagnitudes","outputs":[{"internalType":"uint64[]","name":"","type":"uint64[]"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint32","name":"blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getMaxMagnitudesAtBlock","outputs":[{"internalType":"uint64[]","name":"","type":"uint64[]"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"getMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"getMembers","outputs":[{"internalType":"address[]","name":"operators","type":"address[]"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address[]","name":"operators","type":"address[]"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint32","name":"futureBlock","type":"uint32"}],"stateMutability":"view","type":"function","name":"getMinimumSlashableStake","outputs":[{"internalType":"uint256[][]","name":"slashableStake","type":"uint256[][]"}]},{"inputs":[{"internalType":"address","name":"avs","type":"address"}],"stateMutability":"view","type":"function","name":"getOperatorSetCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getRegisteredSets","outputs":[{"internalType":"struct OperatorSet[]","name":"operatorSets","type":"tuple[]","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"getStrategiesInOperatorSet","outputs":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"stateMutability":"view","type":"function","name":"getStrategyAllocations","outputs":[{"internalType":"struct OperatorSet[]","name":"","type":"tuple[]","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"struct IAllocationManagerTypes.Allocation[]","name":"","type":"tuple[]","components":[{"internalType":"uint64","name":"currentMagnitude","type":"uint64"},{"internalType":"int128","name":"pendingDiff","type":"int128"},{"internalType":"uint32","name":"effectBlock","type":"uint32"}]}]},{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"uint256","name":"initialPausedStatus","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"isMemberOfOperatorSet","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"isOperatorSet","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"isOperatorSlashable","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct IAllocationManagerTypes.AllocateParams[]","name":"params","type":"tuple[]","components":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint64[]","name":"newMagnitudes","type":"uint64[]"}]}],"stateMutability":"nonpayable","type":"function","name":"modifyAllocations"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct IAllocationManagerTypes.RegisterParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32[]","name":"operatorSetIds","type":"uint32[]"},{"internalType":"bytes","name":"data","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"registerForOperatorSets"},{"inputs":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"operatorSetId","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"removeStrategiesFromOperatorSet"},{"inputs":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"contract IAVSRegistrar","name":"registrar","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setAVSRegistrar"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint32","name":"delay","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"setAllocationDelay"},{"inputs":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"struct IAllocationManagerTypes.SlashingParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint32","name":"operatorSetId","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"wadsToSlash","type":"uint256[]"},{"internalType":"string","name":"description","type":"string"}]}],"stateMutability":"nonpayable","type":"function","name":"slashOperator"},{"inputs":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateAVSMetadataURI"},{"inputs":[],"stateMutability":"pure","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"addStrategiesToOperatorSet(address,uint32,address[])":{"details":"Strategies MUST NOT already exist in the operator set","params":{"avs":"the avs to set strategies for","operatorSetId":"the operator set to add strategies to","strategies":"the strategies to add"}},"clearDeallocationQueue(address,address[],uint16[])":{"details":"can be called permissionlessly by anyone","params":{"numToClear":"a list of number of pending deallocations to clear for each strategy","operator":"address to clear deallocations for","strategies":"a list of strategies to clear deallocations for"}},"deregisterFromOperatorSets((address,address,uint32[]))":{"details":"After deregistering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. deregisterOperator` method to complete deregistration. This call MUST succeed in order for deregistration to be successful."},"getAllocatableMagnitude(address,address)":{"params":{"operator":"the operator to query","strategy":"the strategy to get allocatable magnitude for"},"returns":{"_0":"magnitude available to be allocated to an operator set"}},"getAllocatedSets(address)":{"params":{"operator":"the operator to query"},"returns":{"_0":"the list of operator sets the operator has current or pending allocations/deallocations in"}},"getAllocatedStake((address,uint32),address[],address[])":{"params":{"operatorSet":"the operator set to query","operators":"the operators to query","strategies":"the strategies to query"}},"getAllocatedStrategies(address,(address,uint32))":{"params":{"operator":"the operator to query","operatorSet":"the operator set to query"},"returns":{"_0":"the list of strategies"}},"getAllocation(address,(address,uint32),address)":{"params":{"operator":"the operator to query","operatorSet":"the operator set to query","strategy":"the strategy to query"},"returns":{"_0":"the current/pending stake allocation"}},"getAllocationDelay(address)":{"details":"The operator must have a configured delay before allocating magnitude","params":{"operator":"The operator to query"},"returns":{"delay":"The time in blocks between allocating magnitude and magnitude becoming slashable","isSet":"Whether the operator has configured a delay"}},"getAllocations(address[],(address,uint32),address)":{"params":{"operatorSet":"the operator set to query","operators":"the operators to query","strategy":"the strategy to query"},"returns":{"_0":"each operator's allocation"}},"getEncumberedMagnitude(address,address)":{"params":{"operator":"the operator to query","strategy":"the strategy to get allocatable magnitude for"},"returns":{"_0":"currently allocated magnitude"}},"getMaxMagnitude(address,address)":{"details":"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.","params":{"operator":"the operator to query","strategy":"the strategy to get the max magnitude for"},"returns":{"_0":"the max magnitude for the strategy"}},"getMaxMagnitudes(address,address[])":{"details":"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.","params":{"operator":"the operator to query","strategies":"the strategies to get the max magnitudes for"},"returns":{"_0":"the max magnitudes for each strategy"}},"getMaxMagnitudes(address[],address)":{"details":"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.","params":{"operators":"the operators to query","strategy":"the strategy to get the max magnitudes for"},"returns":{"_0":"the max magnitudes for each operator"}},"getMaxMagnitudesAtBlock(address,address[],uint32)":{"details":"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.","params":{"blockNumber":"the blockNumber at which to check the max magnitudes","operator":"the operator to query","strategies":"the strategies to get the max magnitudes for"},"returns":{"_0":"the max magnitudes for each strategy"}},"getMemberCount((address,uint32))":{"params":{"operatorSet":"The operatorSet to get the member count for"}},"getMembers((address,uint32))":{"params":{"operatorSet":"The operatorSet to query."}},"getMinimumSlashableStake((address,uint32),address[],address[],uint32)":{"details":"This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents. This method does not consider slashable stake in the withdrawal queue even though there could be slashable stake in the queue.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.","params":{"futureBlock":"the block at which to get allocation information. Should be a future block.","operatorSet":"the operator set to query","operators":"the list of operators whose slashable stakes will be returned","strategies":"the strategies that each slashable stake corresponds to"}},"getOperatorSetCount(address)":{"params":{"avs":"the AVS to query"}},"getRegisteredSets(address)":{"params":{"operator":"The operator address to query."}},"getStrategiesInOperatorSet((address,uint32))":{"params":{"operatorSet":"The operatorSet to query."}},"getStrategyAllocations(address,address)":{"details":"Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.","params":{"operator":"the operator to query","strategy":"the strategy to query"},"returns":{"_0":"the list of all operator sets the operator has allocations for","_1":"the corresponding list of allocations from the specific `strategy`"}},"initialize(address,uint256)":{"details":"Initializes the initial owner and paused status."},"isMemberOfOperatorSet(address,(address,uint32))":{"params":{"operator":"The operator to query","operatorSet":"The operator set to query"}},"isOperatorSlashable(address,(address,uint32))":{"params":{"operator":"the operator to check slashability for","operatorSet":"the operator set to check slashability for"}},"modifyAllocations(address,((address,uint32),address[],uint64[])[])":{"details":"Updates encumberedMagnitude for the updated strategies","params":{"operator":"the operator to modify allocations for","params":"array of magnitude adjustments for one or more operator sets"}},"registerForOperatorSets(address,(address,uint32[],bytes))":{"details":"After registering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. registerOperator` method to complete registration. This call MUST succeed in order for registration to be successful."},"removeStrategiesFromOperatorSet(address,uint32,address[])":{"details":"Strategies MUST already exist in the operator set","params":{"avs":"the avs to remove strategies for","operatorSetId":"the operator set to remove strategies from","strategies":"the strategies to remove"}},"setAVSRegistrar(address,address)":{"params":{"registrar":"the new registrar address"}},"setAllocationDelay(address,uint32)":{"params":{"delay":"the allocation delay in blocks","operator":"The operator to set the delay on behalf of."}},"slashOperator(address,(address,uint32,address[],uint256[],string))":{"details":"For each strategy:      1. Reduces the operator's current allocation magnitude by wadToSlash proportion.      2. Reduces the strategy's max and encumbered magnitudes proportionally.      3. If there is a pending deallocation, reduces it proportionally.      4. Updates the operator's shares in the DelegationManager.Small slashing amounts may not result in actual token burns due to      rounding, which will result in small amounts of tokens locked in the contract      rather than fully burning through the burn mechanism.","params":{"avs":"The AVS address initiating the slash.","params":"The slashing parameters, containing:  - operator: The operator to slash.  - operatorSetId: The ID of the operator set the operator is being slashed from.  - strategies: Array of strategies to slash allocations from (must be in ascending order).  - wadsToSlash: Array of proportions to slash from each strategy (must be between 0 and 1e18).  - description: Description of why the operator was slashed."}},"updateAVSMetadataURI(address,string)":{"details":"Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.","params":{"metadataURI":"The URI for metadata associated with an AVS."}},"version()":{"returns":{"_0":"The version string in SemVer format (e.g., \"v1.1.1\")"}}},"version":1},"userdoc":{"kind":"user","methods":{"addStrategiesToOperatorSet(address,uint32,address[])":{"notice":"Allows an AVS to add strategies to an operator set"},"clearDeallocationQueue(address,address[],uint16[])":{"notice":"This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed."},"createOperatorSets(address,(uint32,address[])[])":{"notice":"Allows an AVS to create new operator sets, defining strategies that the operator set uses"},"deregisterFromOperatorSets((address,address,uint32[]))":{"notice":"Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed."},"getAVSRegistrar(address)":{"notice":"Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)"},"getAllocatableMagnitude(address,address)":{"notice":"For a strategy, get the amount of magnitude not currently allocated to any operator set"},"getAllocatedSets(address)":{"notice":"Returns the list of operator sets the operator has current or pending allocations/deallocations in"},"getAllocatedStake((address,uint32),address[],address[])":{"notice":"Returns the current allocated stake, irrespective of the operator's slashable status for the operatorSet."},"getAllocatedStrategies(address,(address,uint32))":{"notice":"Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set."},"getAllocation(address,(address,uint32),address)":{"notice":"Returns the current/pending stake allocation an operator has from a strategy to an operator set"},"getAllocationDelay(address)":{"notice":"Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false."},"getAllocations(address[],(address,uint32),address)":{"notice":"Returns the current/pending stake allocations for multiple operators from a strategy to an operator set"},"getEncumberedMagnitude(address,address)":{"notice":"For a strategy, get the amount of magnitude that is allocated across one or more operator sets"},"getMaxMagnitude(address,address)":{"notice":"Returns the maximum magnitude an operator can allocate for the given strategy"},"getMaxMagnitudes(address,address[])":{"notice":"Returns the maximum magnitude an operator can allocate for the given strategies"},"getMaxMagnitudes(address[],address)":{"notice":"Returns the maximum magnitudes each operator can allocate for the given strategy"},"getMaxMagnitudesAtBlock(address,address[],uint32)":{"notice":"Returns the maximum magnitude an operator can allocate for the given strategies at a given block number"},"getMemberCount((address,uint32))":{"notice":"Returns the number of operators registered to an operatorSet."},"getMembers((address,uint32))":{"notice":"Returns all the operators registered to an operator set"},"getMinimumSlashableStake((address,uint32),address[],address[],uint32)":{"notice":"Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set. Note that this function will return 0 for the slashable stake if the operator is not slashable at the time of the call."},"getOperatorSetCount(address)":{"notice":"Returns the number of operator sets for the AVS"},"getRegisteredSets(address)":{"notice":"Returns a list of all operator sets the operator is registered for"},"getStrategiesInOperatorSet((address,uint32))":{"notice":"Returns an array of strategies in the operatorSet."},"getStrategyAllocations(address,address)":{"notice":"Given a strategy, returns a list of operator sets and corresponding stake allocations."},"isMemberOfOperatorSet(address,(address,uint32))":{"notice":"Returns whether the operator is registered for the operator set"},"isOperatorSet((address,uint32))":{"notice":"Returns whether the operator set exists"},"isOperatorSlashable(address,(address,uint32))":{"notice":"Returns whether an operator is slashable by an operator set. This returns true if the operator is registered or their slashableUntil block has not passed. This is because even when operators are deregistered, they still remain slashable for a period of time."},"modifyAllocations(address,((address,uint32),address[],uint64[])[])":{"notice":"Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated."},"registerForOperatorSets(address,(address,uint32[],bytes))":{"notice":"Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable."},"removeStrategiesFromOperatorSet(address,uint32,address[])":{"notice":"Allows an AVS to remove strategies from an operator set"},"setAVSRegistrar(address,address)":{"notice":"Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address."},"setAllocationDelay(address,uint32)":{"notice":"Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable."},"slashOperator(address,(address,uint32,address[],uint256[],string))":{"notice":"Called by an AVS to slash an operator in a given operator set. The operator must be registered and have slashable stake allocated to the operator set."},"updateAVSMetadataURI(address,string)":{"notice":"Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated."},"version()":{"notice":"Returns the semantic version string of the contract."}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/","@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/","@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/test/mocks/AllocationManagerMock.sol":"AllocationManagerMock"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol":{"keccak256":"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d","urls":["bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc","dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol":{"keccak256":"0x9f95d00bc0a22ec850e5cc6bcda9db2485f87b627232f9360571dbe87a0ee035","urls":["bzz-raw://96d1e4f044b7337f83f970202b5ce5154970bb8745646b5c0e51cab58713c811","dweb:/ipfs/QmX7mkfacMVKKXJB5GixQqtfYJ3jCkQzTRu4eUy4RjBNeM"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc","urls":["bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72","dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol":{"keccak256":"0xcb910d9afbaf14c2ec32828e28ca72f1dba35c7371f487505d2a73da2c576009","urls":["bzz-raw://d801fbeeb84ce1dde84dcfa85d519b726f8ba928c76dc4b24d9317299a7a1ab0","dweb:/ipfs/QmfAVYxxJry6GTML7jtQfoR4H1ZFpF6XYSpFZHZ8QTC61B"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0xbf084857bc21f2e3752072df667a3025ba73431eaa56852562b0dc3594361d75","urls":["bzz-raw://8a5eb881299b8949063e8d7eecdadbae92f3c84a129aa58b2e5f995714fb3b23","dweb:/ipfs/QmRsG6BgSS3UcXMDjjucKaNvzGjHa85ph22atnz6hzW9xo"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol":{"keccak256":"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812","urls":["bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41","dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol":{"keccak256":"0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04","urls":["bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071","dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol":{"keccak256":"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b","urls":["bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c","dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3","urls":["bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c","dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"],"license":"MIT"},"lib/eigenlayer-middleware/test/mocks/AllocationManagerMock.sol":{"keccak256":"0xc09ee47f9fda39d4446ce0a08989227ad46668735dc135210ad39cba0a7188fe","urls":["bzz-raw://15847670d26d4066fe6b691a1950e3f6d68f155a5e93ef965cdd61fd960a78e9","dweb:/ipfs/QmcAQf6pBVwBhS8A4U1J4tmPaKd5d2qrSs135SdrmPJKVL"],"license":"BUSL-1.1"}},"version":1},"id":131}