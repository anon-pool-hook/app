{"abi":[{"type":"function","name":"getOperatorSocket","inputs":[{"name":"_operatorId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"operatorIdToSocket","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"setOperatorSocket","inputs":[{"name":"_operatorId","type":"bytes32","internalType":"bytes32"},{"name":"_socket","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"slashingRegistryCoordinator","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"error","name":"OnlySlashingRegistryCoordinator","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getOperatorSocket(bytes32)":"10bea0d7","operatorIdToSocket(bytes32)":"af65fdfc","setOperatorSocket(bytes32,string)":"f043367e","slashingRegistryCoordinator()":"cf1d6b42"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySlashingRegistryCoordinator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_operatorId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorSocket\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"operatorIdToSocket\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_socket\",\"type\":\"string\"}],\"name\":\"setOperatorSocket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slashingRegistryCoordinator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"getOperatorSocket(bytes32)\":{\"params\":{\"_operatorId\":\"The id of the operator to query.\"},\"returns\":{\"_0\":\"The stored socket associated with the operator.\"}},\"setOperatorSocket(bytes32,string)\":{\"details\":\"Only callable by the SlashingRegistryCoordinator.\",\"params\":{\"_operatorId\":\"The id of the operator to set the socket for.\",\"_socket\":\"The socket (any arbitrary string as deemed useful by an AVS) to set.\"}}},\"title\":\"Storage variables for the `SocketRegistry` contract.\",\"version\":1},\"userdoc\":{\"errors\":{\"OnlySlashingRegistryCoordinator()\":[{\"notice\":\"Thrown when the caller is not the SlashingRegistryCoordinator\"}]},\"kind\":\"user\",\"methods\":{\"getOperatorSocket(bytes32)\":{\"notice\":\"Gets the stored socket for an operator.\"},\"operatorIdToSocket(bytes32)\":{\"notice\":\"A mapping from operator IDs to their sockets\"},\"setOperatorSocket(bytes32,string)\":{\"notice\":\"Sets the socket for an operator.\"},\"slashingRegistryCoordinator()\":{\"notice\":\"The address of the SlashingRegistryCoordinator\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/src/SocketRegistryStorage.sol\":\"SocketRegistryStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/\"],\"viaIR\":true},\"sources\":{\"lib/eigenlayer-middleware/src/SocketRegistryStorage.sol\":{\"keccak256\":\"0xf76be331ffcb59d971717e241a25e1f4f874cf5c699bd14d438dc4d95d90f000\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a205aae69d10ce89ae2c1ae4e51a4773e05bbf6cb786a2cca1068a16ded632ad\",\"dweb:/ipfs/QmPcu6HvwJhQoRrS3e6hVvKNSdDgc3XmQwJqjEadvH5MDV\"]},\"lib/eigenlayer-middleware/src/interfaces/ISocketRegistry.sol\":{\"keccak256\":\"0x5d4497f995bdc0f56d242b218065a9d0b9ab7f8b47421e66cb3ae37e25674d8f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://47cfc86fd6147928011e8ab8ca3689b3cee0b155a4b01700ac7e8146012d86da\",\"dweb:/ipfs/QmcqDwW5WHKWi5arVERE1j7RikN7GuQtmfX7fpSyRu5zBe\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"OnlySlashingRegistryCoordinator"},{"inputs":[{"internalType":"bytes32","name":"_operatorId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getOperatorSocket","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"operatorIdToSocket","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"_operatorId","type":"bytes32"},{"internalType":"string","name":"_socket","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setOperatorSocket"},{"inputs":[],"stateMutability":"view","type":"function","name":"slashingRegistryCoordinator","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"getOperatorSocket(bytes32)":{"params":{"_operatorId":"The id of the operator to query."},"returns":{"_0":"The stored socket associated with the operator."}},"setOperatorSocket(bytes32,string)":{"details":"Only callable by the SlashingRegistryCoordinator.","params":{"_operatorId":"The id of the operator to set the socket for.","_socket":"The socket (any arbitrary string as deemed useful by an AVS) to set."}}},"version":1},"userdoc":{"kind":"user","methods":{"getOperatorSocket(bytes32)":{"notice":"Gets the stored socket for an operator."},"operatorIdToSocket(bytes32)":{"notice":"A mapping from operator IDs to their sockets"},"setOperatorSocket(bytes32,string)":{"notice":"Sets the socket for an operator."},"slashingRegistryCoordinator()":{"notice":"The address of the SlashingRegistryCoordinator"}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/","@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/","@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/src/SocketRegistryStorage.sol":"SocketRegistryStorage"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/eigenlayer-middleware/src/SocketRegistryStorage.sol":{"keccak256":"0xf76be331ffcb59d971717e241a25e1f4f874cf5c699bd14d438dc4d95d90f000","urls":["bzz-raw://a205aae69d10ce89ae2c1ae4e51a4773e05bbf6cb786a2cca1068a16ded632ad","dweb:/ipfs/QmPcu6HvwJhQoRrS3e6hVvKNSdDgc3XmQwJqjEadvH5MDV"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/ISocketRegistry.sol":{"keccak256":"0x5d4497f995bdc0f56d242b218065a9d0b9ab7f8b47421e66cb3ae37e25674d8f","urls":["bzz-raw://47cfc86fd6147928011e8ab8ca3689b3cee0b155a4b01700ac7e8146012d86da","dweb:/ipfs/QmcqDwW5WHKWi5arVERE1j7RikN7GuQtmfX7fpSyRu5zBe"],"license":"BUSL-1.1"}},"version":1},"id":107}