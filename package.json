{
  "name": "hello-world-avs",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "start:operator": "ts-node operator/index.ts",
    "start:traffic": "ts-node operator/createNewTasks.ts",
    "start:anvil": "anvil",
    "deploy:core": "cd avs/contract && forge script script/DeployEigenLayerCore.sol --rpc-url http://localhost:8545 --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 --broadcast",
    "deploy:avs": "cd avs/contract && forge script script/AVSDeployer.s.sol --rpc-url http://localhost:8545 --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 --broadcast",
    "deploy:hook": "cd hook && forge script script/HookDeployer.s.sol --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 --broadcast",
    "test:avs": "cd avs/contract && forge test",
    "test:hook": "cd hook && forge test",
    "test:all": "npm run test:avs && npm run test:hook",
    "build:avs": "cd avs/contract && forge build",
    "build:hook": "cd hook && forge build",
    "build:all": "npm run build:avs && npm run build:hook",
    "lifecycle": "node lifecycle.js",
    "demo": "node demo.js",
    "quick-start": "npm run start:anvil & sleep 5 && npm run deploy:core && npm run deploy:avs && npm run start:operator",
    "create-distributions-root": "cd avs/contract && forge script script/SetupDistributions.s.sol --rpc-url http://localhost:8545 --broadcast -v --sender 0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266",
    "claim-distributions": "cd avs/contract && forge script script/SetupDistributions.s.sol --rpc-url http://localhost:8545 --broadcast --sig \"executeProcessClaim()\" -v --sender 0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266",
    "build": "tsc",
    "extract:abis": "node utils/abis.js",
    "test": "NODE_OPTIONS=\"$NODE_OPTIONS --experimental-vm-modules\" npx jest",
    "sp1:generate-proof": "cd order-engine && cargo run --bin zkverify -- --generate-proof",
    "sp1:verify-local": "cd order-engine && cargo run --bin zkverify -- --verify-locally",
    "zkverify:demo": "ts-node operator/zkverify-client.ts",
    "zkverify:integration": "npm run sp1:generate-proof && npm run zkverify:demo",
    "zkverify:test": "npm test zkverify-integration.test.ts",
    "zkverify:operator": "ts-node operator/zkverify-operator.ts",
    "zkverify:full-demo": "npm run sp1:generate-proof && npm run zkverify:demo && npm run zkverify:test",
    "deploy:zkverify-bridge": "cd avs/contract && forge script script/DeployZkVerifyBridge.s.sol --rpc-url $RPC_URL --private-key $PRIVATE_KEY --broadcast",
    "deploy:testnet": "chmod +x deploy/deploy-testnet.sh && ./deploy/deploy-testnet.sh",
    "benchmark:sp1": "cd order-engine && SP1_PROVER=network cargo run --release --bin zkverify -- --generate-proof",
    "performance:report": "node -e \"console.log('Performance report: See PERFORMANCE_OPTIMIZATION.md for details')\"",
    "testnet:complete": "npm run deploy:testnet && npm run zkverify:full-demo",
    "demo:hackathon": "node zkverify-hackathon-demo.js",
    "demo:functional": "npx ts-node functional-demo.ts",
    "demo:full": "npm run demo:hackathon && echo '\nüîÑ Running functional demo...\n' && npm run demo:functional",
    "demo:testnet": "node testnet-live-demo.js",
    "demo:live": "echo 'üåê Starting LIVE testnet demo with real transactions...' && npm run demo:testnet"
  },
  "dependencies": {
    "dotenv": "^10.0.0",
    "ethers": "^6.14.4",
    "js-big-decimal": "^2.2.0",
    "viem": "^2.31.3",
    "@polkadot/api": "^12.3.1",
    "@polkadot/keyring": "^12.6.2",
    "@polkadot/util-crypto": "^12.6.2"
  },
  "devDependencies": {
    "@types/jest": "^29.5.13",
    "@types/node": "^20.12.12",
    "@viem/anvil": "^0.0.10",
    "jest": "^29.7.0",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5"
  }
}
